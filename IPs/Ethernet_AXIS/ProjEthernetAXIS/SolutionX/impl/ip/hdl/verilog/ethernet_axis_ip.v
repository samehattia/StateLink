// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ethernet_axis_ip (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_in_TVALID,
        data_out_TREADY,
        fifo_out_TREADY,
        data_in_TDATA,
        data_in_TREADY,
        data_in_TKEEP,
        data_in_TLAST,
        data_out_TDATA,
        data_out_TVALID,
        data_out_TKEEP,
        data_out_TLAST,
        fifo_out_TDATA,
        fifo_out_TVALID,
        fifo_out_TKEEP,
        fifo_out_TLAST,
        rx_fifo_V_data_V_dout,
        rx_fifo_V_data_V_empty_n,
        rx_fifo_V_data_V_read,
        rx_fifo_V_keep_V_dout,
        rx_fifo_V_keep_V_empty_n,
        rx_fifo_V_keep_V_read,
        rx_fifo_V_last_V_dout,
        rx_fifo_V_last_V_empty_n,
        rx_fifo_V_last_V_read
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   data_in_TVALID;
input   data_out_TREADY;
input   fifo_out_TREADY;
input  [63:0] data_in_TDATA;
output   data_in_TREADY;
input  [7:0] data_in_TKEEP;
input  [0:0] data_in_TLAST;
output  [63:0] data_out_TDATA;
output   data_out_TVALID;
output  [7:0] data_out_TKEEP;
output  [0:0] data_out_TLAST;
output  [63:0] fifo_out_TDATA;
output   fifo_out_TVALID;
output  [7:0] fifo_out_TKEEP;
output  [0:0] fifo_out_TLAST;
input  [63:0] rx_fifo_V_data_V_dout;
input   rx_fifo_V_data_V_empty_n;
output   rx_fifo_V_data_V_read;
input  [7:0] rx_fifo_V_keep_V_dout;
input   rx_fifo_V_keep_V_empty_n;
output   rx_fifo_V_keep_V_read;
input  [0:0] rx_fifo_V_last_V_dout;
input   rx_fifo_V_last_V_empty_n;
output   rx_fifo_V_last_V_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_in_TREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    rx_fifo_V_data_V0_status;
wire   [1:0] fsm_state_V_load_load_fu_411_p1;
wire   [1:0] t_V_2_load_fu_447_p1;
reg    ap_predicate_op16_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    data_out_V_data_V_1_ack_in;
reg   [1:0] fsm_state_V_load_reg_1217;
reg    ap_block_state2_io;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [1:0] fsm_state_V_load_reg_1217_pp0_iter1_reg;
wire    tx_fifo_V_data_V_1_ack_in;
reg   [1:0] t_V_reg_1314;
reg   [1:0] t_V_reg_1314_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_1322;
reg   [0:0] or_cond_i_reg_1322_pp0_iter1_reg;
reg   [0:0] tmp_6_i_reg_1326;
reg   [0:0] tmp_6_i_reg_1326_pp0_iter1_reg;
reg    ap_predicate_op193_write_state3;
reg    ap_predicate_op194_write_state3;
reg    ap_block_state3_io;
wire    data_out_V_keep_V_1_ack_in;
wire    data_out_V_last_V_1_ack_in;
wire    tx_fifo_V_keep_V_1_ack_in;
wire    tx_fifo_V_last_V_1_ack_in;
reg    ap_block_state4_pp0_stage0_iter3;
reg   [1:0] fsm_state_V_load_reg_1217_pp0_iter2_reg;
reg   [1:0] t_V_reg_1314_pp0_iter2_reg;
reg   [0:0] or_cond_i_reg_1322_pp0_iter2_reg;
reg   [0:0] tmp_6_i_reg_1326_pp0_iter2_reg;
reg    ap_predicate_op223_write_state4;
reg    ap_predicate_op224_write_state4;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
reg   [63:0] data_out_V_data_V_1_data_in;
reg   [63:0] data_out_V_data_V_1_data_out;
reg    data_out_V_data_V_1_vld_in;
wire    data_out_V_data_V_1_vld_out;
wire    data_out_V_data_V_1_ack_out;
reg   [63:0] data_out_V_data_V_1_payload_A;
reg   [63:0] data_out_V_data_V_1_payload_B;
reg    data_out_V_data_V_1_sel_rd;
reg    data_out_V_data_V_1_sel_wr;
wire    data_out_V_data_V_1_sel;
wire    data_out_V_data_V_1_load_A;
wire    data_out_V_data_V_1_load_B;
reg   [1:0] data_out_V_data_V_1_state;
wire    data_out_V_data_V_1_state_cmp_full;
wire   [7:0] data_out_V_keep_V_1_data_out;
reg    data_out_V_keep_V_1_vld_in;
wire    data_out_V_keep_V_1_vld_out;
wire    data_out_V_keep_V_1_ack_out;
reg    data_out_V_keep_V_1_sel_rd;
wire    data_out_V_keep_V_1_sel;
reg   [1:0] data_out_V_keep_V_1_state;
reg   [0:0] data_out_V_last_V_1_data_in;
reg   [0:0] data_out_V_last_V_1_data_out;
reg    data_out_V_last_V_1_vld_in;
wire    data_out_V_last_V_1_vld_out;
wire    data_out_V_last_V_1_ack_out;
reg   [0:0] data_out_V_last_V_1_payload_A;
reg   [0:0] data_out_V_last_V_1_payload_B;
reg    data_out_V_last_V_1_sel_rd;
reg    data_out_V_last_V_1_sel_wr;
wire    data_out_V_last_V_1_sel;
wire    data_out_V_last_V_1_load_A;
wire    data_out_V_last_V_1_load_B;
reg   [1:0] data_out_V_last_V_1_state;
wire    data_out_V_last_V_1_state_cmp_full;
reg   [63:0] tx_fifo_V_data_V_1_data_out;
reg    tx_fifo_V_data_V_1_vld_in;
wire    tx_fifo_V_data_V_1_vld_out;
wire    tx_fifo_V_data_V_1_ack_out;
reg   [63:0] tx_fifo_V_data_V_1_payload_A;
reg   [63:0] tx_fifo_V_data_V_1_payload_B;
reg    tx_fifo_V_data_V_1_sel_rd;
reg    tx_fifo_V_data_V_1_sel_wr;
wire    tx_fifo_V_data_V_1_sel;
wire    tx_fifo_V_data_V_1_load_A;
wire    tx_fifo_V_data_V_1_load_B;
reg   [1:0] tx_fifo_V_data_V_1_state;
wire    tx_fifo_V_data_V_1_state_cmp_full;
reg   [7:0] tx_fifo_V_keep_V_1_data_in;
reg   [7:0] tx_fifo_V_keep_V_1_data_out;
reg    tx_fifo_V_keep_V_1_vld_in;
wire    tx_fifo_V_keep_V_1_vld_out;
wire    tx_fifo_V_keep_V_1_ack_out;
reg   [7:0] tx_fifo_V_keep_V_1_payload_A;
reg   [7:0] tx_fifo_V_keep_V_1_payload_B;
reg    tx_fifo_V_keep_V_1_sel_rd;
reg    tx_fifo_V_keep_V_1_sel_wr;
wire    tx_fifo_V_keep_V_1_sel;
wire    tx_fifo_V_keep_V_1_load_A;
wire    tx_fifo_V_keep_V_1_load_B;
reg   [1:0] tx_fifo_V_keep_V_1_state;
wire    tx_fifo_V_keep_V_1_state_cmp_full;
reg   [0:0] tx_fifo_V_last_V_1_data_in;
reg   [0:0] tx_fifo_V_last_V_1_data_out;
reg    tx_fifo_V_last_V_1_vld_in;
wire    tx_fifo_V_last_V_1_vld_out;
wire    tx_fifo_V_last_V_1_ack_out;
reg   [0:0] tx_fifo_V_last_V_1_payload_A;
reg   [0:0] tx_fifo_V_last_V_1_payload_B;
reg    tx_fifo_V_last_V_1_sel_rd;
reg    tx_fifo_V_last_V_1_sel_wr;
wire    tx_fifo_V_last_V_1_sel;
wire    tx_fifo_V_last_V_1_load_A;
wire    tx_fifo_V_last_V_1_load_B;
reg   [1:0] tx_fifo_V_last_V_1_state;
wire    tx_fifo_V_last_V_1_state_cmp_full;
reg   [1:0] fsm_state_V;
reg   [15:0] rx_len_V;
reg   [0:0] rx_ready_V;
reg   [47:0] dest_address_V;
reg   [47:0] src_address_V;
reg   [15:0] mac_type_V;
reg   [7:0] ethernet_axi_id_V;
reg   [1:0] word_count_V;
reg   [7:0] axi_command_V;
reg   [15:0] tx_len_V;
reg   [15:0] axis_len_V;
reg   [1:0] send_tx_word_count_V;
reg   [1:0] send_rx_word_count_V;
reg    data_in_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    data_out_TDATA_blk_n;
reg    fifo_out_TDATA_blk_n;
reg    rx_fifo_V_data_V_blk_n;
reg    rx_fifo_V_keep_V_blk_n;
reg    rx_fifo_V_last_V_blk_n;
reg   [0:0] tmp_last_V_3_reg_252;
reg   [0:0] tmp_last_V_1_reg_271;
wire   [0:0] tmp_last_V_fu_459_p1;
wire   [0:0] tmp_4_i_fu_463_p2;
wire   [0:0] tmp_10_i_fu_469_p2;
wire   [0:0] tmp_14_i_fu_475_p2;
wire   [0:0] tmp_17_i_fu_481_p2;
wire   [0:0] tmp_20_i_fu_487_p2;
wire   [0:0] tmp_23_i_fu_493_p2;
wire   [0:0] tmp_26_i_fu_499_p2;
wire   [0:0] tmp_29_i_fu_505_p2;
wire   [63:0] p_Result_12_fu_605_p6;
wire   [63:0] p_Result_11_fu_629_p3;
wire   [63:0] p_Result_13_fu_643_p3;
wire   [63:0] p_Result_10_fu_685_p3;
wire   [1:0] t_V_1_load_fu_677_p1;
wire   [63:0] p_Result_9_fu_699_p5;
wire   [63:0] p_Result_8_fu_721_p3;
reg   [63:0] tmp_data_V_2_reg_1299;
reg   [63:0] tmp_data_V_2_reg_1299_pp0_iter1_reg;
reg   [7:0] tmp_keep_V_1_reg_1304;
reg   [7:0] tmp_keep_V_1_reg_1304_pp0_iter1_reg;
reg   [0:0] tmp_last_V_2_reg_1309;
reg   [0:0] tmp_last_V_2_reg_1309_pp0_iter1_reg;
wire   [1:0] t_V_load_fu_761_p1;
wire   [0:0] tmp_8_i_fu_792_p2;
wire   [0:0] or_cond_i_fu_925_p2;
wire   [0:0] tmp_6_i_fu_931_p2;
wire   [0:0] tmp_12_i_fu_937_p2;
reg   [0:0] tmp_12_i_reg_1330;
reg   [0:0] tmp_12_i_reg_1330_pp0_iter1_reg;
wire   [0:0] tmp_15_i_fu_943_p2;
reg   [0:0] tmp_15_i_reg_1337;
reg   [0:0] tmp_15_i_reg_1337_pp0_iter1_reg;
wire   [0:0] tmp_18_i_fu_949_p2;
reg   [0:0] tmp_18_i_reg_1343;
reg   [0:0] tmp_18_i_reg_1343_pp0_iter1_reg;
wire   [0:0] tmp_21_i_fu_955_p2;
reg   [0:0] tmp_21_i_reg_1349;
wire   [0:0] tmp_24_i_fu_961_p2;
reg   [0:0] tmp_24_i_reg_1355;
wire   [0:0] tmp_27_i_fu_967_p2;
reg   [0:0] tmp_27_i_reg_1361;
wire   [0:0] tmp_30_i_fu_973_p2;
reg   [0:0] tmp_30_i_reg_1366;
reg   [0:0] tmp_30_i_reg_1366_pp0_iter1_reg;
wire   [0:0] word_count_V_flag_1_s_fu_1006_p2;
wire   [0:0] sel_tmp7_demorgan_fu_1067_p2;
reg   [0:0] sel_tmp7_demorgan_reg_1378;
wire   [0:0] sel_tmp1_fu_1082_p2;
reg   [0:0] sel_tmp1_reg_1383;
wire   [0:0] sel_tmp9_fu_1114_p2;
reg   [0:0] sel_tmp9_reg_1389;
wire   [0:0] or_cond_fu_1119_p2;
reg   [0:0] or_cond_reg_1394;
wire   [7:0] tmp_keep_V_2_fu_1208_p3;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_tmp_last_V_3_phi_fu_256_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_252;
reg   [0:0] ap_phi_mux_tmp_last_V_1_phi_fu_275_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_271;
reg   [15:0] ap_phi_mux_storemerge3_i_phi_fu_293_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge3_i_reg_290;
wire   [15:0] tmp_11_i_fu_979_p2;
reg   [0:0] ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_word_count_V_flag_i_reg_300;
reg   [1:0] ap_phi_mux_word_count_V_new_i_phi_fu_320_p8;
wire   [1:0] ap_phi_reg_pp0_iter0_word_count_V_new_i_reg_317;
reg   [7:0] ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8;
wire   [7:0] ap_phi_reg_pp0_iter0_axi_command_V_loc_i_reg_334;
reg   [1:0] ap_phi_mux_storemerge2_i_phi_fu_350_p4;
wire   [1:0] ap_phi_reg_pp0_iter0_storemerge2_i_reg_347;
wire   [0:0] tmp_nbreadreq_fu_200_p5;
wire   [1:0] p_4_cast_i_fu_1052_p3;
wire   [63:0] ap_phi_reg_pp0_iter0_tmp_data_V_3_reg_357;
reg   [63:0] ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357;
wire   [63:0] ap_phi_reg_pp0_iter0_tmp_data_V_reg_373;
reg   [63:0] ap_phi_reg_pp0_iter1_tmp_data_V_reg_373;
reg    rx_fifo_V_data_V0_update;
wire   [0:0] tmp_1_nbreadreq_fu_212_p5;
wire   [1:0] storemerge_cast_i_fu_663_p3;
wire   [1:0] storemerge1_i_fu_735_p3;
wire   [1:0] storemerge5_i_fu_1020_p3;
wire   [15:0] grp_fu_391_p2;
wire   [15:0] tmp_31_i_fu_511_p2;
wire   [15:0] tmp_28_i_fu_523_p2;
wire   [15:0] tmp_25_i_fu_535_p2;
wire   [15:0] tmp_22_i_fu_547_p2;
wire   [15:0] tmp_19_i_fu_559_p2;
wire   [15:0] tmp_16_i_fu_571_p2;
wire   [15:0] tmp_13_i_fu_583_p2;
wire   [47:0] tmp_2_fu_875_p1;
wire   [47:0] p_Result_1_fu_808_p5;
wire   [47:0] p_Result_s_fu_895_p5;
wire   [1:0] word_count_V_new_1_i_fu_1012_p3;
wire   [15:0] tmp_4_fu_776_p1;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] tmp_7_fu_601_p1;
wire   [31:0] grp_fu_402_p4;
wire   [15:0] tmp_6_fu_625_p1;
wire   [0:0] not_tmp_last_V_9_i_fu_657_p2;
wire   [15:0] tmp_5_fu_717_p1;
wire   [31:0] tmp_3_fu_804_p1;
wire   [15:0] p_Result_1_i_fu_885_p4;
wire   [0:0] tmp_9_i_fu_913_p2;
wire   [0:0] tmp_i_fu_919_p2;
wire   [0:0] tmp_32_i_fu_992_p2;
wire   [1:0] storemerge4_i_fu_998_p3;
wire   [0:0] brmerge_demorgan_i_fu_1046_p2;
wire   [0:0] sel_tmp14_demorgan_fu_1071_p2;
wire   [0:0] sel_tmp_fu_1076_p2;
wire   [0:0] sel_tmp23_demorgan_fu_1087_p2;
wire   [0:0] sel_tmp4_fu_1092_p2;
wire   [0:0] sel_tmp34_demorgan_fu_1103_p2;
wire   [0:0] sel_tmp6_fu_1108_p2;
wire   [0:0] sel_tmp5_fu_1098_p2;
wire   [0:0] sel_tmp2_fu_1125_p2;
wire   [0:0] sel_tmp7_fu_1135_p2;
wire   [0:0] sel_tmp8_fu_1140_p2;
wire   [0:0] sel_tmp3_fu_1130_p2;
wire   [5:0] newSel_cast_cast_fu_1145_p3;
wire   [5:0] newSel1_fu_1152_p3;
wire   [5:0] newSel7_fu_1184_p3;
wire   [0:0] or_cond2_fu_1159_p2;
wire   [0:0] or_cond4_fu_1172_p2;
wire   [7:0] newSel3_fu_1164_p3;
wire   [7:0] newSel5_cast_cast_fu_1177_p3;
wire   [0:0] or_cond8_fu_1195_p2;
wire   [7:0] newSel7_cast_fu_1191_p1;
wire   [7:0] newSel9_fu_1200_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1400;
reg    ap_condition_1404;
reg    ap_condition_541;
reg    ap_condition_168;
reg    ap_condition_969;
reg    ap_condition_924;
reg    ap_condition_878;
reg    ap_condition_880;
reg    ap_condition_882;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 data_out_V_data_V_1_sel_rd = 1'b0;
#0 data_out_V_data_V_1_sel_wr = 1'b0;
#0 data_out_V_data_V_1_state = 2'd0;
#0 data_out_V_keep_V_1_sel_rd = 1'b0;
#0 data_out_V_keep_V_1_state = 2'd0;
#0 data_out_V_last_V_1_sel_rd = 1'b0;
#0 data_out_V_last_V_1_sel_wr = 1'b0;
#0 data_out_V_last_V_1_state = 2'd0;
#0 tx_fifo_V_data_V_1_sel_rd = 1'b0;
#0 tx_fifo_V_data_V_1_sel_wr = 1'b0;
#0 tx_fifo_V_data_V_1_state = 2'd0;
#0 tx_fifo_V_keep_V_1_sel_rd = 1'b0;
#0 tx_fifo_V_keep_V_1_sel_wr = 1'b0;
#0 tx_fifo_V_keep_V_1_state = 2'd0;
#0 tx_fifo_V_last_V_1_sel_rd = 1'b0;
#0 tx_fifo_V_last_V_1_sel_wr = 1'b0;
#0 tx_fifo_V_last_V_1_state = 2'd0;
#0 fsm_state_V = 2'd0;
#0 rx_len_V = 16'd0;
#0 rx_ready_V = 1'd0;
#0 dest_address_V = 48'd0;
#0 src_address_V = 48'd0;
#0 mac_type_V = 16'd0;
#0 ethernet_axi_id_V = 8'd0;
#0 word_count_V = 2'd0;
#0 axi_command_V = 8'd0;
#0 tx_len_V = 16'd0;
#0 axis_len_V = 16'd0;
#0 send_tx_word_count_V = 2'd0;
#0 send_rx_word_count_V = 2'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        data_out_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((data_out_V_data_V_1_ack_out == 1'b1) & (data_out_V_data_V_1_vld_out == 1'b1))) begin
            data_out_V_data_V_1_sel_rd <= ~data_out_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        data_out_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((data_out_V_data_V_1_ack_in == 1'b1) & (data_out_V_data_V_1_vld_in == 1'b1))) begin
            data_out_V_data_V_1_sel_wr <= ~data_out_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        data_out_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((data_out_V_data_V_1_state == 2'd2) & (data_out_V_data_V_1_vld_in == 1'b0)) | ((data_out_V_data_V_1_state == 2'd3) & (data_out_V_data_V_1_vld_in == 1'b0) & (data_out_V_data_V_1_ack_out == 1'b1)))) begin
            data_out_V_data_V_1_state <= 2'd2;
        end else if ((((data_out_V_data_V_1_state == 2'd1) & (data_out_V_data_V_1_ack_out == 1'b0)) | ((data_out_V_data_V_1_state == 2'd3) & (data_out_V_data_V_1_ack_out == 1'b0) & (data_out_V_data_V_1_vld_in == 1'b1)))) begin
            data_out_V_data_V_1_state <= 2'd1;
        end else if (((~((data_out_V_data_V_1_vld_in == 1'b0) & (data_out_V_data_V_1_ack_out == 1'b1)) & ~((data_out_V_data_V_1_ack_out == 1'b0) & (data_out_V_data_V_1_vld_in == 1'b1)) & (data_out_V_data_V_1_state == 2'd3)) | ((data_out_V_data_V_1_state == 2'd1) & (data_out_V_data_V_1_ack_out == 1'b1)) | ((data_out_V_data_V_1_state == 2'd2) & (data_out_V_data_V_1_vld_in == 1'b1)))) begin
            data_out_V_data_V_1_state <= 2'd3;
        end else begin
            data_out_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        data_out_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((data_out_V_keep_V_1_ack_out == 1'b1) & (data_out_V_keep_V_1_vld_out == 1'b1))) begin
            data_out_V_keep_V_1_sel_rd <= ~data_out_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        data_out_V_keep_V_1_state <= 2'd0;
    end else begin
        if ((((data_out_V_keep_V_1_state == 2'd2) & (data_out_V_keep_V_1_vld_in == 1'b0)) | ((data_out_V_keep_V_1_state == 2'd3) & (data_out_V_keep_V_1_vld_in == 1'b0) & (data_out_V_keep_V_1_ack_out == 1'b1)))) begin
            data_out_V_keep_V_1_state <= 2'd2;
        end else if ((((data_out_V_keep_V_1_state == 2'd1) & (data_out_V_keep_V_1_ack_out == 1'b0)) | ((data_out_V_keep_V_1_state == 2'd3) & (data_out_V_keep_V_1_ack_out == 1'b0) & (data_out_V_keep_V_1_vld_in == 1'b1)))) begin
            data_out_V_keep_V_1_state <= 2'd1;
        end else if (((~((data_out_V_keep_V_1_vld_in == 1'b0) & (data_out_V_keep_V_1_ack_out == 1'b1)) & ~((data_out_V_keep_V_1_ack_out == 1'b0) & (data_out_V_keep_V_1_vld_in == 1'b1)) & (data_out_V_keep_V_1_state == 2'd3)) | ((data_out_V_keep_V_1_state == 2'd1) & (data_out_V_keep_V_1_ack_out == 1'b1)) | ((data_out_V_keep_V_1_state == 2'd2) & (data_out_V_keep_V_1_vld_in == 1'b1)))) begin
            data_out_V_keep_V_1_state <= 2'd3;
        end else begin
            data_out_V_keep_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        data_out_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((data_out_V_last_V_1_ack_out == 1'b1) & (data_out_V_last_V_1_vld_out == 1'b1))) begin
            data_out_V_last_V_1_sel_rd <= ~data_out_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        data_out_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((data_out_V_last_V_1_vld_in == 1'b1) & (data_out_V_last_V_1_ack_in == 1'b1))) begin
            data_out_V_last_V_1_sel_wr <= ~data_out_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        data_out_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((data_out_V_last_V_1_state == 2'd2) & (data_out_V_last_V_1_vld_in == 1'b0)) | ((data_out_V_last_V_1_state == 2'd3) & (data_out_V_last_V_1_vld_in == 1'b0) & (data_out_V_last_V_1_ack_out == 1'b1)))) begin
            data_out_V_last_V_1_state <= 2'd2;
        end else if ((((data_out_V_last_V_1_state == 2'd1) & (data_out_V_last_V_1_ack_out == 1'b0)) | ((data_out_V_last_V_1_state == 2'd3) & (data_out_V_last_V_1_ack_out == 1'b0) & (data_out_V_last_V_1_vld_in == 1'b1)))) begin
            data_out_V_last_V_1_state <= 2'd1;
        end else if (((~((data_out_V_last_V_1_vld_in == 1'b0) & (data_out_V_last_V_1_ack_out == 1'b1)) & ~((data_out_V_last_V_1_ack_out == 1'b0) & (data_out_V_last_V_1_vld_in == 1'b1)) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_V_last_V_1_state == 2'd1) & (data_out_V_last_V_1_ack_out == 1'b1)) | ((data_out_V_last_V_1_state == 2'd2) & (data_out_V_last_V_1_vld_in == 1'b1)))) begin
            data_out_V_last_V_1_state <= 2'd3;
        end else begin
            data_out_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tx_fifo_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((tx_fifo_V_data_V_1_ack_out == 1'b1) & (tx_fifo_V_data_V_1_vld_out == 1'b1))) begin
            tx_fifo_V_data_V_1_sel_rd <= ~tx_fifo_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tx_fifo_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((tx_fifo_V_data_V_1_ack_in == 1'b1) & (tx_fifo_V_data_V_1_vld_in == 1'b1))) begin
            tx_fifo_V_data_V_1_sel_wr <= ~tx_fifo_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tx_fifo_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((tx_fifo_V_data_V_1_state == 2'd2) & (tx_fifo_V_data_V_1_vld_in == 1'b0)) | ((tx_fifo_V_data_V_1_state == 2'd3) & (tx_fifo_V_data_V_1_vld_in == 1'b0) & (tx_fifo_V_data_V_1_ack_out == 1'b1)))) begin
            tx_fifo_V_data_V_1_state <= 2'd2;
        end else if ((((tx_fifo_V_data_V_1_state == 2'd1) & (tx_fifo_V_data_V_1_ack_out == 1'b0)) | ((tx_fifo_V_data_V_1_state == 2'd3) & (tx_fifo_V_data_V_1_ack_out == 1'b0) & (tx_fifo_V_data_V_1_vld_in == 1'b1)))) begin
            tx_fifo_V_data_V_1_state <= 2'd1;
        end else if (((~((tx_fifo_V_data_V_1_vld_in == 1'b0) & (tx_fifo_V_data_V_1_ack_out == 1'b1)) & ~((tx_fifo_V_data_V_1_ack_out == 1'b0) & (tx_fifo_V_data_V_1_vld_in == 1'b1)) & (tx_fifo_V_data_V_1_state == 2'd3)) | ((tx_fifo_V_data_V_1_state == 2'd1) & (tx_fifo_V_data_V_1_ack_out == 1'b1)) | ((tx_fifo_V_data_V_1_state == 2'd2) & (tx_fifo_V_data_V_1_vld_in == 1'b1)))) begin
            tx_fifo_V_data_V_1_state <= 2'd3;
        end else begin
            tx_fifo_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tx_fifo_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((tx_fifo_V_keep_V_1_ack_out == 1'b1) & (tx_fifo_V_keep_V_1_vld_out == 1'b1))) begin
            tx_fifo_V_keep_V_1_sel_rd <= ~tx_fifo_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tx_fifo_V_keep_V_1_sel_wr <= 1'b0;
    end else begin
        if (((tx_fifo_V_keep_V_1_vld_in == 1'b1) & (tx_fifo_V_keep_V_1_ack_in == 1'b1))) begin
            tx_fifo_V_keep_V_1_sel_wr <= ~tx_fifo_V_keep_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tx_fifo_V_keep_V_1_state <= 2'd0;
    end else begin
        if ((((tx_fifo_V_keep_V_1_state == 2'd2) & (tx_fifo_V_keep_V_1_vld_in == 1'b0)) | ((tx_fifo_V_keep_V_1_state == 2'd3) & (tx_fifo_V_keep_V_1_vld_in == 1'b0) & (tx_fifo_V_keep_V_1_ack_out == 1'b1)))) begin
            tx_fifo_V_keep_V_1_state <= 2'd2;
        end else if ((((tx_fifo_V_keep_V_1_state == 2'd1) & (tx_fifo_V_keep_V_1_ack_out == 1'b0)) | ((tx_fifo_V_keep_V_1_state == 2'd3) & (tx_fifo_V_keep_V_1_ack_out == 1'b0) & (tx_fifo_V_keep_V_1_vld_in == 1'b1)))) begin
            tx_fifo_V_keep_V_1_state <= 2'd1;
        end else if (((~((tx_fifo_V_keep_V_1_vld_in == 1'b0) & (tx_fifo_V_keep_V_1_ack_out == 1'b1)) & ~((tx_fifo_V_keep_V_1_ack_out == 1'b0) & (tx_fifo_V_keep_V_1_vld_in == 1'b1)) & (tx_fifo_V_keep_V_1_state == 2'd3)) | ((tx_fifo_V_keep_V_1_state == 2'd1) & (tx_fifo_V_keep_V_1_ack_out == 1'b1)) | ((tx_fifo_V_keep_V_1_state == 2'd2) & (tx_fifo_V_keep_V_1_vld_in == 1'b1)))) begin
            tx_fifo_V_keep_V_1_state <= 2'd3;
        end else begin
            tx_fifo_V_keep_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tx_fifo_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((tx_fifo_V_last_V_1_ack_out == 1'b1) & (tx_fifo_V_last_V_1_vld_out == 1'b1))) begin
            tx_fifo_V_last_V_1_sel_rd <= ~tx_fifo_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tx_fifo_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((tx_fifo_V_last_V_1_vld_in == 1'b1) & (tx_fifo_V_last_V_1_ack_in == 1'b1))) begin
            tx_fifo_V_last_V_1_sel_wr <= ~tx_fifo_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tx_fifo_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((tx_fifo_V_last_V_1_state == 2'd2) & (tx_fifo_V_last_V_1_vld_in == 1'b0)) | ((tx_fifo_V_last_V_1_state == 2'd3) & (tx_fifo_V_last_V_1_vld_in == 1'b0) & (tx_fifo_V_last_V_1_ack_out == 1'b1)))) begin
            tx_fifo_V_last_V_1_state <= 2'd2;
        end else if ((((tx_fifo_V_last_V_1_state == 2'd1) & (tx_fifo_V_last_V_1_ack_out == 1'b0)) | ((tx_fifo_V_last_V_1_state == 2'd3) & (tx_fifo_V_last_V_1_ack_out == 1'b0) & (tx_fifo_V_last_V_1_vld_in == 1'b1)))) begin
            tx_fifo_V_last_V_1_state <= 2'd1;
        end else if (((~((tx_fifo_V_last_V_1_vld_in == 1'b0) & (tx_fifo_V_last_V_1_ack_out == 1'b1)) & ~((tx_fifo_V_last_V_1_ack_out == 1'b0) & (tx_fifo_V_last_V_1_vld_in == 1'b1)) & (tx_fifo_V_last_V_1_state == 2'd3)) | ((tx_fifo_V_last_V_1_state == 2'd1) & (tx_fifo_V_last_V_1_ack_out == 1'b1)) | ((tx_fifo_V_last_V_1_state == 2'd2) & (tx_fifo_V_last_V_1_vld_in == 1'b1)))) begin
            tx_fifo_V_last_V_1_state <= 2'd3;
        end else begin
            tx_fifo_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_168)) begin
        if (((send_rx_word_count_V == 2'd2) & (fsm_state_V == 2'd3))) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357 <= rx_fifo_V_data_V_dout;
        end else if (((t_V_2_load_fu_447_p1 == 2'd0) & (fsm_state_V == 2'd3))) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357 <= p_Result_11_fu_629_p3;
        end else if (((t_V_2_load_fu_447_p1 == 2'd1) & (fsm_state_V == 2'd3))) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357 <= p_Result_12_fu_605_p6;
        end else if (((t_V_2_load_fu_447_p1 == 2'd3) & (fsm_state_V == 2'd3))) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357 <= p_Result_13_fu_643_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357 <= ap_phi_reg_pp0_iter0_tmp_data_V_3_reg_357;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_168)) begin
        if (((fsm_state_V_load_load_fu_411_p1 == 2'd2) & (t_V_1_load_fu_677_p1 == 2'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_373 <= p_Result_8_fu_721_p3;
        end else if (((t_V_1_load_fu_677_p1 == 2'd1) & (fsm_state_V_load_load_fu_411_p1 == 2'd2))) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_373 <= p_Result_9_fu_699_p5;
        end else if (((t_V_1_load_fu_677_p1 == 2'd2) & (fsm_state_V_load_load_fu_411_p1 == 2'd2))) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_373 <= p_Result_10_fu_685_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_373 <= ap_phi_reg_pp0_iter0_tmp_data_V_reg_373;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_168)) begin
        if ((fsm_state_V_load_load_fu_411_p1 == 2'd0)) begin
            fsm_state_V <= ap_phi_mux_storemerge2_i_phi_fu_350_p4;
        end else if ((fsm_state_V == 2'd1)) begin
            fsm_state_V <= storemerge5_i_fu_1020_p3;
        end else if ((fsm_state_V_load_load_fu_411_p1 == 2'd2)) begin
            fsm_state_V <= storemerge1_i_fu_735_p3;
        end else if ((fsm_state_V == 2'd3)) begin
            fsm_state_V <= storemerge_cast_i_fu_663_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((fsm_state_V_load_load_fu_411_p1 == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_len_V <= 16'd0;
    end else if (((tmp_4_i_fu_463_p2 == 1'd0) & (send_rx_word_count_V == 2'd2) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_10_i_fu_469_p2 == 1'd1) & (tmp_last_V_fu_459_p1 == 1'd1))) begin
        rx_len_V <= tmp_13_i_fu_583_p2;
    end else if (((tmp_10_i_fu_469_p2 == 1'd0) & (tmp_4_i_fu_463_p2 == 1'd0) & (send_rx_word_count_V == 2'd2) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_14_i_fu_475_p2 == 1'd1) & (tmp_last_V_fu_459_p1 == 1'd1))) begin
        rx_len_V <= tmp_16_i_fu_571_p2;
    end else if (((tmp_14_i_fu_475_p2 == 1'd0) & (tmp_10_i_fu_469_p2 == 1'd0) & (tmp_4_i_fu_463_p2 == 1'd0) & (send_rx_word_count_V == 2'd2) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_i_fu_481_p2 == 1'd1) & (tmp_last_V_fu_459_p1 == 1'd1))) begin
        rx_len_V <= tmp_19_i_fu_559_p2;
    end else if (((tmp_17_i_fu_481_p2 == 1'd0) & (tmp_14_i_fu_475_p2 == 1'd0) & (tmp_10_i_fu_469_p2 == 1'd0) & (tmp_4_i_fu_463_p2 == 1'd0) & (send_rx_word_count_V == 2'd2) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_20_i_fu_487_p2 == 1'd1) & (tmp_last_V_fu_459_p1 == 1'd1))) begin
        rx_len_V <= tmp_22_i_fu_547_p2;
    end else if (((tmp_20_i_fu_487_p2 == 1'd0) & (tmp_17_i_fu_481_p2 == 1'd0) & (tmp_14_i_fu_475_p2 == 1'd0) & (tmp_10_i_fu_469_p2 == 1'd0) & (tmp_4_i_fu_463_p2 == 1'd0) & (send_rx_word_count_V == 2'd2) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_23_i_fu_493_p2 == 1'd1) & (tmp_last_V_fu_459_p1 == 1'd1))) begin
        rx_len_V <= tmp_25_i_fu_535_p2;
    end else if (((tmp_23_i_fu_493_p2 == 1'd0) & (tmp_20_i_fu_487_p2 == 1'd0) & (tmp_17_i_fu_481_p2 == 1'd0) & (tmp_14_i_fu_475_p2 == 1'd0) & (tmp_10_i_fu_469_p2 == 1'd0) & (tmp_4_i_fu_463_p2 == 1'd0) & (send_rx_word_count_V == 2'd2) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_26_i_fu_499_p2 == 1'd1) & (tmp_last_V_fu_459_p1 == 1'd1))) begin
        rx_len_V <= tmp_28_i_fu_523_p2;
    end else if (((tmp_26_i_fu_499_p2 == 1'd0) & (tmp_23_i_fu_493_p2 == 1'd0) & (tmp_20_i_fu_487_p2 == 1'd0) & (tmp_17_i_fu_481_p2 == 1'd0) & (tmp_14_i_fu_475_p2 == 1'd0) & (tmp_10_i_fu_469_p2 == 1'd0) & (tmp_4_i_fu_463_p2 == 1'd0) & (send_rx_word_count_V == 2'd2) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_29_i_fu_505_p2 == 1'd1) & (tmp_last_V_fu_459_p1 == 1'd1))) begin
        rx_len_V <= tmp_31_i_fu_511_p2;
    end else if ((((tmp_last_V_fu_459_p1 == 1'd0) & (send_rx_word_count_V == 2'd2) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((send_rx_word_count_V == 2'd2) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_4_i_fu_463_p2 == 1'd1) & (tmp_last_V_fu_459_p1 == 1'd1)))) begin
        rx_len_V <= grp_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_168)) begin
        if ((1'b1 == ap_condition_924)) begin
            rx_ready_V <= 1'd1;
        end else if ((fsm_state_V == 2'd3)) begin
            rx_ready_V <= 1'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_878)) begin
        if ((t_V_2_load_fu_447_p1 == 2'd3)) begin
            send_rx_word_count_V <= 2'd0;
        end else if ((t_V_2_load_fu_447_p1 == 2'd0)) begin
            send_rx_word_count_V <= 2'd1;
        end else if ((t_V_2_load_fu_447_p1 == 2'd1)) begin
            send_rx_word_count_V <= 2'd2;
        end else if (((send_rx_word_count_V == 2'd2) & (tmp_last_V_fu_459_p1 == 1'd1))) begin
            send_rx_word_count_V <= 2'd3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_880)) begin
        if ((t_V_1_load_fu_677_p1 == 2'd0)) begin
            send_tx_word_count_V <= 2'd1;
        end else if ((t_V_1_load_fu_677_p1 == 2'd1)) begin
            send_tx_word_count_V <= 2'd2;
        end else if ((t_V_1_load_fu_677_p1 == 2'd2)) begin
            send_tx_word_count_V <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_882)) begin
        if ((t_V_load_fu_761_p1 == 2'd0)) begin
            src_address_V <= p_Result_s_fu_895_p5;
        end else if ((t_V_load_fu_761_p1 == 2'd1)) begin
            src_address_V <= p_Result_1_fu_808_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((fsm_state_V_load_load_fu_411_p1 == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (t_V_1_load_fu_677_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((t_V_1_load_fu_677_p1 == 2'd1) & (fsm_state_V_load_load_fu_411_p1 == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tmp_last_V_1_reg_271 <= 1'd0;
    end else if (((t_V_1_load_fu_677_p1 == 2'd2) & (fsm_state_V_load_load_fu_411_p1 == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_1_reg_271 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_1_reg_271 <= ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_271;
    end
end

always @ (posedge ap_clk) begin
    if ((((send_rx_word_count_V == 2'd2) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((t_V_2_load_fu_447_p1 == 2'd0) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((t_V_2_load_fu_447_p1 == 2'd1) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tmp_last_V_3_reg_252 <= 1'd0;
    end else if (((t_V_2_load_fu_447_p1 == 2'd3) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_3_reg_252 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_3_reg_252 <= ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_252;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_882)) begin
        if (((or_cond_i_fu_925_p2 == 1'd0) & (t_V_load_fu_761_p1 == 2'd3))) begin
            tx_len_V <= ap_phi_mux_storemerge3_i_phi_fu_293_p4;
        end else if ((t_V_load_fu_761_p1 == 2'd2)) begin
            tx_len_V <= tmp_4_fu_776_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((t_V_load_fu_761_p1 == 2'd1) & (fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        axi_command_V <= {{data_in_TDATA[63:56]}};
        ethernet_axi_id_V <= {{data_in_TDATA[55:48]}};
        mac_type_V <= {{data_in_TDATA[47:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((t_V_load_fu_761_p1 == 2'd2) & (fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        axis_len_V <= tmp_4_fu_776_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_data_V_1_load_A == 1'b1)) begin
        data_out_V_data_V_1_payload_A <= data_out_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_data_V_1_load_B == 1'b1)) begin
        data_out_V_data_V_1_payload_B <= data_out_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_last_V_1_load_A == 1'b1)) begin
        data_out_V_last_V_1_payload_A <= data_out_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_last_V_1_load_B == 1'b1)) begin
        data_out_V_last_V_1_payload_B <= data_out_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (t_V_load_fu_761_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_address_V <= tmp_2_fu_875_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fsm_state_V_load_reg_1217 <= fsm_state_V;
        fsm_state_V_load_reg_1217_pp0_iter1_reg <= fsm_state_V_load_reg_1217;
        or_cond_i_reg_1322_pp0_iter1_reg <= or_cond_i_reg_1322;
        t_V_reg_1314_pp0_iter1_reg <= t_V_reg_1314;
        tmp_12_i_reg_1330_pp0_iter1_reg <= tmp_12_i_reg_1330;
        tmp_15_i_reg_1337_pp0_iter1_reg <= tmp_15_i_reg_1337;
        tmp_18_i_reg_1343_pp0_iter1_reg <= tmp_18_i_reg_1343;
        tmp_30_i_reg_1366_pp0_iter1_reg <= tmp_30_i_reg_1366;
        tmp_6_i_reg_1326_pp0_iter1_reg <= tmp_6_i_reg_1326;
        tmp_data_V_2_reg_1299_pp0_iter1_reg <= tmp_data_V_2_reg_1299;
        tmp_keep_V_1_reg_1304_pp0_iter1_reg <= tmp_keep_V_1_reg_1304;
        tmp_last_V_2_reg_1309_pp0_iter1_reg <= tmp_last_V_2_reg_1309;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        fsm_state_V_load_reg_1217_pp0_iter2_reg <= fsm_state_V_load_reg_1217_pp0_iter1_reg;
        or_cond_i_reg_1322_pp0_iter2_reg <= or_cond_i_reg_1322_pp0_iter1_reg;
        t_V_reg_1314_pp0_iter2_reg <= t_V_reg_1314_pp0_iter1_reg;
        tmp_6_i_reg_1326_pp0_iter2_reg <= tmp_6_i_reg_1326_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((t_V_load_fu_761_p1 == 2'd3) & (fsm_state_V == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_cond_i_reg_1322 <= or_cond_i_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_i_reg_1326 == 1'd0) & (or_cond_i_reg_1322 == 1'd0) & (fsm_state_V_load_reg_1217 == 2'd1) & (t_V_reg_1314 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_cond_reg_1394 <= or_cond_fu_1119_p2;
        sel_tmp1_reg_1383 <= sel_tmp1_fu_1082_p2;
        sel_tmp7_demorgan_reg_1378 <= sel_tmp7_demorgan_fu_1067_p2;
        sel_tmp9_reg_1389 <= sel_tmp9_fu_1114_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((fsm_state_V == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_reg_1314 <= word_count_V;
        tmp_data_V_2_reg_1299 <= data_in_TDATA;
        tmp_keep_V_1_reg_1304 <= data_in_TKEEP;
        tmp_last_V_2_reg_1309 <= data_in_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_i_fu_931_p2 == 1'd0) & (or_cond_i_fu_925_p2 == 1'd0) & (t_V_load_fu_761_p1 == 2'd3) & (fsm_state_V == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_12_i_reg_1330 <= tmp_12_i_fu_937_p2;
        tmp_15_i_reg_1337 <= tmp_15_i_fu_943_p2;
        tmp_18_i_reg_1343 <= tmp_18_i_fu_949_p2;
        tmp_21_i_reg_1349 <= tmp_21_i_fu_955_p2;
        tmp_24_i_reg_1355 <= tmp_24_i_fu_961_p2;
        tmp_27_i_reg_1361 <= tmp_27_i_fu_967_p2;
        tmp_30_i_reg_1366 <= tmp_30_i_fu_973_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_fu_925_p2 == 1'd0) & (t_V_load_fu_761_p1 == 2'd3) & (fsm_state_V == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_6_i_reg_1326 <= tmp_6_i_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((tx_fifo_V_data_V_1_load_A == 1'b1)) begin
        tx_fifo_V_data_V_1_payload_A <= tmp_data_V_2_reg_1299_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((tx_fifo_V_data_V_1_load_B == 1'b1)) begin
        tx_fifo_V_data_V_1_payload_B <= tmp_data_V_2_reg_1299_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((tx_fifo_V_keep_V_1_load_A == 1'b1)) begin
        tx_fifo_V_keep_V_1_payload_A <= tx_fifo_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((tx_fifo_V_keep_V_1_load_B == 1'b1)) begin
        tx_fifo_V_keep_V_1_payload_B <= tx_fifo_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((tx_fifo_V_last_V_1_load_A == 1'b1)) begin
        tx_fifo_V_last_V_1_payload_A <= tx_fifo_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((tx_fifo_V_last_V_1_load_B == 1'b1)) begin
        tx_fifo_V_last_V_1_payload_B <= tx_fifo_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (word_count_V_flag_1_s_fu_1006_p2 == 1'd1))) begin
        word_count_V <= word_count_V_new_1_i_fu_1012_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (t_V_load_fu_761_p1 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0) & (t_V_load_fu_761_p1 == 2'd3) & (fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (t_V_load_fu_761_p1 == 2'd2) & (fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8 = axi_command_V;
    end else if (((t_V_load_fu_761_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0) & (fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8 = {{data_in_TDATA[63:56]}};
    end else begin
        ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8 = ap_phi_reg_pp0_iter0_axi_command_V_loc_i_reg_334;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1400)) begin
        if ((tmp_nbreadreq_fu_200_p5 == 1'd0)) begin
            ap_phi_mux_storemerge2_i_phi_fu_350_p4 = p_4_cast_i_fu_1052_p3;
        end else if ((tmp_nbreadreq_fu_200_p5 == 1'd1)) begin
            ap_phi_mux_storemerge2_i_phi_fu_350_p4 = 2'd1;
        end else begin
            ap_phi_mux_storemerge2_i_phi_fu_350_p4 = ap_phi_reg_pp0_iter0_storemerge2_i_reg_347;
        end
    end else begin
        ap_phi_mux_storemerge2_i_phi_fu_350_p4 = ap_phi_reg_pp0_iter0_storemerge2_i_reg_347;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1404)) begin
        if ((tmp_6_i_fu_931_p2 == 1'd1)) begin
            ap_phi_mux_storemerge3_i_phi_fu_293_p4 = tmp_11_i_fu_979_p2;
        end else if ((tmp_6_i_fu_931_p2 == 1'd0)) begin
            ap_phi_mux_storemerge3_i_phi_fu_293_p4 = 16'd0;
        end else begin
            ap_phi_mux_storemerge3_i_phi_fu_293_p4 = ap_phi_reg_pp0_iter0_storemerge3_i_reg_290;
        end
    end else begin
        ap_phi_mux_storemerge3_i_phi_fu_293_p4 = ap_phi_reg_pp0_iter0_storemerge3_i_reg_290;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (fsm_state_V_load_load_fu_411_p1 == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (t_V_1_load_fu_677_p1 == 2'd0)) | ((t_V_1_load_fu_677_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0) & (fsm_state_V_load_load_fu_411_p1 == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_mux_tmp_last_V_1_phi_fu_275_p8 = 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (t_V_1_load_fu_677_p1 == 2'd2) & (fsm_state_V_load_load_fu_411_p1 == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_tmp_last_V_1_phi_fu_275_p8 = 1'd1;
    end else begin
        ap_phi_mux_tmp_last_V_1_phi_fu_275_p8 = ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_271;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (t_V_2_load_fu_447_p1 == 2'd0) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (t_V_2_load_fu_447_p1 == 2'd1) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (send_rx_word_count_V == 2'd2) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_mux_tmp_last_V_3_phi_fu_256_p8 = 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (t_V_2_load_fu_447_p1 == 2'd3) & (fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_tmp_last_V_3_phi_fu_256_p8 = 1'd1;
    end else begin
        ap_phi_mux_tmp_last_V_3_phi_fu_256_p8 = ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_252;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (t_V_load_fu_761_p1 == 2'd3) & (fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8 = 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (t_V_load_fu_761_p1 == 2'd0)) | ((t_V_load_fu_761_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0) & (fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (t_V_load_fu_761_p1 == 2'd2) & (fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8 = 1'd1;
    end else begin
        ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8 = ap_phi_reg_pp0_iter0_word_count_V_flag_i_reg_300;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_541)) begin
        if ((t_V_load_fu_761_p1 == 2'd2)) begin
            ap_phi_mux_word_count_V_new_i_phi_fu_320_p8 = 2'd3;
        end else if ((t_V_load_fu_761_p1 == 2'd0)) begin
            ap_phi_mux_word_count_V_new_i_phi_fu_320_p8 = 2'd1;
        end else if ((t_V_load_fu_761_p1 == 2'd1)) begin
            ap_phi_mux_word_count_V_new_i_phi_fu_320_p8 = 2'd2;
        end else begin
            ap_phi_mux_word_count_V_new_i_phi_fu_320_p8 = ap_phi_reg_pp0_iter0_word_count_V_new_i_reg_317;
        end
    end else begin
        ap_phi_mux_word_count_V_new_i_phi_fu_320_p8 = ap_phi_reg_pp0_iter0_word_count_V_new_i_reg_317;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_in_TDATA_blk_n = data_in_TVALID;
    end else begin
        data_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_in_TREADY = 1'b1;
    end else begin
        data_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (fsm_state_V_load_reg_1217_pp0_iter1_reg == 2'd2) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (fsm_state_V_load_reg_1217_pp0_iter1_reg == 2'd3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (fsm_state_V_load_reg_1217 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (fsm_state_V_load_reg_1217 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_out_TDATA_blk_n = data_out_V_data_V_1_state[1'd1];
    end else begin
        data_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_969)) begin
        if ((fsm_state_V_load_reg_1217 == 2'd2)) begin
            data_out_V_data_V_1_data_in = ap_phi_reg_pp0_iter1_tmp_data_V_reg_373;
        end else if ((fsm_state_V_load_reg_1217 == 2'd3)) begin
            data_out_V_data_V_1_data_in = ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357;
        end else begin
            data_out_V_data_V_1_data_in = 'bx;
        end
    end else begin
        data_out_V_data_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((data_out_V_data_V_1_sel == 1'b1)) begin
        data_out_V_data_V_1_data_out = data_out_V_data_V_1_payload_B;
    end else begin
        data_out_V_data_V_1_data_out = data_out_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((fsm_state_V_load_reg_1217 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((fsm_state_V_load_reg_1217 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        data_out_V_data_V_1_vld_in = 1'b1;
    end else begin
        data_out_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((fsm_state_V_load_reg_1217 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((fsm_state_V_load_reg_1217 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        data_out_V_keep_V_1_vld_in = 1'b1;
    end else begin
        data_out_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_969)) begin
        if ((fsm_state_V_load_reg_1217 == 2'd2)) begin
            data_out_V_last_V_1_data_in = tmp_last_V_1_reg_271;
        end else if ((fsm_state_V_load_reg_1217 == 2'd3)) begin
            data_out_V_last_V_1_data_in = tmp_last_V_3_reg_252;
        end else begin
            data_out_V_last_V_1_data_in = 'bx;
        end
    end else begin
        data_out_V_last_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((data_out_V_last_V_1_sel == 1'b1)) begin
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_B;
    end else begin
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((fsm_state_V_load_reg_1217 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((fsm_state_V_load_reg_1217 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        data_out_V_last_V_1_vld_in = 1'b1;
    end else begin
        data_out_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op224_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op223_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op194_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op193_write_state3 == 1'b1)))) begin
        fifo_out_TDATA_blk_n = tx_fifo_V_data_V_1_state[1'd1];
    end else begin
        fifo_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op16_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_fifo_V_data_V0_update = 1'b1;
    end else begin
        rx_fifo_V_data_V0_update = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op16_read_state1 == 1'b1))) begin
        rx_fifo_V_data_V_blk_n = rx_fifo_V_data_V_empty_n;
    end else begin
        rx_fifo_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op16_read_state1 == 1'b1))) begin
        rx_fifo_V_keep_V_blk_n = rx_fifo_V_keep_V_empty_n;
    end else begin
        rx_fifo_V_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op16_read_state1 == 1'b1))) begin
        rx_fifo_V_last_V_blk_n = rx_fifo_V_last_V_empty_n;
    end else begin
        rx_fifo_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((tx_fifo_V_data_V_1_sel == 1'b1)) begin
        tx_fifo_V_data_V_1_data_out = tx_fifo_V_data_V_1_payload_B;
    end else begin
        tx_fifo_V_data_V_1_data_out = tx_fifo_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op194_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op193_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tx_fifo_V_data_V_1_vld_in = 1'b1;
    end else begin
        tx_fifo_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op194_write_state3 == 1'b1)) begin
            tx_fifo_V_keep_V_1_data_in = tmp_keep_V_1_reg_1304_pp0_iter1_reg;
        end else if ((ap_predicate_op193_write_state3 == 1'b1)) begin
            tx_fifo_V_keep_V_1_data_in = tmp_keep_V_2_fu_1208_p3;
        end else begin
            tx_fifo_V_keep_V_1_data_in = 'bx;
        end
    end else begin
        tx_fifo_V_keep_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((tx_fifo_V_keep_V_1_sel == 1'b1)) begin
        tx_fifo_V_keep_V_1_data_out = tx_fifo_V_keep_V_1_payload_B;
    end else begin
        tx_fifo_V_keep_V_1_data_out = tx_fifo_V_keep_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op194_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op193_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tx_fifo_V_keep_V_1_vld_in = 1'b1;
    end else begin
        tx_fifo_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op194_write_state3 == 1'b1)) begin
            tx_fifo_V_last_V_1_data_in = tmp_last_V_2_reg_1309_pp0_iter1_reg;
        end else if ((ap_predicate_op193_write_state3 == 1'b1)) begin
            tx_fifo_V_last_V_1_data_in = 1'd1;
        end else begin
            tx_fifo_V_last_V_1_data_in = 'bx;
        end
    end else begin
        tx_fifo_V_last_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((tx_fifo_V_last_V_1_sel == 1'b1)) begin
        tx_fifo_V_last_V_1_data_out = tx_fifo_V_last_V_1_payload_B;
    end else begin
        tx_fifo_V_last_V_1_data_out = tx_fifo_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op194_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op193_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tx_fifo_V_last_V_1_vld_in = 1'b1;
    end else begin
        tx_fifo_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((fsm_state_V == 2'd1) & (data_in_TVALID == 1'b0)) | ((rx_fifo_V_data_V0_status == 1'b0) & (ap_predicate_op16_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((tx_fifo_V_data_V_1_ack_in == 1'b0) | (data_out_V_data_V_1_ack_in == 1'b0) | (tx_fifo_V_last_V_1_ack_in == 1'b0) | (tx_fifo_V_keep_V_1_ack_in == 1'b0) | (data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_keep_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((fsm_state_V == 2'd1) & (data_in_TVALID == 1'b0)) | ((rx_fifo_V_data_V0_status == 1'b0) & (ap_predicate_op16_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((tx_fifo_V_data_V_1_ack_in == 1'b0) | (data_out_V_data_V_1_ack_in == 1'b0) | (tx_fifo_V_last_V_1_ack_in == 1'b0) | (tx_fifo_V_keep_V_1_ack_in == 1'b0) | (data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_keep_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((fsm_state_V == 2'd1) & (data_in_TVALID == 1'b0)) | ((rx_fifo_V_data_V0_status == 1'b0) & (ap_predicate_op16_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((tx_fifo_V_data_V_1_ack_in == 1'b0) | (data_out_V_data_V_1_ack_in == 1'b0) | (tx_fifo_V_last_V_1_ack_in == 1'b0) | (tx_fifo_V_keep_V_1_ack_in == 1'b0) | (data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_keep_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state4_io))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((fsm_state_V == 2'd1) & (data_in_TVALID == 1'b0)) | ((rx_fifo_V_data_V0_status == 1'b0) & (ap_predicate_op16_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_io = (((fsm_state_V_load_reg_1217 == 2'd2) & (data_out_V_data_V_1_ack_in == 1'b0)) | ((fsm_state_V_load_reg_1217 == 2'd3) & (data_out_V_data_V_1_ack_in == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((tx_fifo_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op194_write_state3 == 1'b1)) | ((tx_fifo_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op193_write_state3 == 1'b1)) | ((fsm_state_V_load_reg_1217_pp0_iter1_reg == 2'd2) & (data_out_V_data_V_1_ack_in == 1'b0)) | ((fsm_state_V_load_reg_1217_pp0_iter1_reg == 2'd3) & (data_out_V_data_V_1_ack_in == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = (((tx_fifo_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op224_write_state4 == 1'b1)) | ((tx_fifo_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op223_write_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((tx_fifo_V_data_V_1_ack_in == 1'b0) | (data_out_V_data_V_1_ack_in == 1'b0) | (tx_fifo_V_last_V_1_ack_in == 1'b0) | (tx_fifo_V_keep_V_1_ack_in == 1'b0) | (data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_keep_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_condition_1400 = ((1'b0 == ap_block_pp0_stage0) & (fsm_state_V_load_load_fu_411_p1 == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_1404 = ((or_cond_i_fu_925_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (t_V_load_fu_761_p1 == 2'd3) & (fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_168 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_541 = ((1'b0 == ap_block_pp0_stage0) & (fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_878 = ((fsm_state_V == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_880 = ((fsm_state_V_load_load_fu_411_p1 == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_882 = ((fsm_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_924 = ((t_V_load_fu_761_p1 == 2'd2) & (fsm_state_V == 2'd1) & (tmp_8_i_fu_792_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_969 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_axi_command_V_loc_i_reg_334 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge2_i_reg_347 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge3_i_reg_290 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_data_V_3_reg_357 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_data_V_reg_373 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_271 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_252 = 'bx;

assign ap_phi_reg_pp0_iter0_word_count_V_flag_i_reg_300 = 'bx;

assign ap_phi_reg_pp0_iter0_word_count_V_new_i_reg_317 = 'bx;

always @ (*) begin
    ap_predicate_op16_read_state1 = ((send_rx_word_count_V == 2'd2) & (fsm_state_V == 2'd3));
end

always @ (*) begin
    ap_predicate_op193_write_state3 = ((tmp_6_i_reg_1326_pp0_iter1_reg == 1'd0) & (or_cond_i_reg_1322_pp0_iter1_reg == 1'd0) & (fsm_state_V_load_reg_1217_pp0_iter1_reg == 2'd1) & (t_V_reg_1314_pp0_iter1_reg == 2'd3));
end

always @ (*) begin
    ap_predicate_op194_write_state3 = ((or_cond_i_reg_1322_pp0_iter1_reg == 1'd0) & (fsm_state_V_load_reg_1217_pp0_iter1_reg == 2'd1) & (t_V_reg_1314_pp0_iter1_reg == 2'd3) & (tmp_6_i_reg_1326_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op223_write_state4 = ((tmp_6_i_reg_1326_pp0_iter2_reg == 1'd0) & (or_cond_i_reg_1322_pp0_iter2_reg == 1'd0) & (fsm_state_V_load_reg_1217_pp0_iter2_reg == 2'd1) & (t_V_reg_1314_pp0_iter2_reg == 2'd3));
end

always @ (*) begin
    ap_predicate_op224_write_state4 = ((or_cond_i_reg_1322_pp0_iter2_reg == 1'd0) & (fsm_state_V_load_reg_1217_pp0_iter2_reg == 2'd1) & (t_V_reg_1314_pp0_iter2_reg == 2'd3) & (tmp_6_i_reg_1326_pp0_iter2_reg == 1'd1));
end

assign brmerge_demorgan_i_fu_1046_p2 = (tmp_1_nbreadreq_fu_212_p5 & rx_ready_V);

assign data_out_TDATA = data_out_V_data_V_1_data_out;

assign data_out_TKEEP = data_out_V_keep_V_1_data_out;

assign data_out_TLAST = data_out_V_last_V_1_data_out;

assign data_out_TVALID = data_out_V_last_V_1_state[1'd0];

assign data_out_V_data_V_1_ack_in = data_out_V_data_V_1_state[1'd1];

assign data_out_V_data_V_1_ack_out = data_out_TREADY;

assign data_out_V_data_V_1_load_A = (~data_out_V_data_V_1_sel_wr & data_out_V_data_V_1_state_cmp_full);

assign data_out_V_data_V_1_load_B = (data_out_V_data_V_1_state_cmp_full & data_out_V_data_V_1_sel_wr);

assign data_out_V_data_V_1_sel = data_out_V_data_V_1_sel_rd;

assign data_out_V_data_V_1_state_cmp_full = ((data_out_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign data_out_V_data_V_1_vld_out = data_out_V_data_V_1_state[1'd0];

assign data_out_V_keep_V_1_ack_in = data_out_V_keep_V_1_state[1'd1];

assign data_out_V_keep_V_1_ack_out = data_out_TREADY;

assign data_out_V_keep_V_1_data_out = 8'd255;

assign data_out_V_keep_V_1_sel = data_out_V_keep_V_1_sel_rd;

assign data_out_V_keep_V_1_vld_out = data_out_V_keep_V_1_state[1'd0];

assign data_out_V_last_V_1_ack_in = data_out_V_last_V_1_state[1'd1];

assign data_out_V_last_V_1_ack_out = data_out_TREADY;

assign data_out_V_last_V_1_load_A = (~data_out_V_last_V_1_sel_wr & data_out_V_last_V_1_state_cmp_full);

assign data_out_V_last_V_1_load_B = (data_out_V_last_V_1_state_cmp_full & data_out_V_last_V_1_sel_wr);

assign data_out_V_last_V_1_sel = data_out_V_last_V_1_sel_rd;

assign data_out_V_last_V_1_state_cmp_full = ((data_out_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign data_out_V_last_V_1_vld_out = data_out_V_last_V_1_state[1'd0];

assign fifo_out_TDATA = tx_fifo_V_data_V_1_data_out;

assign fifo_out_TKEEP = tx_fifo_V_keep_V_1_data_out;

assign fifo_out_TLAST = tx_fifo_V_last_V_1_data_out;

assign fifo_out_TVALID = tx_fifo_V_last_V_1_state[1'd0];

assign fsm_state_V_load_load_fu_411_p1 = fsm_state_V;

assign grp_fu_391_p2 = (rx_len_V + 16'd8);

assign grp_fu_402_p4 = {{dest_address_V[47:16]}};

assign newSel1_fu_1152_p3 = ((sel_tmp1_reg_1383[0:0] === 1'b1) ? 6'd31 : 6'd63);

assign newSel3_fu_1164_p3 = ((sel_tmp3_fu_1130_p2[0:0] === 1'b1) ? 8'd127 : 8'd255);

assign newSel5_cast_cast_fu_1177_p3 = ((tmp_30_i_reg_1366_pp0_iter1_reg[0:0] === 1'b1) ? 8'd3 : 8'd1);

assign newSel7_cast_fu_1191_p1 = newSel7_fu_1184_p3;

assign newSel7_fu_1184_p3 = ((or_cond_reg_1394[0:0] === 1'b1) ? newSel_cast_cast_fu_1145_p3 : newSel1_fu_1152_p3);

assign newSel9_fu_1200_p3 = ((or_cond4_fu_1172_p2[0:0] === 1'b1) ? newSel3_fu_1164_p3 : newSel5_cast_cast_fu_1177_p3);

assign newSel_cast_cast_fu_1145_p3 = ((sel_tmp9_reg_1389[0:0] === 1'b1) ? 6'd7 : 6'd15);

assign not_tmp_last_V_9_i_fu_657_p2 = (ap_phi_mux_tmp_last_V_3_phi_fu_256_p8 ^ 1'd1);

assign or_cond2_fu_1159_p2 = (sel_tmp8_fu_1140_p2 | sel_tmp1_reg_1383);

assign or_cond4_fu_1172_p2 = (tmp_12_i_reg_1330_pp0_iter1_reg | sel_tmp3_fu_1130_p2);

assign or_cond8_fu_1195_p2 = (or_cond_reg_1394 | or_cond2_fu_1159_p2);

assign or_cond_fu_1119_p2 = (sel_tmp9_fu_1114_p2 | sel_tmp5_fu_1098_p2);

assign or_cond_i_fu_925_p2 = (tmp_i_fu_919_p2 | tmp_9_i_fu_913_p2);

assign p_4_cast_i_fu_1052_p3 = ((brmerge_demorgan_i_fu_1046_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign p_Result_10_fu_685_p3 = {{48'd244837814042624}, {axis_len_V}};

assign p_Result_11_fu_629_p3 = {{tmp_6_fu_625_p1}, {src_address_V}};

assign p_Result_12_fu_605_p6 = {{{{{{{{8'd82}, {ethernet_axi_id_V}}}, {ethernet_axi_id_V}}}, {tmp_7_fu_601_p1}}}, {grp_fu_402_p4}};

assign p_Result_13_fu_643_p3 = {{48'd244837814042624}, {rx_len_V}};

assign p_Result_1_fu_808_p5 = {{tmp_3_fu_804_p1}, {src_address_V[15:0]}};

assign p_Result_1_i_fu_885_p4 = {{data_in_TDATA[63:48]}};

assign p_Result_8_fu_721_p3 = {{tmp_5_fu_717_p1}, {src_address_V}};

assign p_Result_9_fu_699_p5 = {{{{{{8'd87}, {ethernet_axi_id_V}}}, {mac_type_V}}}, {grp_fu_402_p4}};

assign p_Result_s_fu_895_p5 = {{src_address_V[47:16]}, {p_Result_1_i_fu_885_p4}};

assign rx_fifo_V_data_V0_status = (rx_fifo_V_last_V_empty_n & rx_fifo_V_keep_V_empty_n & rx_fifo_V_data_V_empty_n);

assign rx_fifo_V_data_V_read = rx_fifo_V_data_V0_update;

assign rx_fifo_V_keep_V_read = rx_fifo_V_data_V0_update;

assign rx_fifo_V_last_V_read = rx_fifo_V_data_V0_update;

assign sel_tmp14_demorgan_fu_1071_p2 = (tmp_18_i_reg_1343 | sel_tmp7_demorgan_fu_1067_p2);

assign sel_tmp1_fu_1082_p2 = (tmp_21_i_reg_1349 & sel_tmp_fu_1076_p2);

assign sel_tmp23_demorgan_fu_1087_p2 = (tmp_21_i_reg_1349 | sel_tmp14_demorgan_fu_1071_p2);

assign sel_tmp2_fu_1125_p2 = (tmp_12_i_reg_1330_pp0_iter1_reg ^ 1'd1);

assign sel_tmp34_demorgan_fu_1103_p2 = (tmp_24_i_reg_1355 | sel_tmp23_demorgan_fu_1087_p2);

assign sel_tmp3_fu_1130_p2 = (tmp_15_i_reg_1337_pp0_iter1_reg & sel_tmp2_fu_1125_p2);

assign sel_tmp4_fu_1092_p2 = (sel_tmp23_demorgan_fu_1087_p2 ^ 1'd1);

assign sel_tmp5_fu_1098_p2 = (tmp_24_i_reg_1355 & sel_tmp4_fu_1092_p2);

assign sel_tmp6_fu_1108_p2 = (sel_tmp34_demorgan_fu_1103_p2 ^ 1'd1);

assign sel_tmp7_demorgan_fu_1067_p2 = (tmp_15_i_reg_1337 | tmp_12_i_reg_1330);

assign sel_tmp7_fu_1135_p2 = (sel_tmp7_demorgan_reg_1378 ^ 1'd1);

assign sel_tmp8_fu_1140_p2 = (tmp_18_i_reg_1343_pp0_iter1_reg & sel_tmp7_fu_1135_p2);

assign sel_tmp9_fu_1114_p2 = (tmp_27_i_reg_1361 & sel_tmp6_fu_1108_p2);

assign sel_tmp_fu_1076_p2 = (sel_tmp14_demorgan_fu_1071_p2 ^ 1'd1);

assign storemerge1_i_fu_735_p3 = ((ap_phi_mux_tmp_last_V_1_phi_fu_275_p8[0:0] === 1'b1) ? 2'd0 : 2'd2);

assign storemerge4_i_fu_998_p3 = ((tmp_32_i_fu_992_p2[0:0] === 1'b1) ? 2'd2 : 2'd0);

assign storemerge5_i_fu_1020_p3 = ((data_in_TLAST[0:0] === 1'b1) ? storemerge4_i_fu_998_p3 : 2'd1);

assign storemerge_cast_i_fu_663_p3 = ((not_tmp_last_V_9_i_fu_657_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign t_V_1_load_fu_677_p1 = send_tx_word_count_V;

assign t_V_2_load_fu_447_p1 = send_rx_word_count_V;

assign t_V_load_fu_761_p1 = word_count_V;

assign tmp_10_i_fu_469_p2 = ((rx_fifo_V_keep_V_dout == 8'd127) ? 1'b1 : 1'b0);

assign tmp_11_i_fu_979_p2 = ($signed(tx_len_V) + $signed(16'd65528));

assign tmp_12_i_fu_937_p2 = ((tx_len_V == 16'd8) ? 1'b1 : 1'b0);

assign tmp_13_i_fu_583_p2 = (rx_len_V + 16'd7);

assign tmp_14_i_fu_475_p2 = ((rx_fifo_V_keep_V_dout == 8'd63) ? 1'b1 : 1'b0);

assign tmp_15_i_fu_943_p2 = ((tx_len_V == 16'd7) ? 1'b1 : 1'b0);

assign tmp_16_i_fu_571_p2 = (rx_len_V + 16'd6);

assign tmp_17_i_fu_481_p2 = ((rx_fifo_V_keep_V_dout == 8'd31) ? 1'b1 : 1'b0);

assign tmp_18_i_fu_949_p2 = ((tx_len_V == 16'd6) ? 1'b1 : 1'b0);

assign tmp_19_i_fu_559_p2 = (rx_len_V + 16'd5);

assign tmp_1_nbreadreq_fu_212_p5 = (rx_fifo_V_last_V_empty_n & rx_fifo_V_keep_V_empty_n & rx_fifo_V_data_V_empty_n);

assign tmp_20_i_fu_487_p2 = ((rx_fifo_V_keep_V_dout == 8'd15) ? 1'b1 : 1'b0);

assign tmp_21_i_fu_955_p2 = ((tx_len_V == 16'd5) ? 1'b1 : 1'b0);

assign tmp_22_i_fu_547_p2 = (rx_len_V + 16'd4);

assign tmp_23_i_fu_493_p2 = ((rx_fifo_V_keep_V_dout == 8'd7) ? 1'b1 : 1'b0);

assign tmp_24_i_fu_961_p2 = ((tx_len_V == 16'd4) ? 1'b1 : 1'b0);

assign tmp_25_i_fu_535_p2 = (rx_len_V + 16'd3);

assign tmp_26_i_fu_499_p2 = ((rx_fifo_V_keep_V_dout == 8'd3) ? 1'b1 : 1'b0);

assign tmp_27_i_fu_967_p2 = ((tx_len_V == 16'd3) ? 1'b1 : 1'b0);

assign tmp_28_i_fu_523_p2 = (rx_len_V + 16'd2);

assign tmp_29_i_fu_505_p2 = ((rx_fifo_V_keep_V_dout == 8'd1) ? 1'b1 : 1'b0);

assign tmp_2_fu_875_p1 = data_in_TDATA[47:0];

assign tmp_30_i_fu_973_p2 = ((tx_len_V == 16'd2) ? 1'b1 : 1'b0);

assign tmp_31_i_fu_511_p2 = (rx_len_V + 16'd1);

assign tmp_32_i_fu_992_p2 = ((ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8 == 8'd87) ? 1'b1 : 1'b0);

assign tmp_3_fu_804_p1 = data_in_TDATA[31:0];

assign tmp_4_fu_776_p1 = data_in_TDATA[15:0];

assign tmp_4_i_fu_463_p2 = ((rx_fifo_V_keep_V_dout == 8'd255) ? 1'b1 : 1'b0);

assign tmp_5_fu_717_p1 = dest_address_V[15:0];

assign tmp_6_fu_625_p1 = dest_address_V[15:0];

assign tmp_6_i_fu_931_p2 = ((tx_len_V > 16'd8) ? 1'b1 : 1'b0);

assign tmp_7_fu_601_p1 = mac_type_V[7:0];

assign tmp_8_i_fu_792_p2 = ((axi_command_V == 8'd82) ? 1'b1 : 1'b0);

assign tmp_9_i_fu_913_p2 = ((axi_command_V != 8'd87) ? 1'b1 : 1'b0);

assign tmp_i_fu_919_p2 = ((tx_len_V == 16'd0) ? 1'b1 : 1'b0);

assign tmp_keep_V_2_fu_1208_p3 = ((or_cond8_fu_1195_p2[0:0] === 1'b1) ? newSel7_cast_fu_1191_p1 : newSel9_fu_1200_p3);

assign tmp_last_V_fu_459_p1 = rx_fifo_V_last_V_dout;

assign tmp_nbreadreq_fu_200_p5 = data_in_TVALID;

assign tx_fifo_V_data_V_1_ack_in = tx_fifo_V_data_V_1_state[1'd1];

assign tx_fifo_V_data_V_1_ack_out = fifo_out_TREADY;

assign tx_fifo_V_data_V_1_load_A = (tx_fifo_V_data_V_1_state_cmp_full & ~tx_fifo_V_data_V_1_sel_wr);

assign tx_fifo_V_data_V_1_load_B = (tx_fifo_V_data_V_1_state_cmp_full & tx_fifo_V_data_V_1_sel_wr);

assign tx_fifo_V_data_V_1_sel = tx_fifo_V_data_V_1_sel_rd;

assign tx_fifo_V_data_V_1_state_cmp_full = ((tx_fifo_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign tx_fifo_V_data_V_1_vld_out = tx_fifo_V_data_V_1_state[1'd0];

assign tx_fifo_V_keep_V_1_ack_in = tx_fifo_V_keep_V_1_state[1'd1];

assign tx_fifo_V_keep_V_1_ack_out = fifo_out_TREADY;

assign tx_fifo_V_keep_V_1_load_A = (tx_fifo_V_keep_V_1_state_cmp_full & ~tx_fifo_V_keep_V_1_sel_wr);

assign tx_fifo_V_keep_V_1_load_B = (tx_fifo_V_keep_V_1_state_cmp_full & tx_fifo_V_keep_V_1_sel_wr);

assign tx_fifo_V_keep_V_1_sel = tx_fifo_V_keep_V_1_sel_rd;

assign tx_fifo_V_keep_V_1_state_cmp_full = ((tx_fifo_V_keep_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign tx_fifo_V_keep_V_1_vld_out = tx_fifo_V_keep_V_1_state[1'd0];

assign tx_fifo_V_last_V_1_ack_in = tx_fifo_V_last_V_1_state[1'd1];

assign tx_fifo_V_last_V_1_ack_out = fifo_out_TREADY;

assign tx_fifo_V_last_V_1_load_A = (tx_fifo_V_last_V_1_state_cmp_full & ~tx_fifo_V_last_V_1_sel_wr);

assign tx_fifo_V_last_V_1_load_B = (tx_fifo_V_last_V_1_state_cmp_full & tx_fifo_V_last_V_1_sel_wr);

assign tx_fifo_V_last_V_1_sel = tx_fifo_V_last_V_1_sel_rd;

assign tx_fifo_V_last_V_1_state_cmp_full = ((tx_fifo_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign tx_fifo_V_last_V_1_vld_out = tx_fifo_V_last_V_1_state[1'd0];

assign word_count_V_flag_1_s_fu_1006_p2 = (data_in_TLAST | ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8);

assign word_count_V_new_1_i_fu_1012_p3 = ((data_in_TLAST[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_word_count_V_new_i_phi_fu_320_p8);

endmodule //ethernet_axis_ip
