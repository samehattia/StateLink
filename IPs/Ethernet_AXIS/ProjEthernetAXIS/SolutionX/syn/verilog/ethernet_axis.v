// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ethernet_axis,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku040-ffva1156-2-e,HLS_INPUT_CLOCK=2.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.120500,HLS_SYN_LAT=5,HLS_SYN_TPT=1,HLS_SYN_MEM=7,HLS_SYN_DSP=0,HLS_SYN_FF=1272,HLS_SYN_LUT=1772,HLS_VERSION=2018_3}" *)

module ethernet_axis (
        data_in_TDATA,
        data_in_TKEEP,
        data_in_TLAST,
        data_out_TDATA,
        data_out_TKEEP,
        data_out_TLAST,
        fifo_in_TDATA,
        fifo_in_TKEEP,
        fifo_in_TLAST,
        fifo_out_TDATA,
        fifo_out_TKEEP,
        fifo_out_TLAST,
        ap_clk,
        ap_rst_n,
        fifo_in_TVALID,
        fifo_in_TREADY,
        data_in_TVALID,
        data_in_TREADY,
        data_out_TVALID,
        data_out_TREADY,
        fifo_out_TVALID,
        fifo_out_TREADY
);


input  [63:0] data_in_TDATA;
input  [7:0] data_in_TKEEP;
input  [0:0] data_in_TLAST;
output  [63:0] data_out_TDATA;
output  [7:0] data_out_TKEEP;
output  [0:0] data_out_TLAST;
input  [63:0] fifo_in_TDATA;
input  [7:0] fifo_in_TKEEP;
input  [0:0] fifo_in_TLAST;
output  [63:0] fifo_out_TDATA;
output  [7:0] fifo_out_TKEEP;
output  [0:0] fifo_out_TLAST;
input   ap_clk;
input   ap_rst_n;
input   fifo_in_TVALID;
output   fifo_in_TREADY;
input   data_in_TVALID;
output   data_in_TREADY;
output   data_out_TVALID;
input   data_out_TREADY;
output   fifo_out_TVALID;
input   fifo_out_TREADY;

 reg    ap_rst_n_inv;
wire    rx_fifo_ip_U0_ap_start;
wire    rx_fifo_ip_U0_ap_done;
wire    rx_fifo_ip_U0_ap_continue;
wire    rx_fifo_ip_U0_ap_idle;
wire    rx_fifo_ip_U0_ap_ready;
wire    rx_fifo_ip_U0_fifo_in_TREADY;
wire   [63:0] rx_fifo_ip_U0_rx_fifo_V_data_V_din;
wire    rx_fifo_ip_U0_rx_fifo_V_data_V_write;
wire   [7:0] rx_fifo_ip_U0_rx_fifo_V_keep_V_din;
wire    rx_fifo_ip_U0_rx_fifo_V_keep_V_write;
wire   [0:0] rx_fifo_ip_U0_rx_fifo_V_last_V_din;
wire    rx_fifo_ip_U0_rx_fifo_V_last_V_write;
wire    ethernet_axis_ip_U0_ap_start;
wire    ethernet_axis_ip_U0_ap_done;
wire    ethernet_axis_ip_U0_ap_continue;
wire    ethernet_axis_ip_U0_ap_idle;
wire    ethernet_axis_ip_U0_ap_ready;
wire    ethernet_axis_ip_U0_data_in_TREADY;
wire   [63:0] ethernet_axis_ip_U0_data_out_TDATA;
wire    ethernet_axis_ip_U0_data_out_TVALID;
wire   [7:0] ethernet_axis_ip_U0_data_out_TKEEP;
wire   [0:0] ethernet_axis_ip_U0_data_out_TLAST;
wire   [63:0] ethernet_axis_ip_U0_fifo_out_TDATA;
wire    ethernet_axis_ip_U0_fifo_out_TVALID;
wire   [7:0] ethernet_axis_ip_U0_fifo_out_TKEEP;
wire   [0:0] ethernet_axis_ip_U0_fifo_out_TLAST;
wire    ethernet_axis_ip_U0_rx_fifo_V_data_V_read;
wire    ethernet_axis_ip_U0_rx_fifo_V_keep_V_read;
wire    ethernet_axis_ip_U0_rx_fifo_V_last_V_read;
wire    ap_sync_continue;
wire    rx_fifo_V_data_V_full_n;
wire   [63:0] rx_fifo_V_data_V_dout;
wire    rx_fifo_V_data_V_empty_n;
wire    rx_fifo_V_keep_V_full_n;
wire   [7:0] rx_fifo_V_keep_V_dout;
wire    rx_fifo_V_keep_V_empty_n;
wire    rx_fifo_V_last_V_full_n;
wire   [0:0] rx_fifo_V_last_V_dout;
wire    rx_fifo_V_last_V_empty_n;
wire    rx_fifo_ip_U0_start_full_n;
wire    rx_fifo_ip_U0_start_write;
wire    ethernet_axis_ip_U0_start_full_n;
wire    ethernet_axis_ip_U0_start_write;

rx_fifo_ip rx_fifo_ip_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(rx_fifo_ip_U0_ap_start),
    .ap_done(rx_fifo_ip_U0_ap_done),
    .ap_continue(rx_fifo_ip_U0_ap_continue),
    .ap_idle(rx_fifo_ip_U0_ap_idle),
    .ap_ready(rx_fifo_ip_U0_ap_ready),
    .fifo_in_TVALID(fifo_in_TVALID),
    .fifo_in_TDATA(fifo_in_TDATA),
    .fifo_in_TREADY(rx_fifo_ip_U0_fifo_in_TREADY),
    .fifo_in_TKEEP(fifo_in_TKEEP),
    .fifo_in_TLAST(fifo_in_TLAST),
    .rx_fifo_V_data_V_din(rx_fifo_ip_U0_rx_fifo_V_data_V_din),
    .rx_fifo_V_data_V_full_n(rx_fifo_V_data_V_full_n),
    .rx_fifo_V_data_V_write(rx_fifo_ip_U0_rx_fifo_V_data_V_write),
    .rx_fifo_V_keep_V_din(rx_fifo_ip_U0_rx_fifo_V_keep_V_din),
    .rx_fifo_V_keep_V_full_n(rx_fifo_V_keep_V_full_n),
    .rx_fifo_V_keep_V_write(rx_fifo_ip_U0_rx_fifo_V_keep_V_write),
    .rx_fifo_V_last_V_din(rx_fifo_ip_U0_rx_fifo_V_last_V_din),
    .rx_fifo_V_last_V_full_n(rx_fifo_V_last_V_full_n),
    .rx_fifo_V_last_V_write(rx_fifo_ip_U0_rx_fifo_V_last_V_write)
);

ethernet_axis_ip ethernet_axis_ip_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ethernet_axis_ip_U0_ap_start),
    .ap_done(ethernet_axis_ip_U0_ap_done),
    .ap_continue(ethernet_axis_ip_U0_ap_continue),
    .ap_idle(ethernet_axis_ip_U0_ap_idle),
    .ap_ready(ethernet_axis_ip_U0_ap_ready),
    .data_in_TVALID(data_in_TVALID),
    .data_out_TREADY(data_out_TREADY),
    .fifo_out_TREADY(fifo_out_TREADY),
    .data_in_TDATA(data_in_TDATA),
    .data_in_TREADY(ethernet_axis_ip_U0_data_in_TREADY),
    .data_in_TKEEP(data_in_TKEEP),
    .data_in_TLAST(data_in_TLAST),
    .data_out_TDATA(ethernet_axis_ip_U0_data_out_TDATA),
    .data_out_TVALID(ethernet_axis_ip_U0_data_out_TVALID),
    .data_out_TKEEP(ethernet_axis_ip_U0_data_out_TKEEP),
    .data_out_TLAST(ethernet_axis_ip_U0_data_out_TLAST),
    .fifo_out_TDATA(ethernet_axis_ip_U0_fifo_out_TDATA),
    .fifo_out_TVALID(ethernet_axis_ip_U0_fifo_out_TVALID),
    .fifo_out_TKEEP(ethernet_axis_ip_U0_fifo_out_TKEEP),
    .fifo_out_TLAST(ethernet_axis_ip_U0_fifo_out_TLAST),
    .rx_fifo_V_data_V_dout(rx_fifo_V_data_V_dout),
    .rx_fifo_V_data_V_empty_n(rx_fifo_V_data_V_empty_n),
    .rx_fifo_V_data_V_read(ethernet_axis_ip_U0_rx_fifo_V_data_V_read),
    .rx_fifo_V_keep_V_dout(rx_fifo_V_keep_V_dout),
    .rx_fifo_V_keep_V_empty_n(rx_fifo_V_keep_V_empty_n),
    .rx_fifo_V_keep_V_read(ethernet_axis_ip_U0_rx_fifo_V_keep_V_read),
    .rx_fifo_V_last_V_dout(rx_fifo_V_last_V_dout),
    .rx_fifo_V_last_V_empty_n(rx_fifo_V_last_V_empty_n),
    .rx_fifo_V_last_V_read(ethernet_axis_ip_U0_rx_fifo_V_last_V_read)
);

fifo_w64_d512_A rx_fifo_V_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rx_fifo_ip_U0_rx_fifo_V_data_V_din),
    .if_full_n(rx_fifo_V_data_V_full_n),
    .if_write(rx_fifo_ip_U0_rx_fifo_V_data_V_write),
    .if_dout(rx_fifo_V_data_V_dout),
    .if_empty_n(rx_fifo_V_data_V_empty_n),
    .if_read(ethernet_axis_ip_U0_rx_fifo_V_data_V_read)
);

fifo_w8_d512_A rx_fifo_V_keep_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rx_fifo_ip_U0_rx_fifo_V_keep_V_din),
    .if_full_n(rx_fifo_V_keep_V_full_n),
    .if_write(rx_fifo_ip_U0_rx_fifo_V_keep_V_write),
    .if_dout(rx_fifo_V_keep_V_dout),
    .if_empty_n(rx_fifo_V_keep_V_empty_n),
    .if_read(ethernet_axis_ip_U0_rx_fifo_V_keep_V_read)
);

fifo_w1_d512_A rx_fifo_V_last_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rx_fifo_ip_U0_rx_fifo_V_last_V_din),
    .if_full_n(rx_fifo_V_last_V_full_n),
    .if_write(rx_fifo_ip_U0_rx_fifo_V_last_V_write),
    .if_dout(rx_fifo_V_last_V_dout),
    .if_empty_n(rx_fifo_V_last_V_empty_n),
    .if_read(ethernet_axis_ip_U0_rx_fifo_V_last_V_read)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b0;

assign data_in_TREADY = ethernet_axis_ip_U0_data_in_TREADY;

assign data_out_TDATA = ethernet_axis_ip_U0_data_out_TDATA;

assign data_out_TKEEP = ethernet_axis_ip_U0_data_out_TKEEP;

assign data_out_TLAST = ethernet_axis_ip_U0_data_out_TLAST;

assign data_out_TVALID = ethernet_axis_ip_U0_data_out_TVALID;

assign ethernet_axis_ip_U0_ap_continue = 1'b1;

assign ethernet_axis_ip_U0_ap_start = 1'b1;

assign ethernet_axis_ip_U0_start_full_n = 1'b1;

assign ethernet_axis_ip_U0_start_write = 1'b0;

assign fifo_in_TREADY = rx_fifo_ip_U0_fifo_in_TREADY;

assign fifo_out_TDATA = ethernet_axis_ip_U0_fifo_out_TDATA;

assign fifo_out_TKEEP = ethernet_axis_ip_U0_fifo_out_TKEEP;

assign fifo_out_TLAST = ethernet_axis_ip_U0_fifo_out_TLAST;

assign fifo_out_TVALID = ethernet_axis_ip_U0_fifo_out_TVALID;

assign rx_fifo_ip_U0_ap_continue = 1'b1;

assign rx_fifo_ip_U0_ap_start = 1'b1;

assign rx_fifo_ip_U0_start_full_n = 1'b1;

assign rx_fifo_ip_U0_start_write = 1'b0;

endmodule //ethernet_axis
