// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ethernet_axis_ip.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ethernet_axis_ip::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ethernet_axis_ip::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> ethernet_axis_ip::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> ethernet_axis_ip::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool ethernet_axis_ip::ap_const_boolean_1 = true;
const sc_lv<2> ethernet_axis_ip::ap_const_lv2_3 = "11";
const sc_lv<2> ethernet_axis_ip::ap_const_lv2_2 = "10";
const sc_lv<2> ethernet_axis_ip::ap_const_lv2_1 = "1";
const sc_lv<1> ethernet_axis_ip::ap_const_lv1_0 = "0";
const sc_lv<1> ethernet_axis_ip::ap_const_lv1_1 = "1";
const bool ethernet_axis_ip::ap_const_boolean_0 = false;
const sc_lv<2> ethernet_axis_ip::ap_const_lv2_0 = "00";
const sc_lv<16> ethernet_axis_ip::ap_const_lv16_0 = "0000000000000000";
const sc_lv<8> ethernet_axis_ip::ap_const_lv8_FF = "11111111";
const sc_lv<16> ethernet_axis_ip::ap_const_lv16_8 = "1000";
const sc_lv<32> ethernet_axis_ip::ap_const_lv32_10 = "10000";
const sc_lv<32> ethernet_axis_ip::ap_const_lv32_2F = "101111";
const sc_lv<8> ethernet_axis_ip::ap_const_lv8_7F = "1111111";
const sc_lv<8> ethernet_axis_ip::ap_const_lv8_3F = "111111";
const sc_lv<8> ethernet_axis_ip::ap_const_lv8_1F = "11111";
const sc_lv<8> ethernet_axis_ip::ap_const_lv8_F = "1111";
const sc_lv<8> ethernet_axis_ip::ap_const_lv8_7 = "111";
const sc_lv<8> ethernet_axis_ip::ap_const_lv8_3 = "11";
const sc_lv<8> ethernet_axis_ip::ap_const_lv8_1 = "1";
const sc_lv<16> ethernet_axis_ip::ap_const_lv16_1 = "1";
const sc_lv<16> ethernet_axis_ip::ap_const_lv16_2 = "10";
const sc_lv<16> ethernet_axis_ip::ap_const_lv16_3 = "11";
const sc_lv<16> ethernet_axis_ip::ap_const_lv16_4 = "100";
const sc_lv<16> ethernet_axis_ip::ap_const_lv16_5 = "101";
const sc_lv<16> ethernet_axis_ip::ap_const_lv16_6 = "110";
const sc_lv<16> ethernet_axis_ip::ap_const_lv16_7 = "111";
const sc_lv<8> ethernet_axis_ip::ap_const_lv8_52 = "1010010";
const sc_lv<48> ethernet_axis_ip::ap_const_lv48_DEADBEEF0000 = "110111101010110110111110111011110000000000000000";
const sc_lv<8> ethernet_axis_ip::ap_const_lv8_57 = "1010111";
const sc_lv<32> ethernet_axis_ip::ap_const_lv32_20 = "100000";
const sc_lv<32> ethernet_axis_ip::ap_const_lv32_30 = "110000";
const sc_lv<32> ethernet_axis_ip::ap_const_lv32_37 = "110111";
const sc_lv<32> ethernet_axis_ip::ap_const_lv32_38 = "111000";
const sc_lv<32> ethernet_axis_ip::ap_const_lv32_3F = "111111";
const sc_lv<32> ethernet_axis_ip::ap_const_lv32_F = "1111";
const sc_lv<16> ethernet_axis_ip::ap_const_lv16_FFF8 = "1111111111111000";
const sc_lv<6> ethernet_axis_ip::ap_const_lv6_7 = "111";
const sc_lv<6> ethernet_axis_ip::ap_const_lv6_F = "1111";
const sc_lv<6> ethernet_axis_ip::ap_const_lv6_1F = "11111";
const sc_lv<6> ethernet_axis_ip::ap_const_lv6_3F = "111111";

ethernet_axis_ip::ethernet_axis_ip(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( rx_fifo_V_data_V0_status );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( data_in_TVALID );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( tx_fifo_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( tx_fifo_V_keep_V_1_ack_in );
    sensitive << ( tx_fifo_V_last_V_1_ack_in );
    sensitive << ( fsm_state_V );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( rx_fifo_V_data_V0_status );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( data_in_TVALID );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( ap_block_state2_io );
    sensitive << ( tx_fifo_V_data_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( tx_fifo_V_keep_V_1_ack_in );
    sensitive << ( tx_fifo_V_last_V_1_ack_in );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( rx_fifo_V_data_V0_status );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( data_in_TVALID );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( ap_block_state2_io );
    sensitive << ( tx_fifo_V_data_V_1_ack_in );
    sensitive << ( ap_block_state3_io );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( tx_fifo_V_keep_V_1_ack_in );
    sensitive << ( tx_fifo_V_last_V_1_ack_in );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( rx_fifo_V_data_V0_status );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( data_in_TVALID );
    sensitive << ( fsm_state_V );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( fsm_state_V_load_reg_1217 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( fsm_state_V_load_reg_1217_pp0_iter1_reg );
    sensitive << ( tx_fifo_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op193_write_state3 );
    sensitive << ( ap_predicate_op194_write_state3 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( tx_fifo_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op223_write_state4 );
    sensitive << ( ap_predicate_op224_write_state4 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( tx_fifo_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( tx_fifo_V_keep_V_1_ack_in );
    sensitive << ( tx_fifo_V_last_V_1_ack_in );

    SC_METHOD(thread_ap_condition_1400);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( fsm_state_V_load_load_fu_411_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_condition_1404);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( fsm_state_V );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( t_V_load_fu_761_p1 );
    sensitive << ( or_cond_i_fu_925_p2 );

    SC_METHOD(thread_ap_condition_168);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_541);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( fsm_state_V );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_condition_878);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );

    SC_METHOD(thread_ap_condition_880);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( fsm_state_V_load_load_fu_411_p1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_882);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );

    SC_METHOD(thread_ap_condition_924);
    sensitive << ( fsm_state_V );
    sensitive << ( t_V_load_fu_761_p1 );
    sensitive << ( tmp_8_i_fu_792_p2 );

    SC_METHOD(thread_ap_condition_969);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_idle_pp0_0to2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( data_in_TDATA );
    sensitive << ( fsm_state_V );
    sensitive << ( axi_command_V );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( t_V_load_fu_761_p1 );
    sensitive << ( ap_phi_reg_pp0_iter0_axi_command_V_loc_i_reg_334 );

    SC_METHOD(thread_ap_phi_mux_storemerge2_i_phi_fu_350_p4);
    sensitive << ( ap_phi_reg_pp0_iter0_storemerge2_i_reg_347 );
    sensitive << ( tmp_nbreadreq_fu_200_p5 );
    sensitive << ( p_4_cast_i_fu_1052_p3 );
    sensitive << ( ap_condition_1400 );

    SC_METHOD(thread_ap_phi_mux_storemerge3_i_phi_fu_293_p4);
    sensitive << ( tmp_6_i_fu_931_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_storemerge3_i_reg_290 );
    sensitive << ( tmp_11_i_fu_979_p2 );
    sensitive << ( ap_condition_1404 );

    SC_METHOD(thread_ap_phi_mux_tmp_last_V_1_phi_fu_275_p8);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( fsm_state_V_load_load_fu_411_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( t_V_1_load_fu_677_p1 );
    sensitive << ( ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_271 );

    SC_METHOD(thread_ap_phi_mux_tmp_last_V_3_phi_fu_256_p8);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( t_V_2_load_fu_447_p1 );
    sensitive << ( fsm_state_V );
    sensitive << ( send_rx_word_count_V );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_252 );

    SC_METHOD(thread_ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( fsm_state_V );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( t_V_load_fu_761_p1 );
    sensitive << ( ap_phi_reg_pp0_iter0_word_count_V_flag_i_reg_300 );

    SC_METHOD(thread_ap_phi_mux_word_count_V_new_i_phi_fu_320_p8);
    sensitive << ( t_V_load_fu_761_p1 );
    sensitive << ( ap_phi_reg_pp0_iter0_word_count_V_new_i_reg_317 );
    sensitive << ( ap_condition_541 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_axi_command_V_loc_i_reg_334);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_storemerge2_i_reg_347);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_storemerge3_i_reg_290);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_tmp_data_V_3_reg_357);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_tmp_data_V_reg_373);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_271);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_252);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_word_count_V_flag_i_reg_300);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_word_count_V_new_i_reg_317);

    SC_METHOD(thread_ap_predicate_op16_read_state1);
    sensitive << ( fsm_state_V );
    sensitive << ( send_rx_word_count_V );

    SC_METHOD(thread_ap_predicate_op193_write_state3);
    sensitive << ( fsm_state_V_load_reg_1217_pp0_iter1_reg );
    sensitive << ( t_V_reg_1314_pp0_iter1_reg );
    sensitive << ( or_cond_i_reg_1322_pp0_iter1_reg );
    sensitive << ( tmp_6_i_reg_1326_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op194_write_state3);
    sensitive << ( fsm_state_V_load_reg_1217_pp0_iter1_reg );
    sensitive << ( t_V_reg_1314_pp0_iter1_reg );
    sensitive << ( or_cond_i_reg_1322_pp0_iter1_reg );
    sensitive << ( tmp_6_i_reg_1326_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op223_write_state4);
    sensitive << ( fsm_state_V_load_reg_1217_pp0_iter2_reg );
    sensitive << ( t_V_reg_1314_pp0_iter2_reg );
    sensitive << ( or_cond_i_reg_1322_pp0_iter2_reg );
    sensitive << ( tmp_6_i_reg_1326_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op224_write_state4);
    sensitive << ( fsm_state_V_load_reg_1217_pp0_iter2_reg );
    sensitive << ( t_V_reg_1314_pp0_iter2_reg );
    sensitive << ( or_cond_i_reg_1322_pp0_iter2_reg );
    sensitive << ( tmp_6_i_reg_1326_pp0_iter2_reg );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to2 );

    SC_METHOD(thread_brmerge_demorgan_i_fu_1046_p2);
    sensitive << ( rx_ready_V );
    sensitive << ( tmp_1_nbreadreq_fu_212_p5 );

    SC_METHOD(thread_data_in_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( data_in_TVALID );
    sensitive << ( fsm_state_V );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_data_in_TREADY);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );

    SC_METHOD(thread_data_out_TDATA);
    sensitive << ( data_out_V_data_V_1_data_out );

    SC_METHOD(thread_data_out_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( fsm_state_V_load_reg_1217 );
    sensitive << ( fsm_state_V_load_reg_1217_pp0_iter1_reg );
    sensitive << ( data_out_V_data_V_1_state );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_data_out_TKEEP);
    sensitive << ( data_out_V_keep_V_1_data_out );

    SC_METHOD(thread_data_out_TLAST);
    sensitive << ( data_out_V_last_V_1_data_out );

    SC_METHOD(thread_data_out_TVALID);
    sensitive << ( data_out_V_last_V_1_state );

    SC_METHOD(thread_data_out_V_data_V_1_ack_in);
    sensitive << ( data_out_V_data_V_1_state );

    SC_METHOD(thread_data_out_V_data_V_1_ack_out);
    sensitive << ( data_out_TREADY );

    SC_METHOD(thread_data_out_V_data_V_1_data_in);
    sensitive << ( fsm_state_V_load_reg_1217 );
    sensitive << ( ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357 );
    sensitive << ( ap_phi_reg_pp0_iter1_tmp_data_V_reg_373 );
    sensitive << ( ap_condition_969 );

    SC_METHOD(thread_data_out_V_data_V_1_data_out);
    sensitive << ( data_out_V_data_V_1_payload_A );
    sensitive << ( data_out_V_data_V_1_payload_B );
    sensitive << ( data_out_V_data_V_1_sel );

    SC_METHOD(thread_data_out_V_data_V_1_load_A);
    sensitive << ( data_out_V_data_V_1_sel_wr );
    sensitive << ( data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_data_V_1_load_B);
    sensitive << ( data_out_V_data_V_1_sel_wr );
    sensitive << ( data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_data_V_1_sel);
    sensitive << ( data_out_V_data_V_1_sel_rd );

    SC_METHOD(thread_data_out_V_data_V_1_state_cmp_full);
    sensitive << ( data_out_V_data_V_1_state );

    SC_METHOD(thread_data_out_V_data_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( fsm_state_V_load_reg_1217 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_out_V_data_V_1_vld_out);
    sensitive << ( data_out_V_data_V_1_state );

    SC_METHOD(thread_data_out_V_keep_V_1_ack_in);
    sensitive << ( data_out_V_keep_V_1_state );

    SC_METHOD(thread_data_out_V_keep_V_1_ack_out);
    sensitive << ( data_out_TREADY );

    SC_METHOD(thread_data_out_V_keep_V_1_data_out);
    sensitive << ( data_out_V_keep_V_1_sel );

    SC_METHOD(thread_data_out_V_keep_V_1_sel);
    sensitive << ( data_out_V_keep_V_1_sel_rd );

    SC_METHOD(thread_data_out_V_keep_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( fsm_state_V_load_reg_1217 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_out_V_keep_V_1_vld_out);
    sensitive << ( data_out_V_keep_V_1_state );

    SC_METHOD(thread_data_out_V_last_V_1_ack_in);
    sensitive << ( data_out_V_last_V_1_state );

    SC_METHOD(thread_data_out_V_last_V_1_ack_out);
    sensitive << ( data_out_TREADY );

    SC_METHOD(thread_data_out_V_last_V_1_data_in);
    sensitive << ( fsm_state_V_load_reg_1217 );
    sensitive << ( tmp_last_V_3_reg_252 );
    sensitive << ( tmp_last_V_1_reg_271 );
    sensitive << ( ap_condition_969 );

    SC_METHOD(thread_data_out_V_last_V_1_data_out);
    sensitive << ( data_out_V_last_V_1_payload_A );
    sensitive << ( data_out_V_last_V_1_payload_B );
    sensitive << ( data_out_V_last_V_1_sel );

    SC_METHOD(thread_data_out_V_last_V_1_load_A);
    sensitive << ( data_out_V_last_V_1_sel_wr );
    sensitive << ( data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_last_V_1_load_B);
    sensitive << ( data_out_V_last_V_1_sel_wr );
    sensitive << ( data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_last_V_1_sel);
    sensitive << ( data_out_V_last_V_1_sel_rd );

    SC_METHOD(thread_data_out_V_last_V_1_state_cmp_full);
    sensitive << ( data_out_V_last_V_1_state );

    SC_METHOD(thread_data_out_V_last_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( fsm_state_V_load_reg_1217 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_out_V_last_V_1_vld_out);
    sensitive << ( data_out_V_last_V_1_state );

    SC_METHOD(thread_fifo_out_TDATA);
    sensitive << ( tx_fifo_V_data_V_1_data_out );

    SC_METHOD(thread_fifo_out_TDATA_blk_n);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_predicate_op193_write_state3 );
    sensitive << ( ap_predicate_op194_write_state3 );
    sensitive << ( ap_predicate_op223_write_state4 );
    sensitive << ( ap_predicate_op224_write_state4 );
    sensitive << ( tx_fifo_V_data_V_1_state );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_fifo_out_TKEEP);
    sensitive << ( tx_fifo_V_keep_V_1_data_out );

    SC_METHOD(thread_fifo_out_TLAST);
    sensitive << ( tx_fifo_V_last_V_1_data_out );

    SC_METHOD(thread_fifo_out_TVALID);
    sensitive << ( tx_fifo_V_last_V_1_state );

    SC_METHOD(thread_fsm_state_V_load_load_fu_411_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( fsm_state_V );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_391_p2);
    sensitive << ( rx_len_V );

    SC_METHOD(thread_grp_fu_402_p4);
    sensitive << ( dest_address_V );

    SC_METHOD(thread_newSel1_fu_1152_p3);
    sensitive << ( sel_tmp1_reg_1383 );

    SC_METHOD(thread_newSel3_fu_1164_p3);
    sensitive << ( sel_tmp3_fu_1130_p2 );

    SC_METHOD(thread_newSel5_cast_cast_fu_1177_p3);
    sensitive << ( tmp_30_i_reg_1366_pp0_iter1_reg );

    SC_METHOD(thread_newSel7_cast_fu_1191_p1);
    sensitive << ( newSel7_fu_1184_p3 );

    SC_METHOD(thread_newSel7_fu_1184_p3);
    sensitive << ( or_cond_reg_1394 );
    sensitive << ( newSel_cast_cast_fu_1145_p3 );
    sensitive << ( newSel1_fu_1152_p3 );

    SC_METHOD(thread_newSel9_fu_1200_p3);
    sensitive << ( or_cond4_fu_1172_p2 );
    sensitive << ( newSel3_fu_1164_p3 );
    sensitive << ( newSel5_cast_cast_fu_1177_p3 );

    SC_METHOD(thread_newSel_cast_cast_fu_1145_p3);
    sensitive << ( sel_tmp9_reg_1389 );

    SC_METHOD(thread_not_tmp_last_V_9_i_fu_657_p2);
    sensitive << ( ap_phi_mux_tmp_last_V_3_phi_fu_256_p8 );

    SC_METHOD(thread_or_cond2_fu_1159_p2);
    sensitive << ( sel_tmp1_reg_1383 );
    sensitive << ( sel_tmp8_fu_1140_p2 );

    SC_METHOD(thread_or_cond4_fu_1172_p2);
    sensitive << ( tmp_12_i_reg_1330_pp0_iter1_reg );
    sensitive << ( sel_tmp3_fu_1130_p2 );

    SC_METHOD(thread_or_cond8_fu_1195_p2);
    sensitive << ( or_cond_reg_1394 );
    sensitive << ( or_cond2_fu_1159_p2 );

    SC_METHOD(thread_or_cond_fu_1119_p2);
    sensitive << ( sel_tmp9_fu_1114_p2 );
    sensitive << ( sel_tmp5_fu_1098_p2 );

    SC_METHOD(thread_or_cond_i_fu_925_p2);
    sensitive << ( tmp_9_i_fu_913_p2 );
    sensitive << ( tmp_i_fu_919_p2 );

    SC_METHOD(thread_p_4_cast_i_fu_1052_p3);
    sensitive << ( brmerge_demorgan_i_fu_1046_p2 );

    SC_METHOD(thread_p_Result_10_fu_685_p3);
    sensitive << ( axis_len_V );

    SC_METHOD(thread_p_Result_11_fu_629_p3);
    sensitive << ( src_address_V );
    sensitive << ( tmp_6_fu_625_p1 );

    SC_METHOD(thread_p_Result_12_fu_605_p6);
    sensitive << ( ethernet_axi_id_V );
    sensitive << ( tmp_7_fu_601_p1 );
    sensitive << ( grp_fu_402_p4 );

    SC_METHOD(thread_p_Result_13_fu_643_p3);
    sensitive << ( rx_len_V );

    SC_METHOD(thread_p_Result_1_fu_808_p5);
    sensitive << ( src_address_V );
    sensitive << ( tmp_3_fu_804_p1 );

    SC_METHOD(thread_p_Result_1_i_fu_885_p4);
    sensitive << ( data_in_TDATA );

    SC_METHOD(thread_p_Result_8_fu_721_p3);
    sensitive << ( src_address_V );
    sensitive << ( tmp_5_fu_717_p1 );

    SC_METHOD(thread_p_Result_9_fu_699_p5);
    sensitive << ( mac_type_V );
    sensitive << ( ethernet_axi_id_V );
    sensitive << ( grp_fu_402_p4 );

    SC_METHOD(thread_p_Result_s_fu_895_p5);
    sensitive << ( src_address_V );
    sensitive << ( p_Result_1_i_fu_885_p4 );

    SC_METHOD(thread_rx_fifo_V_data_V0_status);
    sensitive << ( rx_fifo_V_data_V_empty_n );
    sensitive << ( rx_fifo_V_keep_V_empty_n );
    sensitive << ( rx_fifo_V_last_V_empty_n );

    SC_METHOD(thread_rx_fifo_V_data_V0_update);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_fifo_V_data_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( rx_fifo_V_data_V_empty_n );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_fifo_V_data_V_read);
    sensitive << ( rx_fifo_V_data_V0_update );

    SC_METHOD(thread_rx_fifo_V_keep_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( rx_fifo_V_keep_V_empty_n );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_fifo_V_keep_V_read);
    sensitive << ( rx_fifo_V_data_V0_update );

    SC_METHOD(thread_rx_fifo_V_last_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( rx_fifo_V_last_V_empty_n );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_fifo_V_last_V_read);
    sensitive << ( rx_fifo_V_data_V0_update );

    SC_METHOD(thread_sel_tmp14_demorgan_fu_1071_p2);
    sensitive << ( tmp_18_i_reg_1343 );
    sensitive << ( sel_tmp7_demorgan_fu_1067_p2 );

    SC_METHOD(thread_sel_tmp1_fu_1082_p2);
    sensitive << ( tmp_21_i_reg_1349 );
    sensitive << ( sel_tmp_fu_1076_p2 );

    SC_METHOD(thread_sel_tmp23_demorgan_fu_1087_p2);
    sensitive << ( tmp_21_i_reg_1349 );
    sensitive << ( sel_tmp14_demorgan_fu_1071_p2 );

    SC_METHOD(thread_sel_tmp2_fu_1125_p2);
    sensitive << ( tmp_12_i_reg_1330_pp0_iter1_reg );

    SC_METHOD(thread_sel_tmp34_demorgan_fu_1103_p2);
    sensitive << ( tmp_24_i_reg_1355 );
    sensitive << ( sel_tmp23_demorgan_fu_1087_p2 );

    SC_METHOD(thread_sel_tmp3_fu_1130_p2);
    sensitive << ( tmp_15_i_reg_1337_pp0_iter1_reg );
    sensitive << ( sel_tmp2_fu_1125_p2 );

    SC_METHOD(thread_sel_tmp4_fu_1092_p2);
    sensitive << ( sel_tmp23_demorgan_fu_1087_p2 );

    SC_METHOD(thread_sel_tmp5_fu_1098_p2);
    sensitive << ( tmp_24_i_reg_1355 );
    sensitive << ( sel_tmp4_fu_1092_p2 );

    SC_METHOD(thread_sel_tmp6_fu_1108_p2);
    sensitive << ( sel_tmp34_demorgan_fu_1103_p2 );

    SC_METHOD(thread_sel_tmp7_demorgan_fu_1067_p2);
    sensitive << ( tmp_12_i_reg_1330 );
    sensitive << ( tmp_15_i_reg_1337 );

    SC_METHOD(thread_sel_tmp7_fu_1135_p2);
    sensitive << ( sel_tmp7_demorgan_reg_1378 );

    SC_METHOD(thread_sel_tmp8_fu_1140_p2);
    sensitive << ( tmp_18_i_reg_1343_pp0_iter1_reg );
    sensitive << ( sel_tmp7_fu_1135_p2 );

    SC_METHOD(thread_sel_tmp9_fu_1114_p2);
    sensitive << ( tmp_27_i_reg_1361 );
    sensitive << ( sel_tmp6_fu_1108_p2 );

    SC_METHOD(thread_sel_tmp_fu_1076_p2);
    sensitive << ( sel_tmp14_demorgan_fu_1071_p2 );

    SC_METHOD(thread_storemerge1_i_fu_735_p3);
    sensitive << ( ap_phi_mux_tmp_last_V_1_phi_fu_275_p8 );

    SC_METHOD(thread_storemerge4_i_fu_998_p3);
    sensitive << ( tmp_32_i_fu_992_p2 );

    SC_METHOD(thread_storemerge5_i_fu_1020_p3);
    sensitive << ( data_in_TLAST );
    sensitive << ( storemerge4_i_fu_998_p3 );

    SC_METHOD(thread_storemerge_cast_i_fu_663_p3);
    sensitive << ( not_tmp_last_V_9_i_fu_657_p2 );

    SC_METHOD(thread_t_V_1_load_fu_677_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( fsm_state_V_load_load_fu_411_p1 );
    sensitive << ( send_tx_word_count_V );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_t_V_2_load_fu_447_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( fsm_state_V );
    sensitive << ( send_rx_word_count_V );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_t_V_load_fu_761_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( fsm_state_V );
    sensitive << ( word_count_V );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tmp_10_i_fu_469_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( rx_fifo_V_keep_V_dout );
    sensitive << ( send_rx_word_count_V );
    sensitive << ( tmp_last_V_fu_459_p1 );
    sensitive << ( tmp_4_i_fu_463_p2 );

    SC_METHOD(thread_tmp_11_i_fu_979_p2);
    sensitive << ( tx_len_V );

    SC_METHOD(thread_tmp_12_i_fu_937_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( tx_len_V );
    sensitive << ( t_V_load_fu_761_p1 );
    sensitive << ( or_cond_i_fu_925_p2 );
    sensitive << ( tmp_6_i_fu_931_p2 );

    SC_METHOD(thread_tmp_13_i_fu_583_p2);
    sensitive << ( rx_len_V );

    SC_METHOD(thread_tmp_14_i_fu_475_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( rx_fifo_V_keep_V_dout );
    sensitive << ( send_rx_word_count_V );
    sensitive << ( tmp_last_V_fu_459_p1 );
    sensitive << ( tmp_4_i_fu_463_p2 );
    sensitive << ( tmp_10_i_fu_469_p2 );

    SC_METHOD(thread_tmp_15_i_fu_943_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( tx_len_V );
    sensitive << ( t_V_load_fu_761_p1 );
    sensitive << ( or_cond_i_fu_925_p2 );
    sensitive << ( tmp_6_i_fu_931_p2 );

    SC_METHOD(thread_tmp_16_i_fu_571_p2);
    sensitive << ( rx_len_V );

    SC_METHOD(thread_tmp_17_i_fu_481_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( rx_fifo_V_keep_V_dout );
    sensitive << ( send_rx_word_count_V );
    sensitive << ( tmp_last_V_fu_459_p1 );
    sensitive << ( tmp_4_i_fu_463_p2 );
    sensitive << ( tmp_10_i_fu_469_p2 );
    sensitive << ( tmp_14_i_fu_475_p2 );

    SC_METHOD(thread_tmp_18_i_fu_949_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( tx_len_V );
    sensitive << ( t_V_load_fu_761_p1 );
    sensitive << ( or_cond_i_fu_925_p2 );
    sensitive << ( tmp_6_i_fu_931_p2 );

    SC_METHOD(thread_tmp_19_i_fu_559_p2);
    sensitive << ( rx_len_V );

    SC_METHOD(thread_tmp_1_nbreadreq_fu_212_p5);
    sensitive << ( rx_fifo_V_data_V_empty_n );
    sensitive << ( rx_fifo_V_keep_V_empty_n );
    sensitive << ( rx_fifo_V_last_V_empty_n );

    SC_METHOD(thread_tmp_20_i_fu_487_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( rx_fifo_V_keep_V_dout );
    sensitive << ( send_rx_word_count_V );
    sensitive << ( tmp_last_V_fu_459_p1 );
    sensitive << ( tmp_4_i_fu_463_p2 );
    sensitive << ( tmp_10_i_fu_469_p2 );
    sensitive << ( tmp_14_i_fu_475_p2 );
    sensitive << ( tmp_17_i_fu_481_p2 );

    SC_METHOD(thread_tmp_21_i_fu_955_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( tx_len_V );
    sensitive << ( t_V_load_fu_761_p1 );
    sensitive << ( or_cond_i_fu_925_p2 );
    sensitive << ( tmp_6_i_fu_931_p2 );

    SC_METHOD(thread_tmp_22_i_fu_547_p2);
    sensitive << ( rx_len_V );

    SC_METHOD(thread_tmp_23_i_fu_493_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( rx_fifo_V_keep_V_dout );
    sensitive << ( send_rx_word_count_V );
    sensitive << ( tmp_last_V_fu_459_p1 );
    sensitive << ( tmp_4_i_fu_463_p2 );
    sensitive << ( tmp_10_i_fu_469_p2 );
    sensitive << ( tmp_14_i_fu_475_p2 );
    sensitive << ( tmp_17_i_fu_481_p2 );
    sensitive << ( tmp_20_i_fu_487_p2 );

    SC_METHOD(thread_tmp_24_i_fu_961_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( tx_len_V );
    sensitive << ( t_V_load_fu_761_p1 );
    sensitive << ( or_cond_i_fu_925_p2 );
    sensitive << ( tmp_6_i_fu_931_p2 );

    SC_METHOD(thread_tmp_25_i_fu_535_p2);
    sensitive << ( rx_len_V );

    SC_METHOD(thread_tmp_26_i_fu_499_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( rx_fifo_V_keep_V_dout );
    sensitive << ( send_rx_word_count_V );
    sensitive << ( tmp_last_V_fu_459_p1 );
    sensitive << ( tmp_4_i_fu_463_p2 );
    sensitive << ( tmp_10_i_fu_469_p2 );
    sensitive << ( tmp_14_i_fu_475_p2 );
    sensitive << ( tmp_17_i_fu_481_p2 );
    sensitive << ( tmp_20_i_fu_487_p2 );
    sensitive << ( tmp_23_i_fu_493_p2 );

    SC_METHOD(thread_tmp_27_i_fu_967_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( tx_len_V );
    sensitive << ( t_V_load_fu_761_p1 );
    sensitive << ( or_cond_i_fu_925_p2 );
    sensitive << ( tmp_6_i_fu_931_p2 );

    SC_METHOD(thread_tmp_28_i_fu_523_p2);
    sensitive << ( rx_len_V );

    SC_METHOD(thread_tmp_29_i_fu_505_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( rx_fifo_V_keep_V_dout );
    sensitive << ( send_rx_word_count_V );
    sensitive << ( tmp_last_V_fu_459_p1 );
    sensitive << ( tmp_4_i_fu_463_p2 );
    sensitive << ( tmp_10_i_fu_469_p2 );
    sensitive << ( tmp_14_i_fu_475_p2 );
    sensitive << ( tmp_17_i_fu_481_p2 );
    sensitive << ( tmp_20_i_fu_487_p2 );
    sensitive << ( tmp_23_i_fu_493_p2 );
    sensitive << ( tmp_26_i_fu_499_p2 );

    SC_METHOD(thread_tmp_2_fu_875_p1);
    sensitive << ( data_in_TDATA );

    SC_METHOD(thread_tmp_30_i_fu_973_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( tx_len_V );
    sensitive << ( t_V_load_fu_761_p1 );
    sensitive << ( or_cond_i_fu_925_p2 );
    sensitive << ( tmp_6_i_fu_931_p2 );

    SC_METHOD(thread_tmp_31_i_fu_511_p2);
    sensitive << ( rx_len_V );

    SC_METHOD(thread_tmp_32_i_fu_992_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8 );

    SC_METHOD(thread_tmp_3_fu_804_p1);
    sensitive << ( data_in_TDATA );

    SC_METHOD(thread_tmp_4_fu_776_p1);
    sensitive << ( data_in_TDATA );

    SC_METHOD(thread_tmp_4_i_fu_463_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( rx_fifo_V_keep_V_dout );
    sensitive << ( send_rx_word_count_V );
    sensitive << ( tmp_last_V_fu_459_p1 );

    SC_METHOD(thread_tmp_5_fu_717_p1);
    sensitive << ( dest_address_V );

    SC_METHOD(thread_tmp_6_fu_625_p1);
    sensitive << ( dest_address_V );

    SC_METHOD(thread_tmp_6_i_fu_931_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( tx_len_V );
    sensitive << ( t_V_load_fu_761_p1 );
    sensitive << ( or_cond_i_fu_925_p2 );

    SC_METHOD(thread_tmp_7_fu_601_p1);
    sensitive << ( mac_type_V );

    SC_METHOD(thread_tmp_8_i_fu_792_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( axi_command_V );
    sensitive << ( t_V_load_fu_761_p1 );

    SC_METHOD(thread_tmp_9_i_fu_913_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( axi_command_V );
    sensitive << ( t_V_load_fu_761_p1 );

    SC_METHOD(thread_tmp_i_fu_919_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsm_state_V );
    sensitive << ( tx_len_V );
    sensitive << ( t_V_load_fu_761_p1 );

    SC_METHOD(thread_tmp_keep_V_2_fu_1208_p3);
    sensitive << ( or_cond8_fu_1195_p2 );
    sensitive << ( newSel7_cast_fu_1191_p1 );
    sensitive << ( newSel9_fu_1200_p3 );

    SC_METHOD(thread_tmp_last_V_fu_459_p1);
    sensitive << ( rx_fifo_V_last_V_dout );

    SC_METHOD(thread_tmp_nbreadreq_fu_200_p5);
    sensitive << ( data_in_TVALID );

    SC_METHOD(thread_tx_fifo_V_data_V_1_ack_in);
    sensitive << ( tx_fifo_V_data_V_1_state );

    SC_METHOD(thread_tx_fifo_V_data_V_1_ack_out);
    sensitive << ( fifo_out_TREADY );

    SC_METHOD(thread_tx_fifo_V_data_V_1_data_out);
    sensitive << ( tx_fifo_V_data_V_1_payload_A );
    sensitive << ( tx_fifo_V_data_V_1_payload_B );
    sensitive << ( tx_fifo_V_data_V_1_sel );

    SC_METHOD(thread_tx_fifo_V_data_V_1_load_A);
    sensitive << ( tx_fifo_V_data_V_1_sel_wr );
    sensitive << ( tx_fifo_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_tx_fifo_V_data_V_1_load_B);
    sensitive << ( tx_fifo_V_data_V_1_sel_wr );
    sensitive << ( tx_fifo_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_tx_fifo_V_data_V_1_sel);
    sensitive << ( tx_fifo_V_data_V_1_sel_rd );

    SC_METHOD(thread_tx_fifo_V_data_V_1_state_cmp_full);
    sensitive << ( tx_fifo_V_data_V_1_state );

    SC_METHOD(thread_tx_fifo_V_data_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op193_write_state3 );
    sensitive << ( ap_predicate_op194_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_fifo_V_data_V_1_vld_out);
    sensitive << ( tx_fifo_V_data_V_1_state );

    SC_METHOD(thread_tx_fifo_V_keep_V_1_ack_in);
    sensitive << ( tx_fifo_V_keep_V_1_state );

    SC_METHOD(thread_tx_fifo_V_keep_V_1_ack_out);
    sensitive << ( fifo_out_TREADY );

    SC_METHOD(thread_tx_fifo_V_keep_V_1_data_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op193_write_state3 );
    sensitive << ( ap_predicate_op194_write_state3 );
    sensitive << ( tmp_keep_V_1_reg_1304_pp0_iter1_reg );
    sensitive << ( tmp_keep_V_2_fu_1208_p3 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_tx_fifo_V_keep_V_1_data_out);
    sensitive << ( tx_fifo_V_keep_V_1_payload_A );
    sensitive << ( tx_fifo_V_keep_V_1_payload_B );
    sensitive << ( tx_fifo_V_keep_V_1_sel );

    SC_METHOD(thread_tx_fifo_V_keep_V_1_load_A);
    sensitive << ( tx_fifo_V_keep_V_1_sel_wr );
    sensitive << ( tx_fifo_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_tx_fifo_V_keep_V_1_load_B);
    sensitive << ( tx_fifo_V_keep_V_1_sel_wr );
    sensitive << ( tx_fifo_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_tx_fifo_V_keep_V_1_sel);
    sensitive << ( tx_fifo_V_keep_V_1_sel_rd );

    SC_METHOD(thread_tx_fifo_V_keep_V_1_state_cmp_full);
    sensitive << ( tx_fifo_V_keep_V_1_state );

    SC_METHOD(thread_tx_fifo_V_keep_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op193_write_state3 );
    sensitive << ( ap_predicate_op194_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_fifo_V_keep_V_1_vld_out);
    sensitive << ( tx_fifo_V_keep_V_1_state );

    SC_METHOD(thread_tx_fifo_V_last_V_1_ack_in);
    sensitive << ( tx_fifo_V_last_V_1_state );

    SC_METHOD(thread_tx_fifo_V_last_V_1_ack_out);
    sensitive << ( fifo_out_TREADY );

    SC_METHOD(thread_tx_fifo_V_last_V_1_data_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op193_write_state3 );
    sensitive << ( ap_predicate_op194_write_state3 );
    sensitive << ( tmp_last_V_2_reg_1309_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_tx_fifo_V_last_V_1_data_out);
    sensitive << ( tx_fifo_V_last_V_1_payload_A );
    sensitive << ( tx_fifo_V_last_V_1_payload_B );
    sensitive << ( tx_fifo_V_last_V_1_sel );

    SC_METHOD(thread_tx_fifo_V_last_V_1_load_A);
    sensitive << ( tx_fifo_V_last_V_1_sel_wr );
    sensitive << ( tx_fifo_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_tx_fifo_V_last_V_1_load_B);
    sensitive << ( tx_fifo_V_last_V_1_sel_wr );
    sensitive << ( tx_fifo_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_tx_fifo_V_last_V_1_sel);
    sensitive << ( tx_fifo_V_last_V_1_sel_rd );

    SC_METHOD(thread_tx_fifo_V_last_V_1_state_cmp_full);
    sensitive << ( tx_fifo_V_last_V_1_state );

    SC_METHOD(thread_tx_fifo_V_last_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op193_write_state3 );
    sensitive << ( ap_predicate_op194_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_fifo_V_last_V_1_vld_out);
    sensitive << ( tx_fifo_V_last_V_1_state );

    SC_METHOD(thread_word_count_V_flag_1_s_fu_1006_p2);
    sensitive << ( data_in_TLAST );
    sensitive << ( ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8 );

    SC_METHOD(thread_word_count_V_new_1_i_fu_1012_p3);
    sensitive << ( data_in_TLAST );
    sensitive << ( ap_phi_mux_word_count_V_new_i_phi_fu_320_p8 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    data_out_V_data_V_1_sel_rd = SC_LOGIC_0;
    data_out_V_data_V_1_sel_wr = SC_LOGIC_0;
    data_out_V_data_V_1_state = "00";
    data_out_V_keep_V_1_sel_rd = SC_LOGIC_0;
    data_out_V_keep_V_1_state = "00";
    data_out_V_last_V_1_sel_rd = SC_LOGIC_0;
    data_out_V_last_V_1_sel_wr = SC_LOGIC_0;
    data_out_V_last_V_1_state = "00";
    tx_fifo_V_data_V_1_sel_rd = SC_LOGIC_0;
    tx_fifo_V_data_V_1_sel_wr = SC_LOGIC_0;
    tx_fifo_V_data_V_1_state = "00";
    tx_fifo_V_keep_V_1_sel_rd = SC_LOGIC_0;
    tx_fifo_V_keep_V_1_sel_wr = SC_LOGIC_0;
    tx_fifo_V_keep_V_1_state = "00";
    tx_fifo_V_last_V_1_sel_rd = SC_LOGIC_0;
    tx_fifo_V_last_V_1_sel_wr = SC_LOGIC_0;
    tx_fifo_V_last_V_1_state = "00";
    fsm_state_V = "00";
    rx_len_V = "0000000000000000";
    rx_ready_V = "0";
    dest_address_V = "000000000000000000000000000000000000000000000000";
    src_address_V = "000000000000000000000000000000000000000000000000";
    mac_type_V = "0000000000000000";
    ethernet_axi_id_V = "00000000";
    word_count_V = "00";
    axi_command_V = "00000000";
    tx_len_V = "0000000000000000";
    axis_len_V = "0000000000000000";
    send_tx_word_count_V = "00";
    send_rx_word_count_V = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ethernet_axis_ip_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_in_TVALID, "(port)data_in_TVALID");
    sc_trace(mVcdFile, data_out_TREADY, "(port)data_out_TREADY");
    sc_trace(mVcdFile, fifo_out_TREADY, "(port)fifo_out_TREADY");
    sc_trace(mVcdFile, data_in_TDATA, "(port)data_in_TDATA");
    sc_trace(mVcdFile, data_in_TREADY, "(port)data_in_TREADY");
    sc_trace(mVcdFile, data_in_TKEEP, "(port)data_in_TKEEP");
    sc_trace(mVcdFile, data_in_TLAST, "(port)data_in_TLAST");
    sc_trace(mVcdFile, data_out_TDATA, "(port)data_out_TDATA");
    sc_trace(mVcdFile, data_out_TVALID, "(port)data_out_TVALID");
    sc_trace(mVcdFile, data_out_TKEEP, "(port)data_out_TKEEP");
    sc_trace(mVcdFile, data_out_TLAST, "(port)data_out_TLAST");
    sc_trace(mVcdFile, fifo_out_TDATA, "(port)fifo_out_TDATA");
    sc_trace(mVcdFile, fifo_out_TVALID, "(port)fifo_out_TVALID");
    sc_trace(mVcdFile, fifo_out_TKEEP, "(port)fifo_out_TKEEP");
    sc_trace(mVcdFile, fifo_out_TLAST, "(port)fifo_out_TLAST");
    sc_trace(mVcdFile, rx_fifo_V_data_V_dout, "(port)rx_fifo_V_data_V_dout");
    sc_trace(mVcdFile, rx_fifo_V_data_V_empty_n, "(port)rx_fifo_V_data_V_empty_n");
    sc_trace(mVcdFile, rx_fifo_V_data_V_read, "(port)rx_fifo_V_data_V_read");
    sc_trace(mVcdFile, rx_fifo_V_keep_V_dout, "(port)rx_fifo_V_keep_V_dout");
    sc_trace(mVcdFile, rx_fifo_V_keep_V_empty_n, "(port)rx_fifo_V_keep_V_empty_n");
    sc_trace(mVcdFile, rx_fifo_V_keep_V_read, "(port)rx_fifo_V_keep_V_read");
    sc_trace(mVcdFile, rx_fifo_V_last_V_dout, "(port)rx_fifo_V_last_V_dout");
    sc_trace(mVcdFile, rx_fifo_V_last_V_empty_n, "(port)rx_fifo_V_last_V_empty_n");
    sc_trace(mVcdFile, rx_fifo_V_last_V_read, "(port)rx_fifo_V_last_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, rx_fifo_V_data_V0_status, "rx_fifo_V_data_V0_status");
    sc_trace(mVcdFile, fsm_state_V_load_load_fu_411_p1, "fsm_state_V_load_load_fu_411_p1");
    sc_trace(mVcdFile, t_V_2_load_fu_447_p1, "t_V_2_load_fu_447_p1");
    sc_trace(mVcdFile, ap_predicate_op16_read_state1, "ap_predicate_op16_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, data_out_V_data_V_1_ack_in, "data_out_V_data_V_1_ack_in");
    sc_trace(mVcdFile, fsm_state_V_load_reg_1217, "fsm_state_V_load_reg_1217");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, fsm_state_V_load_reg_1217_pp0_iter1_reg, "fsm_state_V_load_reg_1217_pp0_iter1_reg");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_ack_in, "tx_fifo_V_data_V_1_ack_in");
    sc_trace(mVcdFile, t_V_reg_1314, "t_V_reg_1314");
    sc_trace(mVcdFile, t_V_reg_1314_pp0_iter1_reg, "t_V_reg_1314_pp0_iter1_reg");
    sc_trace(mVcdFile, or_cond_i_reg_1322, "or_cond_i_reg_1322");
    sc_trace(mVcdFile, or_cond_i_reg_1322_pp0_iter1_reg, "or_cond_i_reg_1322_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_6_i_reg_1326, "tmp_6_i_reg_1326");
    sc_trace(mVcdFile, tmp_6_i_reg_1326_pp0_iter1_reg, "tmp_6_i_reg_1326_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op193_write_state3, "ap_predicate_op193_write_state3");
    sc_trace(mVcdFile, ap_predicate_op194_write_state3, "ap_predicate_op194_write_state3");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, data_out_V_keep_V_1_ack_in, "data_out_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, data_out_V_last_V_1_ack_in, "data_out_V_last_V_1_ack_in");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_ack_in, "tx_fifo_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_ack_in, "tx_fifo_V_last_V_1_ack_in");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, fsm_state_V_load_reg_1217_pp0_iter2_reg, "fsm_state_V_load_reg_1217_pp0_iter2_reg");
    sc_trace(mVcdFile, t_V_reg_1314_pp0_iter2_reg, "t_V_reg_1314_pp0_iter2_reg");
    sc_trace(mVcdFile, or_cond_i_reg_1322_pp0_iter2_reg, "or_cond_i_reg_1322_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_6_i_reg_1326_pp0_iter2_reg, "tmp_6_i_reg_1326_pp0_iter2_reg");
    sc_trace(mVcdFile, ap_predicate_op223_write_state4, "ap_predicate_op223_write_state4");
    sc_trace(mVcdFile, ap_predicate_op224_write_state4, "ap_predicate_op224_write_state4");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, data_out_V_data_V_1_data_in, "data_out_V_data_V_1_data_in");
    sc_trace(mVcdFile, data_out_V_data_V_1_data_out, "data_out_V_data_V_1_data_out");
    sc_trace(mVcdFile, data_out_V_data_V_1_vld_in, "data_out_V_data_V_1_vld_in");
    sc_trace(mVcdFile, data_out_V_data_V_1_vld_out, "data_out_V_data_V_1_vld_out");
    sc_trace(mVcdFile, data_out_V_data_V_1_ack_out, "data_out_V_data_V_1_ack_out");
    sc_trace(mVcdFile, data_out_V_data_V_1_payload_A, "data_out_V_data_V_1_payload_A");
    sc_trace(mVcdFile, data_out_V_data_V_1_payload_B, "data_out_V_data_V_1_payload_B");
    sc_trace(mVcdFile, data_out_V_data_V_1_sel_rd, "data_out_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, data_out_V_data_V_1_sel_wr, "data_out_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, data_out_V_data_V_1_sel, "data_out_V_data_V_1_sel");
    sc_trace(mVcdFile, data_out_V_data_V_1_load_A, "data_out_V_data_V_1_load_A");
    sc_trace(mVcdFile, data_out_V_data_V_1_load_B, "data_out_V_data_V_1_load_B");
    sc_trace(mVcdFile, data_out_V_data_V_1_state, "data_out_V_data_V_1_state");
    sc_trace(mVcdFile, data_out_V_data_V_1_state_cmp_full, "data_out_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, data_out_V_keep_V_1_data_out, "data_out_V_keep_V_1_data_out");
    sc_trace(mVcdFile, data_out_V_keep_V_1_vld_in, "data_out_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, data_out_V_keep_V_1_vld_out, "data_out_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, data_out_V_keep_V_1_ack_out, "data_out_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, data_out_V_keep_V_1_sel_rd, "data_out_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, data_out_V_keep_V_1_sel, "data_out_V_keep_V_1_sel");
    sc_trace(mVcdFile, data_out_V_keep_V_1_state, "data_out_V_keep_V_1_state");
    sc_trace(mVcdFile, data_out_V_last_V_1_data_in, "data_out_V_last_V_1_data_in");
    sc_trace(mVcdFile, data_out_V_last_V_1_data_out, "data_out_V_last_V_1_data_out");
    sc_trace(mVcdFile, data_out_V_last_V_1_vld_in, "data_out_V_last_V_1_vld_in");
    sc_trace(mVcdFile, data_out_V_last_V_1_vld_out, "data_out_V_last_V_1_vld_out");
    sc_trace(mVcdFile, data_out_V_last_V_1_ack_out, "data_out_V_last_V_1_ack_out");
    sc_trace(mVcdFile, data_out_V_last_V_1_payload_A, "data_out_V_last_V_1_payload_A");
    sc_trace(mVcdFile, data_out_V_last_V_1_payload_B, "data_out_V_last_V_1_payload_B");
    sc_trace(mVcdFile, data_out_V_last_V_1_sel_rd, "data_out_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, data_out_V_last_V_1_sel_wr, "data_out_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, data_out_V_last_V_1_sel, "data_out_V_last_V_1_sel");
    sc_trace(mVcdFile, data_out_V_last_V_1_load_A, "data_out_V_last_V_1_load_A");
    sc_trace(mVcdFile, data_out_V_last_V_1_load_B, "data_out_V_last_V_1_load_B");
    sc_trace(mVcdFile, data_out_V_last_V_1_state, "data_out_V_last_V_1_state");
    sc_trace(mVcdFile, data_out_V_last_V_1_state_cmp_full, "data_out_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_data_out, "tx_fifo_V_data_V_1_data_out");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_vld_in, "tx_fifo_V_data_V_1_vld_in");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_vld_out, "tx_fifo_V_data_V_1_vld_out");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_ack_out, "tx_fifo_V_data_V_1_ack_out");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_payload_A, "tx_fifo_V_data_V_1_payload_A");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_payload_B, "tx_fifo_V_data_V_1_payload_B");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_sel_rd, "tx_fifo_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_sel_wr, "tx_fifo_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_sel, "tx_fifo_V_data_V_1_sel");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_load_A, "tx_fifo_V_data_V_1_load_A");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_load_B, "tx_fifo_V_data_V_1_load_B");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_state, "tx_fifo_V_data_V_1_state");
    sc_trace(mVcdFile, tx_fifo_V_data_V_1_state_cmp_full, "tx_fifo_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_data_in, "tx_fifo_V_keep_V_1_data_in");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_data_out, "tx_fifo_V_keep_V_1_data_out");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_vld_in, "tx_fifo_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_vld_out, "tx_fifo_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_ack_out, "tx_fifo_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_payload_A, "tx_fifo_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_payload_B, "tx_fifo_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_sel_rd, "tx_fifo_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_sel_wr, "tx_fifo_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_sel, "tx_fifo_V_keep_V_1_sel");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_load_A, "tx_fifo_V_keep_V_1_load_A");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_load_B, "tx_fifo_V_keep_V_1_load_B");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_state, "tx_fifo_V_keep_V_1_state");
    sc_trace(mVcdFile, tx_fifo_V_keep_V_1_state_cmp_full, "tx_fifo_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_data_in, "tx_fifo_V_last_V_1_data_in");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_data_out, "tx_fifo_V_last_V_1_data_out");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_vld_in, "tx_fifo_V_last_V_1_vld_in");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_vld_out, "tx_fifo_V_last_V_1_vld_out");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_ack_out, "tx_fifo_V_last_V_1_ack_out");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_payload_A, "tx_fifo_V_last_V_1_payload_A");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_payload_B, "tx_fifo_V_last_V_1_payload_B");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_sel_rd, "tx_fifo_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_sel_wr, "tx_fifo_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_sel, "tx_fifo_V_last_V_1_sel");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_load_A, "tx_fifo_V_last_V_1_load_A");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_load_B, "tx_fifo_V_last_V_1_load_B");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_state, "tx_fifo_V_last_V_1_state");
    sc_trace(mVcdFile, tx_fifo_V_last_V_1_state_cmp_full, "tx_fifo_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, fsm_state_V, "fsm_state_V");
    sc_trace(mVcdFile, rx_len_V, "rx_len_V");
    sc_trace(mVcdFile, rx_ready_V, "rx_ready_V");
    sc_trace(mVcdFile, dest_address_V, "dest_address_V");
    sc_trace(mVcdFile, src_address_V, "src_address_V");
    sc_trace(mVcdFile, mac_type_V, "mac_type_V");
    sc_trace(mVcdFile, ethernet_axi_id_V, "ethernet_axi_id_V");
    sc_trace(mVcdFile, word_count_V, "word_count_V");
    sc_trace(mVcdFile, axi_command_V, "axi_command_V");
    sc_trace(mVcdFile, tx_len_V, "tx_len_V");
    sc_trace(mVcdFile, axis_len_V, "axis_len_V");
    sc_trace(mVcdFile, send_tx_word_count_V, "send_tx_word_count_V");
    sc_trace(mVcdFile, send_rx_word_count_V, "send_rx_word_count_V");
    sc_trace(mVcdFile, data_in_TDATA_blk_n, "data_in_TDATA_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, data_out_TDATA_blk_n, "data_out_TDATA_blk_n");
    sc_trace(mVcdFile, fifo_out_TDATA_blk_n, "fifo_out_TDATA_blk_n");
    sc_trace(mVcdFile, rx_fifo_V_data_V_blk_n, "rx_fifo_V_data_V_blk_n");
    sc_trace(mVcdFile, rx_fifo_V_keep_V_blk_n, "rx_fifo_V_keep_V_blk_n");
    sc_trace(mVcdFile, rx_fifo_V_last_V_blk_n, "rx_fifo_V_last_V_blk_n");
    sc_trace(mVcdFile, tmp_last_V_3_reg_252, "tmp_last_V_3_reg_252");
    sc_trace(mVcdFile, tmp_last_V_1_reg_271, "tmp_last_V_1_reg_271");
    sc_trace(mVcdFile, tmp_last_V_fu_459_p1, "tmp_last_V_fu_459_p1");
    sc_trace(mVcdFile, tmp_4_i_fu_463_p2, "tmp_4_i_fu_463_p2");
    sc_trace(mVcdFile, tmp_10_i_fu_469_p2, "tmp_10_i_fu_469_p2");
    sc_trace(mVcdFile, tmp_14_i_fu_475_p2, "tmp_14_i_fu_475_p2");
    sc_trace(mVcdFile, tmp_17_i_fu_481_p2, "tmp_17_i_fu_481_p2");
    sc_trace(mVcdFile, tmp_20_i_fu_487_p2, "tmp_20_i_fu_487_p2");
    sc_trace(mVcdFile, tmp_23_i_fu_493_p2, "tmp_23_i_fu_493_p2");
    sc_trace(mVcdFile, tmp_26_i_fu_499_p2, "tmp_26_i_fu_499_p2");
    sc_trace(mVcdFile, tmp_29_i_fu_505_p2, "tmp_29_i_fu_505_p2");
    sc_trace(mVcdFile, p_Result_12_fu_605_p6, "p_Result_12_fu_605_p6");
    sc_trace(mVcdFile, p_Result_11_fu_629_p3, "p_Result_11_fu_629_p3");
    sc_trace(mVcdFile, p_Result_13_fu_643_p3, "p_Result_13_fu_643_p3");
    sc_trace(mVcdFile, p_Result_10_fu_685_p3, "p_Result_10_fu_685_p3");
    sc_trace(mVcdFile, t_V_1_load_fu_677_p1, "t_V_1_load_fu_677_p1");
    sc_trace(mVcdFile, p_Result_9_fu_699_p5, "p_Result_9_fu_699_p5");
    sc_trace(mVcdFile, p_Result_8_fu_721_p3, "p_Result_8_fu_721_p3");
    sc_trace(mVcdFile, tmp_data_V_2_reg_1299, "tmp_data_V_2_reg_1299");
    sc_trace(mVcdFile, tmp_data_V_2_reg_1299_pp0_iter1_reg, "tmp_data_V_2_reg_1299_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_keep_V_1_reg_1304, "tmp_keep_V_1_reg_1304");
    sc_trace(mVcdFile, tmp_keep_V_1_reg_1304_pp0_iter1_reg, "tmp_keep_V_1_reg_1304_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_last_V_2_reg_1309, "tmp_last_V_2_reg_1309");
    sc_trace(mVcdFile, tmp_last_V_2_reg_1309_pp0_iter1_reg, "tmp_last_V_2_reg_1309_pp0_iter1_reg");
    sc_trace(mVcdFile, t_V_load_fu_761_p1, "t_V_load_fu_761_p1");
    sc_trace(mVcdFile, tmp_8_i_fu_792_p2, "tmp_8_i_fu_792_p2");
    sc_trace(mVcdFile, or_cond_i_fu_925_p2, "or_cond_i_fu_925_p2");
    sc_trace(mVcdFile, tmp_6_i_fu_931_p2, "tmp_6_i_fu_931_p2");
    sc_trace(mVcdFile, tmp_12_i_fu_937_p2, "tmp_12_i_fu_937_p2");
    sc_trace(mVcdFile, tmp_12_i_reg_1330, "tmp_12_i_reg_1330");
    sc_trace(mVcdFile, tmp_12_i_reg_1330_pp0_iter1_reg, "tmp_12_i_reg_1330_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_15_i_fu_943_p2, "tmp_15_i_fu_943_p2");
    sc_trace(mVcdFile, tmp_15_i_reg_1337, "tmp_15_i_reg_1337");
    sc_trace(mVcdFile, tmp_15_i_reg_1337_pp0_iter1_reg, "tmp_15_i_reg_1337_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_18_i_fu_949_p2, "tmp_18_i_fu_949_p2");
    sc_trace(mVcdFile, tmp_18_i_reg_1343, "tmp_18_i_reg_1343");
    sc_trace(mVcdFile, tmp_18_i_reg_1343_pp0_iter1_reg, "tmp_18_i_reg_1343_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_21_i_fu_955_p2, "tmp_21_i_fu_955_p2");
    sc_trace(mVcdFile, tmp_21_i_reg_1349, "tmp_21_i_reg_1349");
    sc_trace(mVcdFile, tmp_24_i_fu_961_p2, "tmp_24_i_fu_961_p2");
    sc_trace(mVcdFile, tmp_24_i_reg_1355, "tmp_24_i_reg_1355");
    sc_trace(mVcdFile, tmp_27_i_fu_967_p2, "tmp_27_i_fu_967_p2");
    sc_trace(mVcdFile, tmp_27_i_reg_1361, "tmp_27_i_reg_1361");
    sc_trace(mVcdFile, tmp_30_i_fu_973_p2, "tmp_30_i_fu_973_p2");
    sc_trace(mVcdFile, tmp_30_i_reg_1366, "tmp_30_i_reg_1366");
    sc_trace(mVcdFile, tmp_30_i_reg_1366_pp0_iter1_reg, "tmp_30_i_reg_1366_pp0_iter1_reg");
    sc_trace(mVcdFile, word_count_V_flag_1_s_fu_1006_p2, "word_count_V_flag_1_s_fu_1006_p2");
    sc_trace(mVcdFile, sel_tmp7_demorgan_fu_1067_p2, "sel_tmp7_demorgan_fu_1067_p2");
    sc_trace(mVcdFile, sel_tmp7_demorgan_reg_1378, "sel_tmp7_demorgan_reg_1378");
    sc_trace(mVcdFile, sel_tmp1_fu_1082_p2, "sel_tmp1_fu_1082_p2");
    sc_trace(mVcdFile, sel_tmp1_reg_1383, "sel_tmp1_reg_1383");
    sc_trace(mVcdFile, sel_tmp9_fu_1114_p2, "sel_tmp9_fu_1114_p2");
    sc_trace(mVcdFile, sel_tmp9_reg_1389, "sel_tmp9_reg_1389");
    sc_trace(mVcdFile, or_cond_fu_1119_p2, "or_cond_fu_1119_p2");
    sc_trace(mVcdFile, or_cond_reg_1394, "or_cond_reg_1394");
    sc_trace(mVcdFile, tmp_keep_V_2_fu_1208_p3, "tmp_keep_V_2_fu_1208_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_mux_tmp_last_V_3_phi_fu_256_p8, "ap_phi_mux_tmp_last_V_3_phi_fu_256_p8");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_252, "ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_252");
    sc_trace(mVcdFile, ap_phi_mux_tmp_last_V_1_phi_fu_275_p8, "ap_phi_mux_tmp_last_V_1_phi_fu_275_p8");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_271, "ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_271");
    sc_trace(mVcdFile, ap_phi_mux_storemerge3_i_phi_fu_293_p4, "ap_phi_mux_storemerge3_i_phi_fu_293_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_storemerge3_i_reg_290, "ap_phi_reg_pp0_iter0_storemerge3_i_reg_290");
    sc_trace(mVcdFile, tmp_11_i_fu_979_p2, "tmp_11_i_fu_979_p2");
    sc_trace(mVcdFile, ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8, "ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_word_count_V_flag_i_reg_300, "ap_phi_reg_pp0_iter0_word_count_V_flag_i_reg_300");
    sc_trace(mVcdFile, ap_phi_mux_word_count_V_new_i_phi_fu_320_p8, "ap_phi_mux_word_count_V_new_i_phi_fu_320_p8");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_word_count_V_new_i_reg_317, "ap_phi_reg_pp0_iter0_word_count_V_new_i_reg_317");
    sc_trace(mVcdFile, ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8, "ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_axi_command_V_loc_i_reg_334, "ap_phi_reg_pp0_iter0_axi_command_V_loc_i_reg_334");
    sc_trace(mVcdFile, ap_phi_mux_storemerge2_i_phi_fu_350_p4, "ap_phi_mux_storemerge2_i_phi_fu_350_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_storemerge2_i_reg_347, "ap_phi_reg_pp0_iter0_storemerge2_i_reg_347");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_200_p5, "tmp_nbreadreq_fu_200_p5");
    sc_trace(mVcdFile, p_4_cast_i_fu_1052_p3, "p_4_cast_i_fu_1052_p3");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_tmp_data_V_3_reg_357, "ap_phi_reg_pp0_iter0_tmp_data_V_3_reg_357");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357, "ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_tmp_data_V_reg_373, "ap_phi_reg_pp0_iter0_tmp_data_V_reg_373");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_tmp_data_V_reg_373, "ap_phi_reg_pp0_iter1_tmp_data_V_reg_373");
    sc_trace(mVcdFile, rx_fifo_V_data_V0_update, "rx_fifo_V_data_V0_update");
    sc_trace(mVcdFile, tmp_1_nbreadreq_fu_212_p5, "tmp_1_nbreadreq_fu_212_p5");
    sc_trace(mVcdFile, storemerge_cast_i_fu_663_p3, "storemerge_cast_i_fu_663_p3");
    sc_trace(mVcdFile, storemerge1_i_fu_735_p3, "storemerge1_i_fu_735_p3");
    sc_trace(mVcdFile, storemerge5_i_fu_1020_p3, "storemerge5_i_fu_1020_p3");
    sc_trace(mVcdFile, grp_fu_391_p2, "grp_fu_391_p2");
    sc_trace(mVcdFile, tmp_31_i_fu_511_p2, "tmp_31_i_fu_511_p2");
    sc_trace(mVcdFile, tmp_28_i_fu_523_p2, "tmp_28_i_fu_523_p2");
    sc_trace(mVcdFile, tmp_25_i_fu_535_p2, "tmp_25_i_fu_535_p2");
    sc_trace(mVcdFile, tmp_22_i_fu_547_p2, "tmp_22_i_fu_547_p2");
    sc_trace(mVcdFile, tmp_19_i_fu_559_p2, "tmp_19_i_fu_559_p2");
    sc_trace(mVcdFile, tmp_16_i_fu_571_p2, "tmp_16_i_fu_571_p2");
    sc_trace(mVcdFile, tmp_13_i_fu_583_p2, "tmp_13_i_fu_583_p2");
    sc_trace(mVcdFile, tmp_2_fu_875_p1, "tmp_2_fu_875_p1");
    sc_trace(mVcdFile, p_Result_1_fu_808_p5, "p_Result_1_fu_808_p5");
    sc_trace(mVcdFile, p_Result_s_fu_895_p5, "p_Result_s_fu_895_p5");
    sc_trace(mVcdFile, word_count_V_new_1_i_fu_1012_p3, "word_count_V_new_1_i_fu_1012_p3");
    sc_trace(mVcdFile, tmp_4_fu_776_p1, "tmp_4_fu_776_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_7_fu_601_p1, "tmp_7_fu_601_p1");
    sc_trace(mVcdFile, grp_fu_402_p4, "grp_fu_402_p4");
    sc_trace(mVcdFile, tmp_6_fu_625_p1, "tmp_6_fu_625_p1");
    sc_trace(mVcdFile, not_tmp_last_V_9_i_fu_657_p2, "not_tmp_last_V_9_i_fu_657_p2");
    sc_trace(mVcdFile, tmp_5_fu_717_p1, "tmp_5_fu_717_p1");
    sc_trace(mVcdFile, tmp_3_fu_804_p1, "tmp_3_fu_804_p1");
    sc_trace(mVcdFile, p_Result_1_i_fu_885_p4, "p_Result_1_i_fu_885_p4");
    sc_trace(mVcdFile, tmp_9_i_fu_913_p2, "tmp_9_i_fu_913_p2");
    sc_trace(mVcdFile, tmp_i_fu_919_p2, "tmp_i_fu_919_p2");
    sc_trace(mVcdFile, tmp_32_i_fu_992_p2, "tmp_32_i_fu_992_p2");
    sc_trace(mVcdFile, storemerge4_i_fu_998_p3, "storemerge4_i_fu_998_p3");
    sc_trace(mVcdFile, brmerge_demorgan_i_fu_1046_p2, "brmerge_demorgan_i_fu_1046_p2");
    sc_trace(mVcdFile, sel_tmp14_demorgan_fu_1071_p2, "sel_tmp14_demorgan_fu_1071_p2");
    sc_trace(mVcdFile, sel_tmp_fu_1076_p2, "sel_tmp_fu_1076_p2");
    sc_trace(mVcdFile, sel_tmp23_demorgan_fu_1087_p2, "sel_tmp23_demorgan_fu_1087_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_1092_p2, "sel_tmp4_fu_1092_p2");
    sc_trace(mVcdFile, sel_tmp34_demorgan_fu_1103_p2, "sel_tmp34_demorgan_fu_1103_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_1108_p2, "sel_tmp6_fu_1108_p2");
    sc_trace(mVcdFile, sel_tmp5_fu_1098_p2, "sel_tmp5_fu_1098_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_1125_p2, "sel_tmp2_fu_1125_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_1135_p2, "sel_tmp7_fu_1135_p2");
    sc_trace(mVcdFile, sel_tmp8_fu_1140_p2, "sel_tmp8_fu_1140_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_1130_p2, "sel_tmp3_fu_1130_p2");
    sc_trace(mVcdFile, newSel_cast_cast_fu_1145_p3, "newSel_cast_cast_fu_1145_p3");
    sc_trace(mVcdFile, newSel1_fu_1152_p3, "newSel1_fu_1152_p3");
    sc_trace(mVcdFile, newSel7_fu_1184_p3, "newSel7_fu_1184_p3");
    sc_trace(mVcdFile, or_cond2_fu_1159_p2, "or_cond2_fu_1159_p2");
    sc_trace(mVcdFile, or_cond4_fu_1172_p2, "or_cond4_fu_1172_p2");
    sc_trace(mVcdFile, newSel3_fu_1164_p3, "newSel3_fu_1164_p3");
    sc_trace(mVcdFile, newSel5_cast_cast_fu_1177_p3, "newSel5_cast_cast_fu_1177_p3");
    sc_trace(mVcdFile, or_cond8_fu_1195_p2, "or_cond8_fu_1195_p2");
    sc_trace(mVcdFile, newSel7_cast_fu_1191_p1, "newSel7_cast_fu_1191_p1");
    sc_trace(mVcdFile, newSel9_fu_1200_p3, "newSel9_fu_1200_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to2, "ap_idle_pp0_0to2");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_1400, "ap_condition_1400");
    sc_trace(mVcdFile, ap_condition_1404, "ap_condition_1404");
    sc_trace(mVcdFile, ap_condition_541, "ap_condition_541");
    sc_trace(mVcdFile, ap_condition_168, "ap_condition_168");
    sc_trace(mVcdFile, ap_condition_969, "ap_condition_969");
    sc_trace(mVcdFile, ap_condition_924, "ap_condition_924");
    sc_trace(mVcdFile, ap_condition_878, "ap_condition_878");
    sc_trace(mVcdFile, ap_condition_880, "ap_condition_880");
    sc_trace(mVcdFile, ap_condition_882, "ap_condition_882");
#endif

    }
}

ethernet_axis_ip::~ethernet_axis_ip() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void ethernet_axis_ip::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_168.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
             esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2))) {
            ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357 = rx_fifo_V_data_V_dout.read();
        } else if ((esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                    esl_seteq<1,2,2>(t_V_2_load_fu_447_p1.read(), ap_const_lv2_0))) {
            ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357 = p_Result_11_fu_629_p3.read();
        } else if ((esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                    esl_seteq<1,2,2>(t_V_2_load_fu_447_p1.read(), ap_const_lv2_1))) {
            ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357 = p_Result_12_fu_605_p6.read();
        } else if ((esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                    esl_seteq<1,2,2>(ap_const_lv2_3, t_V_2_load_fu_447_p1.read()))) {
            ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357 = p_Result_13_fu_643_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357 = ap_phi_reg_pp0_iter0_tmp_data_V_3_reg_357.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_168.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_2) && 
             esl_seteq<1,2,2>(ap_const_lv2_0, t_V_1_load_fu_677_p1.read()))) {
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_373 = p_Result_8_fu_721_p3.read();
        } else if ((esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_2) && 
                    esl_seteq<1,2,2>(ap_const_lv2_1, t_V_1_load_fu_677_p1.read()))) {
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_373 = p_Result_9_fu_699_p5.read();
        } else if ((esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_2) && 
                    esl_seteq<1,2,2>(ap_const_lv2_2, t_V_1_load_fu_677_p1.read()))) {
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_373 = p_Result_10_fu_685_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_373 = ap_phi_reg_pp0_iter0_tmp_data_V_reg_373.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        data_out_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_vld_out.read()))) {
            data_out_V_data_V_1_sel_rd =  (sc_logic) (~data_out_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        data_out_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_ack_in.read()))) {
            data_out_V_data_V_1_sel_wr =  (sc_logic) (~data_out_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        data_out_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_data_V_1_state.read())))) {
            data_out_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_data_V_1_state.read())))) {
            data_out_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_ack_out.read()))))) {
            data_out_V_data_V_1_state = ap_const_lv2_3;
        } else {
            data_out_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        data_out_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_vld_out.read()))) {
            data_out_V_keep_V_1_sel_rd =  (sc_logic) (~data_out_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        data_out_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_keep_V_1_state.read())))) {
            data_out_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_keep_V_1_state.read())))) {
            data_out_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_ack_out.read()))))) {
            data_out_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            data_out_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        data_out_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_out.read()))) {
            data_out_V_last_V_1_sel_rd =  (sc_logic) (~data_out_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        data_out_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_in.read()))) {
            data_out_V_last_V_1_sel_wr =  (sc_logic) (~data_out_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        data_out_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_last_V_1_state.read())))) {
            data_out_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read())))) {
            data_out_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_out.read()))))) {
            data_out_V_last_V_1_state = ap_const_lv2_3;
        } else {
            data_out_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_168.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_0)) {
            fsm_state_V = ap_phi_mux_storemerge2_i_phi_fu_350_p4.read();
        } else if (esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1)) {
            fsm_state_V = storemerge5_i_fu_1020_p3.read();
        } else if (esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_2)) {
            fsm_state_V = storemerge1_i_fu_735_p3.read();
        } else if (esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3)) {
            fsm_state_V = storemerge_cast_i_fu_663_p3.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_0))) {
        rx_len_V = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_459_p1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_463_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_i_fu_469_p2.read()))) {
        rx_len_V = tmp_13_i_fu_583_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_459_p1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_463_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_i_fu_469_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_i_fu_475_p2.read()))) {
        rx_len_V = tmp_16_i_fu_571_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_459_p1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_463_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_i_fu_469_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_i_fu_475_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_i_fu_481_p2.read()))) {
        rx_len_V = tmp_19_i_fu_559_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_459_p1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_463_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_i_fu_469_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_i_fu_475_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_i_fu_481_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_i_fu_487_p2.read()))) {
        rx_len_V = tmp_22_i_fu_547_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_459_p1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_463_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_i_fu_469_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_i_fu_475_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_i_fu_481_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_i_fu_487_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_i_fu_493_p2.read()))) {
        rx_len_V = tmp_25_i_fu_535_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_459_p1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_463_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_i_fu_469_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_i_fu_475_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_i_fu_481_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_i_fu_487_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_i_fu_493_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_i_fu_499_p2.read()))) {
        rx_len_V = tmp_28_i_fu_523_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_459_p1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_463_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_i_fu_469_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_i_fu_475_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_i_fu_481_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_i_fu_487_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_i_fu_493_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_26_i_fu_499_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_29_i_fu_505_p2.read()))) {
        rx_len_V = tmp_31_i_fu_511_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                 esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_fu_459_p1.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                 esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_459_p1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_i_fu_463_p2.read())))) {
        rx_len_V = grp_fu_391_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_168.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_924.read(), ap_const_boolean_1)) {
            rx_ready_V = ap_const_lv1_1;
        } else if (esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3)) {
            rx_ready_V = ap_const_lv1_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_878.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,2,2>(ap_const_lv2_3, t_V_2_load_fu_447_p1.read())) {
            send_rx_word_count_V = ap_const_lv2_0;
        } else if (esl_seteq<1,2,2>(t_V_2_load_fu_447_p1.read(), ap_const_lv2_0)) {
            send_rx_word_count_V = ap_const_lv2_1;
        } else if (esl_seteq<1,2,2>(t_V_2_load_fu_447_p1.read(), ap_const_lv2_1)) {
            send_rx_word_count_V = ap_const_lv2_2;
        } else if ((esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_459_p1.read()))) {
            send_rx_word_count_V = ap_const_lv2_3;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_880.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,2,2>(ap_const_lv2_0, t_V_1_load_fu_677_p1.read())) {
            send_tx_word_count_V = ap_const_lv2_1;
        } else if (esl_seteq<1,2,2>(ap_const_lv2_1, t_V_1_load_fu_677_p1.read())) {
            send_tx_word_count_V = ap_const_lv2_2;
        } else if (esl_seteq<1,2,2>(ap_const_lv2_2, t_V_1_load_fu_677_p1.read())) {
            send_tx_word_count_V = ap_const_lv2_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_882.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,2,2>(ap_const_lv2_0, t_V_load_fu_761_p1.read())) {
            src_address_V = p_Result_s_fu_895_p5.read();
        } else if (esl_seteq<1,2,2>(ap_const_lv2_1, t_V_load_fu_761_p1.read())) {
            src_address_V = p_Result_1_fu_808_p5.read();
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_2) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, t_V_1_load_fu_677_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_2) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, t_V_1_load_fu_677_p1.read())))) {
        tmp_last_V_1_reg_271 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_2) && 
                esl_seteq<1,2,2>(ap_const_lv2_2, t_V_1_load_fu_677_p1.read()))) {
        tmp_last_V_1_reg_271 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_last_V_1_reg_271 = ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_271.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(t_V_2_load_fu_447_p1.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(t_V_2_load_fu_447_p1.read(), ap_const_lv2_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
          esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        tmp_last_V_3_reg_252 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,2,2>(ap_const_lv2_3, t_V_2_load_fu_447_p1.read()))) {
        tmp_last_V_3_reg_252 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_last_V_3_reg_252 = ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_252.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tx_fifo_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_data_V_1_vld_out.read()))) {
            tx_fifo_V_data_V_1_sel_rd =  (sc_logic) (~tx_fifo_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tx_fifo_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_data_V_1_ack_in.read()))) {
            tx_fifo_V_data_V_1_sel_wr =  (sc_logic) (~tx_fifo_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tx_fifo_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, tx_fifo_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, tx_fifo_V_data_V_1_state.read())))) {
            tx_fifo_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, tx_fifo_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, tx_fifo_V_data_V_1_state.read())))) {
            tx_fifo_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, tx_fifo_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, tx_fifo_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, tx_fifo_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_data_V_1_ack_out.read()))))) {
            tx_fifo_V_data_V_1_state = ap_const_lv2_3;
        } else {
            tx_fifo_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tx_fifo_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_keep_V_1_vld_out.read()))) {
            tx_fifo_V_keep_V_1_sel_rd =  (sc_logic) (~tx_fifo_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tx_fifo_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_keep_V_1_ack_in.read()))) {
            tx_fifo_V_keep_V_1_sel_wr =  (sc_logic) (~tx_fifo_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tx_fifo_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, tx_fifo_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, tx_fifo_V_keep_V_1_state.read())))) {
            tx_fifo_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, tx_fifo_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, tx_fifo_V_keep_V_1_state.read())))) {
            tx_fifo_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, tx_fifo_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, tx_fifo_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, tx_fifo_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_keep_V_1_ack_out.read()))))) {
            tx_fifo_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            tx_fifo_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tx_fifo_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_last_V_1_vld_out.read()))) {
            tx_fifo_V_last_V_1_sel_rd =  (sc_logic) (~tx_fifo_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tx_fifo_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_last_V_1_ack_in.read()))) {
            tx_fifo_V_last_V_1_sel_wr =  (sc_logic) (~tx_fifo_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tx_fifo_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, tx_fifo_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, tx_fifo_V_last_V_1_state.read())))) {
            tx_fifo_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, tx_fifo_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, tx_fifo_V_last_V_1_state.read())))) {
            tx_fifo_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, tx_fifo_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, tx_fifo_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, tx_fifo_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_last_V_1_ack_out.read()))))) {
            tx_fifo_V_last_V_1_state = ap_const_lv2_3;
        } else {
            tx_fifo_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_882.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,2,2>(ap_const_lv2_3, t_V_load_fu_761_p1.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_i_fu_925_p2.read()))) {
            tx_len_V = ap_phi_mux_storemerge3_i_phi_fu_293_p4.read();
        } else if (esl_seteq<1,2,2>(ap_const_lv2_2, t_V_load_fu_761_p1.read())) {
            tx_len_V = tmp_4_fu_776_p1.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(ap_const_lv2_1, t_V_load_fu_761_p1.read()))) {
        axi_command_V = data_in_TDATA.read().range(63, 56);
        ethernet_axi_id_V = data_in_TDATA.read().range(55, 48);
        mac_type_V = data_in_TDATA.read().range(47, 32);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(ap_const_lv2_2, t_V_load_fu_761_p1.read()))) {
        axis_len_V = tmp_4_fu_776_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_load_A.read())) {
        data_out_V_data_V_1_payload_A = data_out_V_data_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_load_B.read())) {
        data_out_V_data_V_1_payload_B = data_out_V_data_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_load_A.read())) {
        data_out_V_last_V_1_payload_A = data_out_V_last_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_load_B.read())) {
        data_out_V_last_V_1_payload_B = data_out_V_last_V_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(ap_const_lv2_0, t_V_load_fu_761_p1.read()))) {
        dest_address_V = tmp_2_fu_875_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fsm_state_V_load_reg_1217 = fsm_state_V.read();
        fsm_state_V_load_reg_1217_pp0_iter1_reg = fsm_state_V_load_reg_1217.read();
        or_cond_i_reg_1322_pp0_iter1_reg = or_cond_i_reg_1322.read();
        t_V_reg_1314_pp0_iter1_reg = t_V_reg_1314.read();
        tmp_12_i_reg_1330_pp0_iter1_reg = tmp_12_i_reg_1330.read();
        tmp_15_i_reg_1337_pp0_iter1_reg = tmp_15_i_reg_1337.read();
        tmp_18_i_reg_1343_pp0_iter1_reg = tmp_18_i_reg_1343.read();
        tmp_30_i_reg_1366_pp0_iter1_reg = tmp_30_i_reg_1366.read();
        tmp_6_i_reg_1326_pp0_iter1_reg = tmp_6_i_reg_1326.read();
        tmp_data_V_2_reg_1299_pp0_iter1_reg = tmp_data_V_2_reg_1299.read();
        tmp_keep_V_1_reg_1304_pp0_iter1_reg = tmp_keep_V_1_reg_1304.read();
        tmp_last_V_2_reg_1309_pp0_iter1_reg = tmp_last_V_2_reg_1309.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        fsm_state_V_load_reg_1217_pp0_iter2_reg = fsm_state_V_load_reg_1217_pp0_iter1_reg.read();
        or_cond_i_reg_1322_pp0_iter2_reg = or_cond_i_reg_1322_pp0_iter1_reg.read();
        t_V_reg_1314_pp0_iter2_reg = t_V_reg_1314_pp0_iter1_reg.read();
        tmp_6_i_reg_1326_pp0_iter2_reg = tmp_6_i_reg_1326_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(ap_const_lv2_3, t_V_load_fu_761_p1.read()))) {
        or_cond_i_reg_1322 = or_cond_i_fu_925_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(ap_const_lv2_1, fsm_state_V_load_reg_1217.read()) && esl_seteq<1,2,2>(ap_const_lv2_3, t_V_reg_1314.read()) && esl_seteq<1,1,1>(or_cond_i_reg_1322.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_i_reg_1326.read()))) {
        or_cond_reg_1394 = or_cond_fu_1119_p2.read();
        sel_tmp1_reg_1383 = sel_tmp1_fu_1082_p2.read();
        sel_tmp7_demorgan_reg_1378 = sel_tmp7_demorgan_fu_1067_p2.read();
        sel_tmp9_reg_1389 = sel_tmp9_fu_1114_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        t_V_reg_1314 = word_count_V.read();
        tmp_data_V_2_reg_1299 = data_in_TDATA.read();
        tmp_keep_V_1_reg_1304 = data_in_TKEEP.read();
        tmp_last_V_2_reg_1309 = data_in_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(ap_const_lv2_3, t_V_load_fu_761_p1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_i_fu_925_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_i_fu_931_p2.read()))) {
        tmp_12_i_reg_1330 = tmp_12_i_fu_937_p2.read();
        tmp_15_i_reg_1337 = tmp_15_i_fu_943_p2.read();
        tmp_18_i_reg_1343 = tmp_18_i_fu_949_p2.read();
        tmp_21_i_reg_1349 = tmp_21_i_fu_955_p2.read();
        tmp_24_i_reg_1355 = tmp_24_i_fu_961_p2.read();
        tmp_27_i_reg_1361 = tmp_27_i_fu_967_p2.read();
        tmp_30_i_reg_1366 = tmp_30_i_fu_973_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(ap_const_lv2_3, t_V_load_fu_761_p1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_i_fu_925_p2.read()))) {
        tmp_6_i_reg_1326 = tmp_6_i_fu_931_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_data_V_1_load_A.read())) {
        tx_fifo_V_data_V_1_payload_A = tmp_data_V_2_reg_1299_pp0_iter1_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_data_V_1_load_B.read())) {
        tx_fifo_V_data_V_1_payload_B = tmp_data_V_2_reg_1299_pp0_iter1_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_keep_V_1_load_A.read())) {
        tx_fifo_V_keep_V_1_payload_A = tx_fifo_V_keep_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_keep_V_1_load_B.read())) {
        tx_fifo_V_keep_V_1_payload_B = tx_fifo_V_keep_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_last_V_1_load_A.read())) {
        tx_fifo_V_last_V_1_payload_A = tx_fifo_V_last_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_last_V_1_load_B.read())) {
        tx_fifo_V_last_V_1_payload_B = tx_fifo_V_last_V_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, word_count_V_flag_1_s_fu_1006_p2.read()))) {
        word_count_V = word_count_V_new_1_i_fu_1012_p3.read();
    }
}

void ethernet_axis_ip::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void ethernet_axis_ip::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ethernet_axis_ip::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_fifo_V_data_V0_status.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
    esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1)) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || ((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_last_V_1_ack_in.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())));
}

void ethernet_axis_ip::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_fifo_V_data_V0_status.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
    esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1)) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())));
}

void ethernet_axis_ip::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_fifo_V_data_V0_status.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
    esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1)) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || ((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())));
}

void ethernet_axis_ip::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, rx_fifo_V_data_V0_status.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1)) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void ethernet_axis_ip::thread_ap_block_state2_io() {
    ap_block_state2_io = ((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, fsm_state_V_load_reg_1217.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_2, fsm_state_V_load_reg_1217.read())));
}

void ethernet_axis_ip::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ethernet_axis_ip::thread_ap_block_state3_io() {
    ap_block_state3_io = ((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, fsm_state_V_load_reg_1217_pp0_iter1_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_2, fsm_state_V_load_reg_1217_pp0_iter1_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op193_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op194_write_state3.read())));
}

void ethernet_axis_ip::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ethernet_axis_ip::thread_ap_block_state4_io() {
    ap_block_state4_io = ((esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op223_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op224_write_state4.read())));
}

void ethernet_axis_ip::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, tx_fifo_V_last_V_1_ack_in.read()));
}

void ethernet_axis_ip::thread_ap_condition_1400() {
    ap_condition_1400 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_0));
}

void ethernet_axis_ip::thread_ap_condition_1404() {
    ap_condition_1404 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(ap_const_lv2_3, t_V_load_fu_761_p1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_i_fu_925_p2.read()));
}

void ethernet_axis_ip::thread_ap_condition_168() {
    ap_condition_168 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void ethernet_axis_ip::thread_ap_condition_541() {
    ap_condition_541 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0));
}

void ethernet_axis_ip::thread_ap_condition_878() {
    ap_condition_878 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void ethernet_axis_ip::thread_ap_condition_880() {
    ap_condition_880 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_2));
}

void ethernet_axis_ip::thread_ap_condition_882() {
    ap_condition_882 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void ethernet_axis_ip::thread_ap_condition_924() {
    ap_condition_924 = (esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && esl_seteq<1,2,2>(ap_const_lv2_2, t_V_load_fu_761_p1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_i_fu_792_p2.read()));
}

void ethernet_axis_ip::thread_ap_condition_969() {
    ap_condition_969 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void ethernet_axis_ip::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void ethernet_axis_ip::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void ethernet_axis_ip::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void ethernet_axis_ip::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ethernet_axis_ip::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void ethernet_axis_ip::thread_ap_idle_pp0_0to2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0_0to2 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to2 = ap_const_logic_0;
    }
}

void ethernet_axis_ip::thread_ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, t_V_load_fu_761_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(ap_const_lv2_3, t_V_load_fu_761_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, t_V_load_fu_761_p1.read())))) {
        ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8 = axi_command_V.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,2,2>(ap_const_lv2_1, t_V_load_fu_761_p1.read()))) {
        ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8 = data_in_TDATA.read().range(63, 56);
    } else {
        ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8 = ap_phi_reg_pp0_iter0_axi_command_V_loc_i_reg_334.read();
    }
}

void ethernet_axis_ip::thread_ap_phi_mux_storemerge2_i_phi_fu_350_p4() {
    if (esl_seteq<1,1,1>(ap_condition_1400.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_nbreadreq_fu_200_p5.read())) {
            ap_phi_mux_storemerge2_i_phi_fu_350_p4 = p_4_cast_i_fu_1052_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_200_p5.read())) {
            ap_phi_mux_storemerge2_i_phi_fu_350_p4 = ap_const_lv2_1;
        } else {
            ap_phi_mux_storemerge2_i_phi_fu_350_p4 = ap_phi_reg_pp0_iter0_storemerge2_i_reg_347.read();
        }
    } else {
        ap_phi_mux_storemerge2_i_phi_fu_350_p4 = ap_phi_reg_pp0_iter0_storemerge2_i_reg_347.read();
    }
}

void ethernet_axis_ip::thread_ap_phi_mux_storemerge3_i_phi_fu_293_p4() {
    if (esl_seteq<1,1,1>(ap_condition_1404.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_6_i_fu_931_p2.read())) {
            ap_phi_mux_storemerge3_i_phi_fu_293_p4 = tmp_11_i_fu_979_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_i_fu_931_p2.read())) {
            ap_phi_mux_storemerge3_i_phi_fu_293_p4 = ap_const_lv16_0;
        } else {
            ap_phi_mux_storemerge3_i_phi_fu_293_p4 = ap_phi_reg_pp0_iter0_storemerge3_i_reg_290.read();
        }
    } else {
        ap_phi_mux_storemerge3_i_phi_fu_293_p4 = ap_phi_reg_pp0_iter0_storemerge3_i_reg_290.read();
    }
}

void ethernet_axis_ip::thread_ap_phi_mux_tmp_last_V_1_phi_fu_275_p8() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_2) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, t_V_1_load_fu_677_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_2) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, t_V_1_load_fu_677_p1.read())))) {
        ap_phi_mux_tmp_last_V_1_phi_fu_275_p8 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,2,2>(fsm_state_V_load_load_fu_411_p1.read(), ap_const_lv2_2) && 
                esl_seteq<1,2,2>(ap_const_lv2_2, t_V_1_load_fu_677_p1.read()))) {
        ap_phi_mux_tmp_last_V_1_phi_fu_275_p8 = ap_const_lv1_1;
    } else {
        ap_phi_mux_tmp_last_V_1_phi_fu_275_p8 = ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_271.read();
    }
}

void ethernet_axis_ip::thread_ap_phi_mux_tmp_last_V_3_phi_fu_256_p8() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(t_V_2_load_fu_447_p1.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(t_V_2_load_fu_447_p1.read(), ap_const_lv2_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
          esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        ap_phi_mux_tmp_last_V_3_phi_fu_256_p8 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,2,2>(ap_const_lv2_3, t_V_2_load_fu_447_p1.read()))) {
        ap_phi_mux_tmp_last_V_3_phi_fu_256_p8 = ap_const_lv1_1;
    } else {
        ap_phi_mux_tmp_last_V_3_phi_fu_256_p8 = ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_252.read();
    }
}

void ethernet_axis_ip::thread_ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,2,2>(ap_const_lv2_3, t_V_load_fu_761_p1.read()))) {
        ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8 = ap_const_lv1_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(ap_const_lv2_1, t_V_load_fu_761_p1.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(ap_const_lv2_0, t_V_load_fu_761_p1.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(ap_const_lv2_2, t_V_load_fu_761_p1.read())))) {
        ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8 = ap_const_lv1_1;
    } else {
        ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8 = ap_phi_reg_pp0_iter0_word_count_V_flag_i_reg_300.read();
    }
}

void ethernet_axis_ip::thread_ap_phi_mux_word_count_V_new_i_phi_fu_320_p8() {
    if (esl_seteq<1,1,1>(ap_condition_541.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,2,2>(ap_const_lv2_2, t_V_load_fu_761_p1.read())) {
            ap_phi_mux_word_count_V_new_i_phi_fu_320_p8 = ap_const_lv2_3;
        } else if (esl_seteq<1,2,2>(ap_const_lv2_0, t_V_load_fu_761_p1.read())) {
            ap_phi_mux_word_count_V_new_i_phi_fu_320_p8 = ap_const_lv2_1;
        } else if (esl_seteq<1,2,2>(ap_const_lv2_1, t_V_load_fu_761_p1.read())) {
            ap_phi_mux_word_count_V_new_i_phi_fu_320_p8 = ap_const_lv2_2;
        } else {
            ap_phi_mux_word_count_V_new_i_phi_fu_320_p8 = ap_phi_reg_pp0_iter0_word_count_V_new_i_reg_317.read();
        }
    } else {
        ap_phi_mux_word_count_V_new_i_phi_fu_320_p8 = ap_phi_reg_pp0_iter0_word_count_V_new_i_reg_317.read();
    }
}

void ethernet_axis_ip::thread_ap_phi_reg_pp0_iter0_axi_command_V_loc_i_reg_334() {
    ap_phi_reg_pp0_iter0_axi_command_V_loc_i_reg_334 =  (sc_lv<8>) ("XXXXXXXX");
}

void ethernet_axis_ip::thread_ap_phi_reg_pp0_iter0_storemerge2_i_reg_347() {
    ap_phi_reg_pp0_iter0_storemerge2_i_reg_347 =  (sc_lv<2>) ("XX");
}

void ethernet_axis_ip::thread_ap_phi_reg_pp0_iter0_storemerge3_i_reg_290() {
    ap_phi_reg_pp0_iter0_storemerge3_i_reg_290 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
}

void ethernet_axis_ip::thread_ap_phi_reg_pp0_iter0_tmp_data_V_3_reg_357() {
    ap_phi_reg_pp0_iter0_tmp_data_V_3_reg_357 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
}

void ethernet_axis_ip::thread_ap_phi_reg_pp0_iter0_tmp_data_V_reg_373() {
    ap_phi_reg_pp0_iter0_tmp_data_V_reg_373 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
}

void ethernet_axis_ip::thread_ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_271() {
    ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_271 =  (sc_lv<1>) ("X");
}

void ethernet_axis_ip::thread_ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_252() {
    ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_252 =  (sc_lv<1>) ("X");
}

void ethernet_axis_ip::thread_ap_phi_reg_pp0_iter0_word_count_V_flag_i_reg_300() {
    ap_phi_reg_pp0_iter0_word_count_V_flag_i_reg_300 =  (sc_lv<1>) ("X");
}

void ethernet_axis_ip::thread_ap_phi_reg_pp0_iter0_word_count_V_new_i_reg_317() {
    ap_phi_reg_pp0_iter0_word_count_V_new_i_reg_317 =  (sc_lv<2>) ("XX");
}

void ethernet_axis_ip::thread_ap_predicate_op16_read_state1() {
    ap_predicate_op16_read_state1 = (esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_3) && esl_seteq<1,2,2>(send_rx_word_count_V.read(), ap_const_lv2_2));
}

void ethernet_axis_ip::thread_ap_predicate_op193_write_state3() {
    ap_predicate_op193_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_1, fsm_state_V_load_reg_1217_pp0_iter1_reg.read()) && esl_seteq<1,2,2>(ap_const_lv2_3, t_V_reg_1314_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(or_cond_i_reg_1322_pp0_iter1_reg.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_i_reg_1326_pp0_iter1_reg.read()));
}

void ethernet_axis_ip::thread_ap_predicate_op194_write_state3() {
    ap_predicate_op194_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_1, fsm_state_V_load_reg_1217_pp0_iter1_reg.read()) && esl_seteq<1,2,2>(ap_const_lv2_3, t_V_reg_1314_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(or_cond_i_reg_1322_pp0_iter1_reg.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_6_i_reg_1326_pp0_iter1_reg.read(), ap_const_lv1_1));
}

void ethernet_axis_ip::thread_ap_predicate_op223_write_state4() {
    ap_predicate_op223_write_state4 = (esl_seteq<1,2,2>(ap_const_lv2_1, fsm_state_V_load_reg_1217_pp0_iter2_reg.read()) && esl_seteq<1,2,2>(ap_const_lv2_3, t_V_reg_1314_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_i_reg_1322_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_i_reg_1326_pp0_iter2_reg.read()));
}

void ethernet_axis_ip::thread_ap_predicate_op224_write_state4() {
    ap_predicate_op224_write_state4 = (esl_seteq<1,2,2>(ap_const_lv2_1, fsm_state_V_load_reg_1217_pp0_iter2_reg.read()) && esl_seteq<1,2,2>(ap_const_lv2_3, t_V_reg_1314_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_i_reg_1322_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_6_i_reg_1326_pp0_iter2_reg.read()));
}

void ethernet_axis_ip::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ethernet_axis_ip::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to2.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void ethernet_axis_ip::thread_brmerge_demorgan_i_fu_1046_p2() {
    brmerge_demorgan_i_fu_1046_p2 = (rx_ready_V.read() & tmp_1_nbreadreq_fu_212_p5.read());
}

void ethernet_axis_ip::thread_data_in_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        data_in_TDATA_blk_n = data_in_TVALID.read();
    } else {
        data_in_TDATA_blk_n = ap_const_logic_1;
    }
}

void ethernet_axis_ip::thread_data_in_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,2,2>(fsm_state_V.read(), ap_const_lv2_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_in_TREADY = ap_const_logic_1;
    } else {
        data_in_TREADY = ap_const_logic_0;
    }
}

void ethernet_axis_ip::thread_data_out_TDATA() {
    data_out_TDATA = data_out_V_data_V_1_data_out.read();
}

void ethernet_axis_ip::thread_data_out_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, fsm_state_V_load_reg_1217.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,2,2>(ap_const_lv2_2, fsm_state_V_load_reg_1217_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_3, fsm_state_V_load_reg_1217.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,2,2>(ap_const_lv2_3, fsm_state_V_load_reg_1217_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        data_out_TDATA_blk_n = data_out_V_data_V_1_state.read()[1];
    } else {
        data_out_TDATA_blk_n = ap_const_logic_1;
    }
}

void ethernet_axis_ip::thread_data_out_TKEEP() {
    data_out_TKEEP = data_out_V_keep_V_1_data_out.read();
}

void ethernet_axis_ip::thread_data_out_TLAST() {
    data_out_TLAST = data_out_V_last_V_1_data_out.read();
}

void ethernet_axis_ip::thread_data_out_TVALID() {
    data_out_TVALID = data_out_V_last_V_1_state.read()[0];
}

void ethernet_axis_ip::thread_data_out_V_data_V_1_ack_in() {
    data_out_V_data_V_1_ack_in = data_out_V_data_V_1_state.read()[1];
}

void ethernet_axis_ip::thread_data_out_V_data_V_1_ack_out() {
    data_out_V_data_V_1_ack_out = data_out_TREADY.read();
}

void ethernet_axis_ip::thread_data_out_V_data_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_969.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,2,2>(ap_const_lv2_2, fsm_state_V_load_reg_1217.read())) {
            data_out_V_data_V_1_data_in = ap_phi_reg_pp0_iter1_tmp_data_V_reg_373.read();
        } else if (esl_seteq<1,2,2>(ap_const_lv2_3, fsm_state_V_load_reg_1217.read())) {
            data_out_V_data_V_1_data_in = ap_phi_reg_pp0_iter1_tmp_data_V_3_reg_357.read();
        } else {
            data_out_V_data_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        data_out_V_data_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void ethernet_axis_ip::thread_data_out_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_sel.read())) {
        data_out_V_data_V_1_data_out = data_out_V_data_V_1_payload_B.read();
    } else {
        data_out_V_data_V_1_data_out = data_out_V_data_V_1_payload_A.read();
    }
}

void ethernet_axis_ip::thread_data_out_V_data_V_1_load_A() {
    data_out_V_data_V_1_load_A = (data_out_V_data_V_1_state_cmp_full.read() & ~data_out_V_data_V_1_sel_wr.read());
}

void ethernet_axis_ip::thread_data_out_V_data_V_1_load_B() {
    data_out_V_data_V_1_load_B = (data_out_V_data_V_1_sel_wr.read() & data_out_V_data_V_1_state_cmp_full.read());
}

void ethernet_axis_ip::thread_data_out_V_data_V_1_sel() {
    data_out_V_data_V_1_sel = data_out_V_data_V_1_sel_rd.read();
}

void ethernet_axis_ip::thread_data_out_V_data_V_1_state_cmp_full() {
    data_out_V_data_V_1_state_cmp_full =  (sc_logic) ((!data_out_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data_out_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axis_ip::thread_data_out_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_3, fsm_state_V_load_reg_1217.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, fsm_state_V_load_reg_1217.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        data_out_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        data_out_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axis_ip::thread_data_out_V_data_V_1_vld_out() {
    data_out_V_data_V_1_vld_out = data_out_V_data_V_1_state.read()[0];
}

void ethernet_axis_ip::thread_data_out_V_keep_V_1_ack_in() {
    data_out_V_keep_V_1_ack_in = data_out_V_keep_V_1_state.read()[1];
}

void ethernet_axis_ip::thread_data_out_V_keep_V_1_ack_out() {
    data_out_V_keep_V_1_ack_out = data_out_TREADY.read();
}

void ethernet_axis_ip::thread_data_out_V_keep_V_1_data_out() {
    data_out_V_keep_V_1_data_out = ap_const_lv8_FF;
}

void ethernet_axis_ip::thread_data_out_V_keep_V_1_sel() {
    data_out_V_keep_V_1_sel = data_out_V_keep_V_1_sel_rd.read();
}

void ethernet_axis_ip::thread_data_out_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_3, fsm_state_V_load_reg_1217.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, fsm_state_V_load_reg_1217.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        data_out_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        data_out_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axis_ip::thread_data_out_V_keep_V_1_vld_out() {
    data_out_V_keep_V_1_vld_out = data_out_V_keep_V_1_state.read()[0];
}

void ethernet_axis_ip::thread_data_out_V_last_V_1_ack_in() {
    data_out_V_last_V_1_ack_in = data_out_V_last_V_1_state.read()[1];
}

void ethernet_axis_ip::thread_data_out_V_last_V_1_ack_out() {
    data_out_V_last_V_1_ack_out = data_out_TREADY.read();
}

void ethernet_axis_ip::thread_data_out_V_last_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_969.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,2,2>(ap_const_lv2_2, fsm_state_V_load_reg_1217.read())) {
            data_out_V_last_V_1_data_in = tmp_last_V_1_reg_271.read();
        } else if (esl_seteq<1,2,2>(ap_const_lv2_3, fsm_state_V_load_reg_1217.read())) {
            data_out_V_last_V_1_data_in = tmp_last_V_3_reg_252.read();
        } else {
            data_out_V_last_V_1_data_in =  (sc_lv<1>) ("X");
        }
    } else {
        data_out_V_last_V_1_data_in =  (sc_lv<1>) ("X");
    }
}

void ethernet_axis_ip::thread_data_out_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_sel.read())) {
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_B.read();
    } else {
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_A.read();
    }
}

void ethernet_axis_ip::thread_data_out_V_last_V_1_load_A() {
    data_out_V_last_V_1_load_A = (data_out_V_last_V_1_state_cmp_full.read() & ~data_out_V_last_V_1_sel_wr.read());
}

void ethernet_axis_ip::thread_data_out_V_last_V_1_load_B() {
    data_out_V_last_V_1_load_B = (data_out_V_last_V_1_sel_wr.read() & data_out_V_last_V_1_state_cmp_full.read());
}

void ethernet_axis_ip::thread_data_out_V_last_V_1_sel() {
    data_out_V_last_V_1_sel = data_out_V_last_V_1_sel_rd.read();
}

void ethernet_axis_ip::thread_data_out_V_last_V_1_state_cmp_full() {
    data_out_V_last_V_1_state_cmp_full =  (sc_logic) ((!data_out_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data_out_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axis_ip::thread_data_out_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_3, fsm_state_V_load_reg_1217.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, fsm_state_V_load_reg_1217.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        data_out_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        data_out_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axis_ip::thread_data_out_V_last_V_1_vld_out() {
    data_out_V_last_V_1_vld_out = data_out_V_last_V_1_state.read()[0];
}

void ethernet_axis_ip::thread_fifo_out_TDATA() {
    fifo_out_TDATA = tx_fifo_V_data_V_1_data_out.read();
}

void ethernet_axis_ip::thread_fifo_out_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op194_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op224_write_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op193_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op223_write_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        fifo_out_TDATA_blk_n = tx_fifo_V_data_V_1_state.read()[1];
    } else {
        fifo_out_TDATA_blk_n = ap_const_logic_1;
    }
}

void ethernet_axis_ip::thread_fifo_out_TKEEP() {
    fifo_out_TKEEP = tx_fifo_V_keep_V_1_data_out.read();
}

void ethernet_axis_ip::thread_fifo_out_TLAST() {
    fifo_out_TLAST = tx_fifo_V_last_V_1_data_out.read();
}

void ethernet_axis_ip::thread_fifo_out_TVALID() {
    fifo_out_TVALID = tx_fifo_V_last_V_1_state.read()[0];
}

void ethernet_axis_ip::thread_fsm_state_V_load_load_fu_411_p1() {
    fsm_state_V_load_load_fu_411_p1 = fsm_state_V.read();
}

void ethernet_axis_ip::thread_grp_fu_391_p2() {
    grp_fu_391_p2 = (!rx_len_V.read().is_01() || !ap_const_lv16_8.is_01())? sc_lv<16>(): (sc_biguint<16>(rx_len_V.read()) + sc_biguint<16>(ap_const_lv16_8));
}

void ethernet_axis_ip::thread_grp_fu_402_p4() {
    grp_fu_402_p4 = dest_address_V.read().range(47, 16);
}

void ethernet_axis_ip::thread_newSel1_fu_1152_p3() {
    newSel1_fu_1152_p3 = (!sel_tmp1_reg_1383.read()[0].is_01())? sc_lv<6>(): ((sel_tmp1_reg_1383.read()[0].to_bool())? ap_const_lv6_1F: ap_const_lv6_3F);
}

void ethernet_axis_ip::thread_newSel3_fu_1164_p3() {
    newSel3_fu_1164_p3 = (!sel_tmp3_fu_1130_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp3_fu_1130_p2.read()[0].to_bool())? ap_const_lv8_7F: ap_const_lv8_FF);
}

void ethernet_axis_ip::thread_newSel5_cast_cast_fu_1177_p3() {
    newSel5_cast_cast_fu_1177_p3 = (!tmp_30_i_reg_1366_pp0_iter1_reg.read()[0].is_01())? sc_lv<8>(): ((tmp_30_i_reg_1366_pp0_iter1_reg.read()[0].to_bool())? ap_const_lv8_3: ap_const_lv8_1);
}

void ethernet_axis_ip::thread_newSel7_cast_fu_1191_p1() {
    newSel7_cast_fu_1191_p1 = esl_zext<8,6>(newSel7_fu_1184_p3.read());
}

void ethernet_axis_ip::thread_newSel7_fu_1184_p3() {
    newSel7_fu_1184_p3 = (!or_cond_reg_1394.read()[0].is_01())? sc_lv<6>(): ((or_cond_reg_1394.read()[0].to_bool())? newSel_cast_cast_fu_1145_p3.read(): newSel1_fu_1152_p3.read());
}

void ethernet_axis_ip::thread_newSel9_fu_1200_p3() {
    newSel9_fu_1200_p3 = (!or_cond4_fu_1172_p2.read()[0].is_01())? sc_lv<8>(): ((or_cond4_fu_1172_p2.read()[0].to_bool())? newSel3_fu_1164_p3.read(): newSel5_cast_cast_fu_1177_p3.read());
}

void ethernet_axis_ip::thread_newSel_cast_cast_fu_1145_p3() {
    newSel_cast_cast_fu_1145_p3 = (!sel_tmp9_reg_1389.read()[0].is_01())? sc_lv<6>(): ((sel_tmp9_reg_1389.read()[0].to_bool())? ap_const_lv6_7: ap_const_lv6_F);
}

void ethernet_axis_ip::thread_not_tmp_last_V_9_i_fu_657_p2() {
    not_tmp_last_V_9_i_fu_657_p2 = (ap_phi_mux_tmp_last_V_3_phi_fu_256_p8.read() ^ ap_const_lv1_1);
}

void ethernet_axis_ip::thread_or_cond2_fu_1159_p2() {
    or_cond2_fu_1159_p2 = (sel_tmp1_reg_1383.read() | sel_tmp8_fu_1140_p2.read());
}

void ethernet_axis_ip::thread_or_cond4_fu_1172_p2() {
    or_cond4_fu_1172_p2 = (sel_tmp3_fu_1130_p2.read() | tmp_12_i_reg_1330_pp0_iter1_reg.read());
}

void ethernet_axis_ip::thread_or_cond8_fu_1195_p2() {
    or_cond8_fu_1195_p2 = (or_cond_reg_1394.read() | or_cond2_fu_1159_p2.read());
}

void ethernet_axis_ip::thread_or_cond_fu_1119_p2() {
    or_cond_fu_1119_p2 = (sel_tmp9_fu_1114_p2.read() | sel_tmp5_fu_1098_p2.read());
}

void ethernet_axis_ip::thread_or_cond_i_fu_925_p2() {
    or_cond_i_fu_925_p2 = (tmp_9_i_fu_913_p2.read() | tmp_i_fu_919_p2.read());
}

void ethernet_axis_ip::thread_p_4_cast_i_fu_1052_p3() {
    p_4_cast_i_fu_1052_p3 = (!brmerge_demorgan_i_fu_1046_p2.read()[0].is_01())? sc_lv<2>(): ((brmerge_demorgan_i_fu_1046_p2.read()[0].to_bool())? ap_const_lv2_3: ap_const_lv2_0);
}

void ethernet_axis_ip::thread_p_Result_10_fu_685_p3() {
    p_Result_10_fu_685_p3 = esl_concat<48,16>(ap_const_lv48_DEADBEEF0000, axis_len_V.read());
}

void ethernet_axis_ip::thread_p_Result_11_fu_629_p3() {
    p_Result_11_fu_629_p3 = esl_concat<16,48>(tmp_6_fu_625_p1.read(), src_address_V.read());
}

void ethernet_axis_ip::thread_p_Result_12_fu_605_p6() {
    p_Result_12_fu_605_p6 = esl_concat<32,32>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(ap_const_lv8_52, ethernet_axi_id_V.read()), ethernet_axi_id_V.read()), tmp_7_fu_601_p1.read()), grp_fu_402_p4.read());
}

void ethernet_axis_ip::thread_p_Result_13_fu_643_p3() {
    p_Result_13_fu_643_p3 = esl_concat<48,16>(ap_const_lv48_DEADBEEF0000, rx_len_V.read());
}

void ethernet_axis_ip::thread_p_Result_1_fu_808_p5() {
    p_Result_1_fu_808_p5 = esl_partset<48,48,32,32,32>(src_address_V.read(), tmp_3_fu_804_p1.read(), ap_const_lv32_10, ap_const_lv32_2F);
}

void ethernet_axis_ip::thread_p_Result_1_i_fu_885_p4() {
    p_Result_1_i_fu_885_p4 = data_in_TDATA.read().range(63, 48);
}

void ethernet_axis_ip::thread_p_Result_8_fu_721_p3() {
    p_Result_8_fu_721_p3 = esl_concat<16,48>(tmp_5_fu_717_p1.read(), src_address_V.read());
}

void ethernet_axis_ip::thread_p_Result_9_fu_699_p5() {
    p_Result_9_fu_699_p5 = esl_concat<32,32>(esl_concat<16,16>(esl_concat<8,8>(ap_const_lv8_57, ethernet_axi_id_V.read()), mac_type_V.read()), grp_fu_402_p4.read());
}

void ethernet_axis_ip::thread_p_Result_s_fu_895_p5() {
    p_Result_s_fu_895_p5 = esl_partset<48,48,16,32,32>(src_address_V.read(), p_Result_1_i_fu_885_p4.read(), ap_const_lv32_0, ap_const_lv32_F);
}

void ethernet_axis_ip::thread_rx_fifo_V_data_V0_status() {
    rx_fifo_V_data_V0_status = (rx_fifo_V_data_V_empty_n.read() & rx_fifo_V_keep_V_empty_n.read() & rx_fifo_V_last_V_empty_n.read());
}

void ethernet_axis_ip::thread_rx_fifo_V_data_V0_update() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_fifo_V_data_V0_update = ap_const_logic_1;
    } else {
        rx_fifo_V_data_V0_update = ap_const_logic_0;
    }
}

void ethernet_axis_ip::thread_rx_fifo_V_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        rx_fifo_V_data_V_blk_n = rx_fifo_V_data_V_empty_n.read();
    } else {
        rx_fifo_V_data_V_blk_n = ap_const_logic_1;
    }
}

void ethernet_axis_ip::thread_rx_fifo_V_data_V_read() {
    rx_fifo_V_data_V_read = rx_fifo_V_data_V0_update.read();
}

void ethernet_axis_ip::thread_rx_fifo_V_keep_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        rx_fifo_V_keep_V_blk_n = rx_fifo_V_keep_V_empty_n.read();
    } else {
        rx_fifo_V_keep_V_blk_n = ap_const_logic_1;
    }
}

void ethernet_axis_ip::thread_rx_fifo_V_keep_V_read() {
    rx_fifo_V_keep_V_read = rx_fifo_V_data_V0_update.read();
}

void ethernet_axis_ip::thread_rx_fifo_V_last_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        rx_fifo_V_last_V_blk_n = rx_fifo_V_last_V_empty_n.read();
    } else {
        rx_fifo_V_last_V_blk_n = ap_const_logic_1;
    }
}

void ethernet_axis_ip::thread_rx_fifo_V_last_V_read() {
    rx_fifo_V_last_V_read = rx_fifo_V_data_V0_update.read();
}

void ethernet_axis_ip::thread_sel_tmp14_demorgan_fu_1071_p2() {
    sel_tmp14_demorgan_fu_1071_p2 = (sel_tmp7_demorgan_fu_1067_p2.read() | tmp_18_i_reg_1343.read());
}

void ethernet_axis_ip::thread_sel_tmp1_fu_1082_p2() {
    sel_tmp1_fu_1082_p2 = (tmp_21_i_reg_1349.read() & sel_tmp_fu_1076_p2.read());
}

void ethernet_axis_ip::thread_sel_tmp23_demorgan_fu_1087_p2() {
    sel_tmp23_demorgan_fu_1087_p2 = (sel_tmp14_demorgan_fu_1071_p2.read() | tmp_21_i_reg_1349.read());
}

void ethernet_axis_ip::thread_sel_tmp2_fu_1125_p2() {
    sel_tmp2_fu_1125_p2 = (tmp_12_i_reg_1330_pp0_iter1_reg.read() ^ ap_const_lv1_1);
}

void ethernet_axis_ip::thread_sel_tmp34_demorgan_fu_1103_p2() {
    sel_tmp34_demorgan_fu_1103_p2 = (sel_tmp23_demorgan_fu_1087_p2.read() | tmp_24_i_reg_1355.read());
}

void ethernet_axis_ip::thread_sel_tmp3_fu_1130_p2() {
    sel_tmp3_fu_1130_p2 = (tmp_15_i_reg_1337_pp0_iter1_reg.read() & sel_tmp2_fu_1125_p2.read());
}

void ethernet_axis_ip::thread_sel_tmp4_fu_1092_p2() {
    sel_tmp4_fu_1092_p2 = (sel_tmp23_demorgan_fu_1087_p2.read() ^ ap_const_lv1_1);
}

void ethernet_axis_ip::thread_sel_tmp5_fu_1098_p2() {
    sel_tmp5_fu_1098_p2 = (tmp_24_i_reg_1355.read() & sel_tmp4_fu_1092_p2.read());
}

void ethernet_axis_ip::thread_sel_tmp6_fu_1108_p2() {
    sel_tmp6_fu_1108_p2 = (sel_tmp34_demorgan_fu_1103_p2.read() ^ ap_const_lv1_1);
}

void ethernet_axis_ip::thread_sel_tmp7_demorgan_fu_1067_p2() {
    sel_tmp7_demorgan_fu_1067_p2 = (tmp_12_i_reg_1330.read() | tmp_15_i_reg_1337.read());
}

void ethernet_axis_ip::thread_sel_tmp7_fu_1135_p2() {
    sel_tmp7_fu_1135_p2 = (sel_tmp7_demorgan_reg_1378.read() ^ ap_const_lv1_1);
}

void ethernet_axis_ip::thread_sel_tmp8_fu_1140_p2() {
    sel_tmp8_fu_1140_p2 = (tmp_18_i_reg_1343_pp0_iter1_reg.read() & sel_tmp7_fu_1135_p2.read());
}

void ethernet_axis_ip::thread_sel_tmp9_fu_1114_p2() {
    sel_tmp9_fu_1114_p2 = (tmp_27_i_reg_1361.read() & sel_tmp6_fu_1108_p2.read());
}

void ethernet_axis_ip::thread_sel_tmp_fu_1076_p2() {
    sel_tmp_fu_1076_p2 = (sel_tmp14_demorgan_fu_1071_p2.read() ^ ap_const_lv1_1);
}

void ethernet_axis_ip::thread_storemerge1_i_fu_735_p3() {
    storemerge1_i_fu_735_p3 = (!ap_phi_mux_tmp_last_V_1_phi_fu_275_p8.read()[0].is_01())? sc_lv<2>(): ((ap_phi_mux_tmp_last_V_1_phi_fu_275_p8.read()[0].to_bool())? ap_const_lv2_0: ap_const_lv2_2);
}

void ethernet_axis_ip::thread_storemerge4_i_fu_998_p3() {
    storemerge4_i_fu_998_p3 = (!tmp_32_i_fu_992_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_32_i_fu_992_p2.read()[0].to_bool())? ap_const_lv2_2: ap_const_lv2_0);
}

void ethernet_axis_ip::thread_storemerge5_i_fu_1020_p3() {
    storemerge5_i_fu_1020_p3 = (!data_in_TLAST.read()[0].is_01())? sc_lv<2>(): ((data_in_TLAST.read()[0].to_bool())? storemerge4_i_fu_998_p3.read(): ap_const_lv2_1);
}

void ethernet_axis_ip::thread_storemerge_cast_i_fu_663_p3() {
    storemerge_cast_i_fu_663_p3 = (!not_tmp_last_V_9_i_fu_657_p2.read()[0].is_01())? sc_lv<2>(): ((not_tmp_last_V_9_i_fu_657_p2.read()[0].to_bool())? ap_const_lv2_3: ap_const_lv2_0);
}

void ethernet_axis_ip::thread_t_V_1_load_fu_677_p1() {
    t_V_1_load_fu_677_p1 = send_tx_word_count_V.read();
}

void ethernet_axis_ip::thread_t_V_2_load_fu_447_p1() {
    t_V_2_load_fu_447_p1 = send_rx_word_count_V.read();
}

void ethernet_axis_ip::thread_t_V_load_fu_761_p1() {
    t_V_load_fu_761_p1 = word_count_V.read();
}

void ethernet_axis_ip::thread_tmp_10_i_fu_469_p2() {
    tmp_10_i_fu_469_p2 = (!rx_fifo_V_keep_V_dout.read().is_01() || !ap_const_lv8_7F.is_01())? sc_lv<1>(): sc_lv<1>(rx_fifo_V_keep_V_dout.read() == ap_const_lv8_7F);
}

void ethernet_axis_ip::thread_tmp_11_i_fu_979_p2() {
    tmp_11_i_fu_979_p2 = (!tx_len_V.read().is_01() || !ap_const_lv16_FFF8.is_01())? sc_lv<16>(): (sc_biguint<16>(tx_len_V.read()) + sc_bigint<16>(ap_const_lv16_FFF8));
}

void ethernet_axis_ip::thread_tmp_12_i_fu_937_p2() {
    tmp_12_i_fu_937_p2 = (!tx_len_V.read().is_01() || !ap_const_lv16_8.is_01())? sc_lv<1>(): sc_lv<1>(tx_len_V.read() == ap_const_lv16_8);
}

void ethernet_axis_ip::thread_tmp_13_i_fu_583_p2() {
    tmp_13_i_fu_583_p2 = (!rx_len_V.read().is_01() || !ap_const_lv16_7.is_01())? sc_lv<16>(): (sc_biguint<16>(rx_len_V.read()) + sc_biguint<16>(ap_const_lv16_7));
}

void ethernet_axis_ip::thread_tmp_14_i_fu_475_p2() {
    tmp_14_i_fu_475_p2 = (!rx_fifo_V_keep_V_dout.read().is_01() || !ap_const_lv8_3F.is_01())? sc_lv<1>(): sc_lv<1>(rx_fifo_V_keep_V_dout.read() == ap_const_lv8_3F);
}

void ethernet_axis_ip::thread_tmp_15_i_fu_943_p2() {
    tmp_15_i_fu_943_p2 = (!tx_len_V.read().is_01() || !ap_const_lv16_7.is_01())? sc_lv<1>(): sc_lv<1>(tx_len_V.read() == ap_const_lv16_7);
}

void ethernet_axis_ip::thread_tmp_16_i_fu_571_p2() {
    tmp_16_i_fu_571_p2 = (!rx_len_V.read().is_01() || !ap_const_lv16_6.is_01())? sc_lv<16>(): (sc_biguint<16>(rx_len_V.read()) + sc_biguint<16>(ap_const_lv16_6));
}

void ethernet_axis_ip::thread_tmp_17_i_fu_481_p2() {
    tmp_17_i_fu_481_p2 = (!rx_fifo_V_keep_V_dout.read().is_01() || !ap_const_lv8_1F.is_01())? sc_lv<1>(): sc_lv<1>(rx_fifo_V_keep_V_dout.read() == ap_const_lv8_1F);
}

void ethernet_axis_ip::thread_tmp_18_i_fu_949_p2() {
    tmp_18_i_fu_949_p2 = (!tx_len_V.read().is_01() || !ap_const_lv16_6.is_01())? sc_lv<1>(): sc_lv<1>(tx_len_V.read() == ap_const_lv16_6);
}

void ethernet_axis_ip::thread_tmp_19_i_fu_559_p2() {
    tmp_19_i_fu_559_p2 = (!rx_len_V.read().is_01() || !ap_const_lv16_5.is_01())? sc_lv<16>(): (sc_biguint<16>(rx_len_V.read()) + sc_biguint<16>(ap_const_lv16_5));
}

void ethernet_axis_ip::thread_tmp_1_nbreadreq_fu_212_p5() {
    tmp_1_nbreadreq_fu_212_p5 =  (sc_lv<1>) ((rx_fifo_V_data_V_empty_n.read() & rx_fifo_V_keep_V_empty_n.read() & rx_fifo_V_last_V_empty_n.read()));
}

void ethernet_axis_ip::thread_tmp_20_i_fu_487_p2() {
    tmp_20_i_fu_487_p2 = (!rx_fifo_V_keep_V_dout.read().is_01() || !ap_const_lv8_F.is_01())? sc_lv<1>(): sc_lv<1>(rx_fifo_V_keep_V_dout.read() == ap_const_lv8_F);
}

void ethernet_axis_ip::thread_tmp_21_i_fu_955_p2() {
    tmp_21_i_fu_955_p2 = (!tx_len_V.read().is_01() || !ap_const_lv16_5.is_01())? sc_lv<1>(): sc_lv<1>(tx_len_V.read() == ap_const_lv16_5);
}

void ethernet_axis_ip::thread_tmp_22_i_fu_547_p2() {
    tmp_22_i_fu_547_p2 = (!rx_len_V.read().is_01() || !ap_const_lv16_4.is_01())? sc_lv<16>(): (sc_biguint<16>(rx_len_V.read()) + sc_biguint<16>(ap_const_lv16_4));
}

void ethernet_axis_ip::thread_tmp_23_i_fu_493_p2() {
    tmp_23_i_fu_493_p2 = (!rx_fifo_V_keep_V_dout.read().is_01() || !ap_const_lv8_7.is_01())? sc_lv<1>(): sc_lv<1>(rx_fifo_V_keep_V_dout.read() == ap_const_lv8_7);
}

void ethernet_axis_ip::thread_tmp_24_i_fu_961_p2() {
    tmp_24_i_fu_961_p2 = (!tx_len_V.read().is_01() || !ap_const_lv16_4.is_01())? sc_lv<1>(): sc_lv<1>(tx_len_V.read() == ap_const_lv16_4);
}

void ethernet_axis_ip::thread_tmp_25_i_fu_535_p2() {
    tmp_25_i_fu_535_p2 = (!rx_len_V.read().is_01() || !ap_const_lv16_3.is_01())? sc_lv<16>(): (sc_biguint<16>(rx_len_V.read()) + sc_biguint<16>(ap_const_lv16_3));
}

void ethernet_axis_ip::thread_tmp_26_i_fu_499_p2() {
    tmp_26_i_fu_499_p2 = (!rx_fifo_V_keep_V_dout.read().is_01() || !ap_const_lv8_3.is_01())? sc_lv<1>(): sc_lv<1>(rx_fifo_V_keep_V_dout.read() == ap_const_lv8_3);
}

void ethernet_axis_ip::thread_tmp_27_i_fu_967_p2() {
    tmp_27_i_fu_967_p2 = (!tx_len_V.read().is_01() || !ap_const_lv16_3.is_01())? sc_lv<1>(): sc_lv<1>(tx_len_V.read() == ap_const_lv16_3);
}

void ethernet_axis_ip::thread_tmp_28_i_fu_523_p2() {
    tmp_28_i_fu_523_p2 = (!rx_len_V.read().is_01() || !ap_const_lv16_2.is_01())? sc_lv<16>(): (sc_biguint<16>(rx_len_V.read()) + sc_biguint<16>(ap_const_lv16_2));
}

void ethernet_axis_ip::thread_tmp_29_i_fu_505_p2() {
    tmp_29_i_fu_505_p2 = (!rx_fifo_V_keep_V_dout.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(rx_fifo_V_keep_V_dout.read() == ap_const_lv8_1);
}

void ethernet_axis_ip::thread_tmp_2_fu_875_p1() {
    tmp_2_fu_875_p1 = data_in_TDATA.read().range(48-1, 0);
}

void ethernet_axis_ip::thread_tmp_30_i_fu_973_p2() {
    tmp_30_i_fu_973_p2 = (!tx_len_V.read().is_01() || !ap_const_lv16_2.is_01())? sc_lv<1>(): sc_lv<1>(tx_len_V.read() == ap_const_lv16_2);
}

void ethernet_axis_ip::thread_tmp_31_i_fu_511_p2() {
    tmp_31_i_fu_511_p2 = (!rx_len_V.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(rx_len_V.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void ethernet_axis_ip::thread_tmp_32_i_fu_992_p2() {
    tmp_32_i_fu_992_p2 = (!ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8.read().is_01() || !ap_const_lv8_57.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_axi_command_V_loc_i_phi_fu_337_p8.read() == ap_const_lv8_57);
}

void ethernet_axis_ip::thread_tmp_3_fu_804_p1() {
    tmp_3_fu_804_p1 = data_in_TDATA.read().range(32-1, 0);
}

void ethernet_axis_ip::thread_tmp_4_fu_776_p1() {
    tmp_4_fu_776_p1 = data_in_TDATA.read().range(16-1, 0);
}

void ethernet_axis_ip::thread_tmp_4_i_fu_463_p2() {
    tmp_4_i_fu_463_p2 = (!rx_fifo_V_keep_V_dout.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(rx_fifo_V_keep_V_dout.read() == ap_const_lv8_FF);
}

void ethernet_axis_ip::thread_tmp_5_fu_717_p1() {
    tmp_5_fu_717_p1 = dest_address_V.read().range(16-1, 0);
}

void ethernet_axis_ip::thread_tmp_6_fu_625_p1() {
    tmp_6_fu_625_p1 = dest_address_V.read().range(16-1, 0);
}

void ethernet_axis_ip::thread_tmp_6_i_fu_931_p2() {
    tmp_6_i_fu_931_p2 = (!tx_len_V.read().is_01() || !ap_const_lv16_8.is_01())? sc_lv<1>(): (sc_biguint<16>(tx_len_V.read()) > sc_biguint<16>(ap_const_lv16_8));
}

void ethernet_axis_ip::thread_tmp_7_fu_601_p1() {
    tmp_7_fu_601_p1 = mac_type_V.read().range(8-1, 0);
}

void ethernet_axis_ip::thread_tmp_8_i_fu_792_p2() {
    tmp_8_i_fu_792_p2 = (!axi_command_V.read().is_01() || !ap_const_lv8_52.is_01())? sc_lv<1>(): sc_lv<1>(axi_command_V.read() == ap_const_lv8_52);
}

void ethernet_axis_ip::thread_tmp_9_i_fu_913_p2() {
    tmp_9_i_fu_913_p2 = (!axi_command_V.read().is_01() || !ap_const_lv8_57.is_01())? sc_lv<1>(): sc_lv<1>(axi_command_V.read() != ap_const_lv8_57);
}

void ethernet_axis_ip::thread_tmp_i_fu_919_p2() {
    tmp_i_fu_919_p2 = (!tx_len_V.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(tx_len_V.read() == ap_const_lv16_0);
}

void ethernet_axis_ip::thread_tmp_keep_V_2_fu_1208_p3() {
    tmp_keep_V_2_fu_1208_p3 = (!or_cond8_fu_1195_p2.read()[0].is_01())? sc_lv<8>(): ((or_cond8_fu_1195_p2.read()[0].to_bool())? newSel7_cast_fu_1191_p1.read(): newSel9_fu_1200_p3.read());
}

void ethernet_axis_ip::thread_tmp_last_V_fu_459_p1() {
    tmp_last_V_fu_459_p1 = rx_fifo_V_last_V_dout.read();
}

void ethernet_axis_ip::thread_tmp_nbreadreq_fu_200_p5() {
    tmp_nbreadreq_fu_200_p5 =  (sc_lv<1>) ((data_in_TVALID.read()));
}

void ethernet_axis_ip::thread_tx_fifo_V_data_V_1_ack_in() {
    tx_fifo_V_data_V_1_ack_in = tx_fifo_V_data_V_1_state.read()[1];
}

void ethernet_axis_ip::thread_tx_fifo_V_data_V_1_ack_out() {
    tx_fifo_V_data_V_1_ack_out = fifo_out_TREADY.read();
}

void ethernet_axis_ip::thread_tx_fifo_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_data_V_1_sel.read())) {
        tx_fifo_V_data_V_1_data_out = tx_fifo_V_data_V_1_payload_B.read();
    } else {
        tx_fifo_V_data_V_1_data_out = tx_fifo_V_data_V_1_payload_A.read();
    }
}

void ethernet_axis_ip::thread_tx_fifo_V_data_V_1_load_A() {
    tx_fifo_V_data_V_1_load_A = (tx_fifo_V_data_V_1_state_cmp_full.read() & ~tx_fifo_V_data_V_1_sel_wr.read());
}

void ethernet_axis_ip::thread_tx_fifo_V_data_V_1_load_B() {
    tx_fifo_V_data_V_1_load_B = (tx_fifo_V_data_V_1_sel_wr.read() & tx_fifo_V_data_V_1_state_cmp_full.read());
}

void ethernet_axis_ip::thread_tx_fifo_V_data_V_1_sel() {
    tx_fifo_V_data_V_1_sel = tx_fifo_V_data_V_1_sel_rd.read();
}

void ethernet_axis_ip::thread_tx_fifo_V_data_V_1_state_cmp_full() {
    tx_fifo_V_data_V_1_state_cmp_full =  (sc_logic) ((!tx_fifo_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tx_fifo_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axis_ip::thread_tx_fifo_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op193_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op194_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        tx_fifo_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        tx_fifo_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axis_ip::thread_tx_fifo_V_data_V_1_vld_out() {
    tx_fifo_V_data_V_1_vld_out = tx_fifo_V_data_V_1_state.read()[0];
}

void ethernet_axis_ip::thread_tx_fifo_V_keep_V_1_ack_in() {
    tx_fifo_V_keep_V_1_ack_in = tx_fifo_V_keep_V_1_state.read()[1];
}

void ethernet_axis_ip::thread_tx_fifo_V_keep_V_1_ack_out() {
    tx_fifo_V_keep_V_1_ack_out = fifo_out_TREADY.read();
}

void ethernet_axis_ip::thread_tx_fifo_V_keep_V_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op194_write_state3.read())) {
            tx_fifo_V_keep_V_1_data_in = tmp_keep_V_1_reg_1304_pp0_iter1_reg.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op193_write_state3.read())) {
            tx_fifo_V_keep_V_1_data_in = tmp_keep_V_2_fu_1208_p3.read();
        } else {
            tx_fifo_V_keep_V_1_data_in =  (sc_lv<8>) ("XXXXXXXX");
        }
    } else {
        tx_fifo_V_keep_V_1_data_in =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void ethernet_axis_ip::thread_tx_fifo_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_keep_V_1_sel.read())) {
        tx_fifo_V_keep_V_1_data_out = tx_fifo_V_keep_V_1_payload_B.read();
    } else {
        tx_fifo_V_keep_V_1_data_out = tx_fifo_V_keep_V_1_payload_A.read();
    }
}

void ethernet_axis_ip::thread_tx_fifo_V_keep_V_1_load_A() {
    tx_fifo_V_keep_V_1_load_A = (tx_fifo_V_keep_V_1_state_cmp_full.read() & ~tx_fifo_V_keep_V_1_sel_wr.read());
}

void ethernet_axis_ip::thread_tx_fifo_V_keep_V_1_load_B() {
    tx_fifo_V_keep_V_1_load_B = (tx_fifo_V_keep_V_1_sel_wr.read() & tx_fifo_V_keep_V_1_state_cmp_full.read());
}

void ethernet_axis_ip::thread_tx_fifo_V_keep_V_1_sel() {
    tx_fifo_V_keep_V_1_sel = tx_fifo_V_keep_V_1_sel_rd.read();
}

void ethernet_axis_ip::thread_tx_fifo_V_keep_V_1_state_cmp_full() {
    tx_fifo_V_keep_V_1_state_cmp_full =  (sc_logic) ((!tx_fifo_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tx_fifo_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axis_ip::thread_tx_fifo_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op193_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op194_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        tx_fifo_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        tx_fifo_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axis_ip::thread_tx_fifo_V_keep_V_1_vld_out() {
    tx_fifo_V_keep_V_1_vld_out = tx_fifo_V_keep_V_1_state.read()[0];
}

void ethernet_axis_ip::thread_tx_fifo_V_last_V_1_ack_in() {
    tx_fifo_V_last_V_1_ack_in = tx_fifo_V_last_V_1_state.read()[1];
}

void ethernet_axis_ip::thread_tx_fifo_V_last_V_1_ack_out() {
    tx_fifo_V_last_V_1_ack_out = fifo_out_TREADY.read();
}

void ethernet_axis_ip::thread_tx_fifo_V_last_V_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op194_write_state3.read())) {
            tx_fifo_V_last_V_1_data_in = tmp_last_V_2_reg_1309_pp0_iter1_reg.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op193_write_state3.read())) {
            tx_fifo_V_last_V_1_data_in = ap_const_lv1_1;
        } else {
            tx_fifo_V_last_V_1_data_in =  (sc_lv<1>) ("X");
        }
    } else {
        tx_fifo_V_last_V_1_data_in =  (sc_lv<1>) ("X");
    }
}

void ethernet_axis_ip::thread_tx_fifo_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, tx_fifo_V_last_V_1_sel.read())) {
        tx_fifo_V_last_V_1_data_out = tx_fifo_V_last_V_1_payload_B.read();
    } else {
        tx_fifo_V_last_V_1_data_out = tx_fifo_V_last_V_1_payload_A.read();
    }
}

void ethernet_axis_ip::thread_tx_fifo_V_last_V_1_load_A() {
    tx_fifo_V_last_V_1_load_A = (tx_fifo_V_last_V_1_state_cmp_full.read() & ~tx_fifo_V_last_V_1_sel_wr.read());
}

void ethernet_axis_ip::thread_tx_fifo_V_last_V_1_load_B() {
    tx_fifo_V_last_V_1_load_B = (tx_fifo_V_last_V_1_sel_wr.read() & tx_fifo_V_last_V_1_state_cmp_full.read());
}

void ethernet_axis_ip::thread_tx_fifo_V_last_V_1_sel() {
    tx_fifo_V_last_V_1_sel = tx_fifo_V_last_V_1_sel_rd.read();
}

void ethernet_axis_ip::thread_tx_fifo_V_last_V_1_state_cmp_full() {
    tx_fifo_V_last_V_1_state_cmp_full =  (sc_logic) ((!tx_fifo_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tx_fifo_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axis_ip::thread_tx_fifo_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op193_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op194_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        tx_fifo_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        tx_fifo_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axis_ip::thread_tx_fifo_V_last_V_1_vld_out() {
    tx_fifo_V_last_V_1_vld_out = tx_fifo_V_last_V_1_state.read()[0];
}

void ethernet_axis_ip::thread_word_count_V_flag_1_s_fu_1006_p2() {
    word_count_V_flag_1_s_fu_1006_p2 = (data_in_TLAST.read() | ap_phi_mux_word_count_V_flag_i_phi_fu_303_p8.read());
}

void ethernet_axis_ip::thread_word_count_V_new_1_i_fu_1012_p3() {
    word_count_V_new_1_i_fu_1012_p3 = (!data_in_TLAST.read()[0].is_01())? sc_lv<2>(): ((data_in_TLAST.read()[0].to_bool())? ap_const_lv2_0: ap_phi_mux_word_count_V_new_i_phi_fu_320_p8.read());
}

void ethernet_axis_ip::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

