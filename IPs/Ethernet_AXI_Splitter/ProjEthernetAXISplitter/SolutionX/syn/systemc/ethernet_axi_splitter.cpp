// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ethernet_axi_splitter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ethernet_axi_splitter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ethernet_axi_splitter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> ethernet_axi_splitter::ap_ST_iter0_fsm_state1 = "1";
const sc_lv<2> ethernet_axi_splitter::ap_ST_iter1_fsm_state2 = "10";
const sc_lv<2> ethernet_axi_splitter::ap_ST_iter2_fsm_state3 = "10";
const sc_lv<2> ethernet_axi_splitter::ap_ST_iter3_fsm_state4 = "10";
const sc_lv<2> ethernet_axi_splitter::ap_ST_iter1_fsm_state0 = "1";
const sc_lv<2> ethernet_axi_splitter::ap_ST_iter2_fsm_state0 = "1";
const sc_lv<2> ethernet_axi_splitter::ap_ST_iter3_fsm_state0 = "1";
const bool ethernet_axi_splitter::ap_const_boolean_1 = true;
const sc_lv<1> ethernet_axi_splitter::ap_const_lv1_0 = "0";
const sc_lv<1> ethernet_axi_splitter::ap_const_lv1_1 = "1";
const sc_lv<2> ethernet_axi_splitter::ap_const_lv2_0 = "00";
const sc_lv<2> ethernet_axi_splitter::ap_const_lv2_2 = "10";
const sc_lv<2> ethernet_axi_splitter::ap_const_lv2_3 = "11";
const sc_lv<2> ethernet_axi_splitter::ap_const_lv2_1 = "1";
const sc_lv<16> ethernet_axi_splitter::ap_const_lv16_0 = "0000000000000000";
const sc_lv<8> ethernet_axi_splitter::ap_const_lv8_0 = "00000000";
const sc_lv<32> ethernet_axi_splitter::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> ethernet_axi_splitter::ap_const_lv32_1 = "1";
const sc_lv<32> ethernet_axi_splitter::ap_const_lv32_28 = "101000";
const sc_lv<32> ethernet_axi_splitter::ap_const_lv32_2F = "101111";
const sc_lv<32> ethernet_axi_splitter::ap_const_lv32_20 = "100000";
const sc_lv<32> ethernet_axi_splitter::ap_const_lv32_27 = "100111";
const sc_lv<32> ethernet_axi_splitter::ap_const_lv32_30 = "110000";
const sc_lv<32> ethernet_axi_splitter::ap_const_lv32_37 = "110111";
const sc_lv<48> ethernet_axi_splitter::ap_const_lv48_FFFFFFFFFFFF = "111111111111111111111111111111111111111111111111";
const sc_lv<16> ethernet_axi_splitter::ap_const_lv16_7A00 = "111101000000000";
const sc_lv<8> ethernet_axi_splitter::ap_const_lv8_1 = "1";
const sc_lv<8> ethernet_axi_splitter::ap_const_lv8_2 = "10";
const sc_lv<8> ethernet_axi_splitter::ap_const_lv8_3 = "11";
const sc_lv<8> ethernet_axi_splitter::ap_const_lv8_4 = "100";
const sc_lv<8> ethernet_axi_splitter::ap_const_lv8_5 = "101";
const sc_lv<8> ethernet_axi_splitter::ap_const_lv8_6 = "110";
const sc_lv<8> ethernet_axi_splitter::ap_const_lv8_7 = "111";
const bool ethernet_axi_splitter::ap_const_boolean_0 = false;

ethernet_axi_splitter::ethernet_axi_splitter(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_iter0_fsm_state1);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter1_fsm_state2);
    sensitive << ( ap_CS_iter1_fsm );

    SC_METHOD(thread_ap_CS_iter2_fsm_state3);
    sensitive << ( ap_CS_iter2_fsm );

    SC_METHOD(thread_ap_CS_iter3_fsm_state4);
    sensitive << ( ap_CS_iter3_fsm );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( data_in_TVALID );
    sensitive << ( ap_predicate_op12_read_state1 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op94_write_state3 );
    sensitive << ( ap_predicate_op95_write_state3 );
    sensitive << ( ap_predicate_op96_write_state3 );
    sensitive << ( ap_predicate_op97_write_state3 );
    sensitive << ( ap_predicate_op98_write_state3 );
    sensitive << ( ap_predicate_op99_write_state3 );
    sensitive << ( ap_predicate_op100_write_state3 );
    sensitive << ( ap_predicate_op101_write_state3 );
    sensitive << ( ap_predicate_op102_write_state3 );
    sensitive << ( ap_predicate_op106_write_state3 );
    sensitive << ( ap_predicate_op107_write_state3 );
    sensitive << ( ap_predicate_op108_write_state3 );
    sensitive << ( ap_predicate_op109_write_state3 );
    sensitive << ( ap_predicate_op110_write_state3 );
    sensitive << ( ap_predicate_op111_write_state3 );
    sensitive << ( ap_predicate_op112_write_state3 );
    sensitive << ( ap_predicate_op113_write_state3 );
    sensitive << ( ap_predicate_op114_write_state3 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op160_write_state4 );
    sensitive << ( ap_predicate_op163_write_state4 );
    sensitive << ( ap_predicate_op166_write_state4 );
    sensitive << ( ap_predicate_op169_write_state4 );
    sensitive << ( ap_predicate_op172_write_state4 );
    sensitive << ( ap_predicate_op175_write_state4 );
    sensitive << ( ap_predicate_op178_write_state4 );
    sensitive << ( ap_predicate_op181_write_state4 );
    sensitive << ( ap_predicate_op184_write_state4 );
    sensitive << ( ap_predicate_op189_write_state4 );
    sensitive << ( ap_predicate_op192_write_state4 );
    sensitive << ( ap_predicate_op195_write_state4 );
    sensitive << ( ap_predicate_op198_write_state4 );
    sensitive << ( ap_predicate_op201_write_state4 );
    sensitive << ( ap_predicate_op204_write_state4 );
    sensitive << ( ap_predicate_op207_write_state4 );
    sensitive << ( ap_predicate_op210_write_state4 );
    sensitive << ( ap_predicate_op213_write_state4 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );

    SC_METHOD(thread_ap_condition_1639);
    sensitive << ( fsm_state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( tmp_nbreadreq_fu_164_p5 );

    SC_METHOD(thread_ap_condition_2217);
    sensitive << ( data_in_TVALID );
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_predicate_op12_read_state1 );

    SC_METHOD(thread_ap_condition_2233);
    sensitive << ( data_in_TVALID );
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( fsm_state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( tmp_nbreadreq_fu_164_p5 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_predicate_op12_read_state1 );

    SC_METHOD(thread_ap_condition_2423);
    sensitive << ( fsm_state_V );
    sensitive << ( tmp_nbreadreq_fu_164_p5 );
    sensitive << ( tmp_last_V_fu_404_p1 );

    SC_METHOD(thread_ap_condition_2692);
    sensitive << ( cond_fu_412_p2 );
    sensitive << ( tmp_7_fu_418_p2 );
    sensitive << ( tmp_3_fu_424_p2 );

    SC_METHOD(thread_ap_phi_mux_word_count_V_flag_1_phi_fu_320_p4);
    sensitive << ( cond_fu_412_p2 );
    sensitive << ( ap_phi_mux_word_count_V_flag_phi_fu_306_p6 );
    sensitive << ( ap_phi_reg_pp0_iter0_word_count_V_flag_1_reg_317 );
    sensitive << ( ap_condition_1639 );

    SC_METHOD(thread_ap_phi_mux_word_count_V_flag_2_phi_fu_342_p4);
    sensitive << ( tmp_last_V_fu_404_p1 );
    sensitive << ( ap_phi_mux_word_count_V_flag_1_phi_fu_320_p4 );
    sensitive << ( ap_phi_reg_pp0_iter0_word_count_V_flag_2_reg_339 );
    sensitive << ( ap_condition_1639 );

    SC_METHOD(thread_ap_phi_mux_word_count_V_flag_phi_fu_306_p6);
    sensitive << ( fsm_state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( tmp_nbreadreq_fu_164_p5 );
    sensitive << ( cond_fu_412_p2 );
    sensitive << ( tmp_7_fu_418_p2 );
    sensitive << ( tmp_3_fu_424_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_word_count_V_flag_reg_303 );

    SC_METHOD(thread_ap_phi_mux_word_count_V_new_1_phi_fu_331_p4);
    sensitive << ( cond_fu_412_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_word_count_V_new_1_reg_328 );
    sensitive << ( ap_condition_1639 );

    SC_METHOD(thread_ap_phi_mux_word_count_V_new_2_phi_fu_354_p4);
    sensitive << ( tmp_last_V_fu_404_p1 );
    sensitive << ( ap_phi_mux_word_count_V_new_1_phi_fu_331_p4 );
    sensitive << ( ap_phi_reg_pp0_iter0_word_count_V_new_2_reg_351 );
    sensitive << ( ap_condition_1639 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_ethernet_axi_id_V_lo_1_reg_373);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_mac_type_V_loc_1_reg_362);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_word_count_V_flag_1_reg_317);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_word_count_V_flag_2_reg_339);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_word_count_V_flag_reg_303);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_word_count_V_new_1_reg_328);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_word_count_V_new_2_reg_351);

    SC_METHOD(thread_ap_predicate_op100_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_16_reg_771 );

    SC_METHOD(thread_ap_predicate_op101_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( tmp_14_reg_767 );

    SC_METHOD(thread_ap_predicate_op102_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );

    SC_METHOD(thread_ap_predicate_op106_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_8_reg_811 );
    sensitive << ( tmp_1_reg_815 );
    sensitive << ( tmp_5_reg_819 );
    sensitive << ( tmp_11_reg_823 );
    sensitive << ( tmp_13_reg_827 );
    sensitive << ( tmp_15_reg_831 );
    sensitive << ( tmp_17_reg_835 );

    SC_METHOD(thread_ap_predicate_op107_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_8_reg_811 );
    sensitive << ( tmp_1_reg_815 );
    sensitive << ( tmp_5_reg_819 );
    sensitive << ( tmp_11_reg_823 );
    sensitive << ( tmp_13_reg_827 );
    sensitive << ( tmp_15_reg_831 );

    SC_METHOD(thread_ap_predicate_op108_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_8_reg_811 );
    sensitive << ( tmp_1_reg_815 );
    sensitive << ( tmp_5_reg_819 );
    sensitive << ( tmp_11_reg_823 );
    sensitive << ( tmp_13_reg_827 );

    SC_METHOD(thread_ap_predicate_op109_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_8_reg_811 );
    sensitive << ( tmp_1_reg_815 );
    sensitive << ( tmp_5_reg_819 );
    sensitive << ( tmp_11_reg_823 );

    SC_METHOD(thread_ap_predicate_op110_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_8_reg_811 );
    sensitive << ( tmp_1_reg_815 );
    sensitive << ( tmp_5_reg_819 );

    SC_METHOD(thread_ap_predicate_op111_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_8_reg_811 );
    sensitive << ( tmp_1_reg_815 );

    SC_METHOD(thread_ap_predicate_op112_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_8_reg_811 );

    SC_METHOD(thread_ap_predicate_op113_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_9_reg_807 );

    SC_METHOD(thread_ap_predicate_op114_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );

    SC_METHOD(thread_ap_predicate_op12_read_state1);
    sensitive << ( fsm_state_V );
    sensitive << ( tmp_nbreadreq_fu_164_p5 );

    SC_METHOD(thread_ap_predicate_op160_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );
    sensitive << ( tmp_18_reg_775_pp0_iter2_reg );
    sensitive << ( tmp_19_reg_779_pp0_iter2_reg );
    sensitive << ( tmp_20_reg_783_pp0_iter2_reg );
    sensitive << ( tmp_21_reg_787_pp0_iter2_reg );
    sensitive << ( tmp_22_reg_791_pp0_iter2_reg );
    sensitive << ( tmp_23_reg_795_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op163_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );
    sensitive << ( tmp_18_reg_775_pp0_iter2_reg );
    sensitive << ( tmp_19_reg_779_pp0_iter2_reg );
    sensitive << ( tmp_20_reg_783_pp0_iter2_reg );
    sensitive << ( tmp_21_reg_787_pp0_iter2_reg );
    sensitive << ( tmp_22_reg_791_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op166_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );
    sensitive << ( tmp_18_reg_775_pp0_iter2_reg );
    sensitive << ( tmp_19_reg_779_pp0_iter2_reg );
    sensitive << ( tmp_20_reg_783_pp0_iter2_reg );
    sensitive << ( tmp_21_reg_787_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op169_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );
    sensitive << ( tmp_18_reg_775_pp0_iter2_reg );
    sensitive << ( tmp_19_reg_779_pp0_iter2_reg );
    sensitive << ( tmp_20_reg_783_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op172_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );
    sensitive << ( tmp_18_reg_775_pp0_iter2_reg );
    sensitive << ( tmp_19_reg_779_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op175_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );
    sensitive << ( tmp_18_reg_775_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op178_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op181_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op184_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op189_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );
    sensitive << ( tmp_1_reg_815_pp0_iter2_reg );
    sensitive << ( tmp_5_reg_819_pp0_iter2_reg );
    sensitive << ( tmp_11_reg_823_pp0_iter2_reg );
    sensitive << ( tmp_13_reg_827_pp0_iter2_reg );
    sensitive << ( tmp_15_reg_831_pp0_iter2_reg );
    sensitive << ( tmp_17_reg_835_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op192_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );
    sensitive << ( tmp_1_reg_815_pp0_iter2_reg );
    sensitive << ( tmp_5_reg_819_pp0_iter2_reg );
    sensitive << ( tmp_11_reg_823_pp0_iter2_reg );
    sensitive << ( tmp_13_reg_827_pp0_iter2_reg );
    sensitive << ( tmp_15_reg_831_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op195_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );
    sensitive << ( tmp_1_reg_815_pp0_iter2_reg );
    sensitive << ( tmp_5_reg_819_pp0_iter2_reg );
    sensitive << ( tmp_11_reg_823_pp0_iter2_reg );
    sensitive << ( tmp_13_reg_827_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op198_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );
    sensitive << ( tmp_1_reg_815_pp0_iter2_reg );
    sensitive << ( tmp_5_reg_819_pp0_iter2_reg );
    sensitive << ( tmp_11_reg_823_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op201_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );
    sensitive << ( tmp_1_reg_815_pp0_iter2_reg );
    sensitive << ( tmp_5_reg_819_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op204_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );
    sensitive << ( tmp_1_reg_815_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op207_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op210_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op213_write_state4);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );

    SC_METHOD(thread_ap_predicate_op94_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_16_reg_771 );
    sensitive << ( tmp_18_reg_775 );
    sensitive << ( tmp_19_reg_779 );
    sensitive << ( tmp_20_reg_783 );
    sensitive << ( tmp_21_reg_787 );
    sensitive << ( tmp_22_reg_791 );
    sensitive << ( tmp_23_reg_795 );

    SC_METHOD(thread_ap_predicate_op95_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_16_reg_771 );
    sensitive << ( tmp_18_reg_775 );
    sensitive << ( tmp_19_reg_779 );
    sensitive << ( tmp_20_reg_783 );
    sensitive << ( tmp_21_reg_787 );
    sensitive << ( tmp_22_reg_791 );

    SC_METHOD(thread_ap_predicate_op96_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_16_reg_771 );
    sensitive << ( tmp_18_reg_775 );
    sensitive << ( tmp_19_reg_779 );
    sensitive << ( tmp_20_reg_783 );
    sensitive << ( tmp_21_reg_787 );

    SC_METHOD(thread_ap_predicate_op97_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_16_reg_771 );
    sensitive << ( tmp_18_reg_775 );
    sensitive << ( tmp_19_reg_779 );
    sensitive << ( tmp_20_reg_783 );

    SC_METHOD(thread_ap_predicate_op98_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_16_reg_771 );
    sensitive << ( tmp_18_reg_775 );
    sensitive << ( tmp_19_reg_779 );

    SC_METHOD(thread_ap_predicate_op99_write_state3);
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_16_reg_771 );
    sensitive << ( tmp_18_reg_775 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_cond_fu_412_p2);
    sensitive << ( data_in_TVALID );
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( fsm_state_V );
    sensitive << ( word_count_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( tmp_nbreadreq_fu_164_p5 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_predicate_op12_read_state1 );

    SC_METHOD(thread_cond_reg_739_pp0_iter0_reg);
    sensitive << ( cond_reg_739 );

    SC_METHOD(thread_data_in_TDATA_blk_n);
    sensitive << ( data_in_TVALID );
    sensitive << ( fsm_state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( tmp_nbreadreq_fu_164_p5 );

    SC_METHOD(thread_data_in_TREADY);
    sensitive << ( data_in_TVALID );
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_predicate_op12_read_state1 );

    SC_METHOD(thread_data_out_TDATA);
    sensitive << ( data_out_V_data_V_1_data_out );

    SC_METHOD(thread_data_out_TDATA_blk_n);
    sensitive << ( data_out_V_data_V_1_state );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771 );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811 );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );
    sensitive << ( tmp_18_reg_775 );
    sensitive << ( tmp_18_reg_775_pp0_iter2_reg );
    sensitive << ( tmp_1_reg_815 );
    sensitive << ( tmp_1_reg_815_pp0_iter2_reg );
    sensitive << ( tmp_19_reg_779 );
    sensitive << ( tmp_19_reg_779_pp0_iter2_reg );
    sensitive << ( tmp_5_reg_819 );
    sensitive << ( tmp_5_reg_819_pp0_iter2_reg );
    sensitive << ( tmp_20_reg_783 );
    sensitive << ( tmp_20_reg_783_pp0_iter2_reg );
    sensitive << ( tmp_11_reg_823 );
    sensitive << ( tmp_11_reg_823_pp0_iter2_reg );
    sensitive << ( tmp_21_reg_787 );
    sensitive << ( tmp_21_reg_787_pp0_iter2_reg );
    sensitive << ( tmp_13_reg_827 );
    sensitive << ( tmp_13_reg_827_pp0_iter2_reg );
    sensitive << ( tmp_22_reg_791 );
    sensitive << ( tmp_22_reg_791_pp0_iter2_reg );
    sensitive << ( tmp_15_reg_831 );
    sensitive << ( tmp_15_reg_831_pp0_iter2_reg );
    sensitive << ( tmp_23_reg_795 );
    sensitive << ( tmp_23_reg_795_pp0_iter2_reg );
    sensitive << ( tmp_17_reg_835 );
    sensitive << ( tmp_17_reg_835_pp0_iter2_reg );

    SC_METHOD(thread_data_out_TKEEP);
    sensitive << ( data_out_V_keep_V_1_data_out );

    SC_METHOD(thread_data_out_TLAST);
    sensitive << ( data_out_V_last_V_1_data_out );

    SC_METHOD(thread_data_out_TVALID);
    sensitive << ( data_out_V_last_V_1_state );

    SC_METHOD(thread_data_out_V_data_V_1_ack_in);
    sensitive << ( data_out_V_data_V_1_state );

    SC_METHOD(thread_data_out_V_data_V_1_ack_out);
    sensitive << ( data_out_TREADY );

    SC_METHOD(thread_data_out_V_data_V_1_data_out);
    sensitive << ( data_out_V_data_V_1_payload_A );
    sensitive << ( data_out_V_data_V_1_payload_B );
    sensitive << ( data_out_V_data_V_1_sel );

    SC_METHOD(thread_data_out_V_data_V_1_load_A);
    sensitive << ( data_out_V_data_V_1_sel_wr );
    sensitive << ( data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_data_V_1_load_B);
    sensitive << ( data_out_V_data_V_1_sel_wr );
    sensitive << ( data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_data_V_1_sel);
    sensitive << ( data_out_V_data_V_1_sel_rd );

    SC_METHOD(thread_data_out_V_data_V_1_state_cmp_full);
    sensitive << ( data_out_V_data_V_1_state );

    SC_METHOD(thread_data_out_V_data_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op94_write_state3 );
    sensitive << ( ap_predicate_op106_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_data_out_V_data_V_1_vld_out);
    sensitive << ( data_out_V_data_V_1_state );

    SC_METHOD(thread_data_out_V_keep_V_1_ack_in);
    sensitive << ( data_out_V_keep_V_1_state );

    SC_METHOD(thread_data_out_V_keep_V_1_ack_out);
    sensitive << ( data_out_TREADY );

    SC_METHOD(thread_data_out_V_keep_V_1_data_out);
    sensitive << ( data_out_V_keep_V_1_payload_A );
    sensitive << ( data_out_V_keep_V_1_payload_B );
    sensitive << ( data_out_V_keep_V_1_sel );

    SC_METHOD(thread_data_out_V_keep_V_1_load_A);
    sensitive << ( data_out_V_keep_V_1_sel_wr );
    sensitive << ( data_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_keep_V_1_load_B);
    sensitive << ( data_out_V_keep_V_1_sel_wr );
    sensitive << ( data_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_keep_V_1_sel);
    sensitive << ( data_out_V_keep_V_1_sel_rd );

    SC_METHOD(thread_data_out_V_keep_V_1_state_cmp_full);
    sensitive << ( data_out_V_keep_V_1_state );

    SC_METHOD(thread_data_out_V_keep_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op94_write_state3 );
    sensitive << ( ap_predicate_op106_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_data_out_V_keep_V_1_vld_out);
    sensitive << ( data_out_V_keep_V_1_state );

    SC_METHOD(thread_data_out_V_last_V_1_ack_in);
    sensitive << ( data_out_V_last_V_1_state );

    SC_METHOD(thread_data_out_V_last_V_1_ack_out);
    sensitive << ( data_out_TREADY );

    SC_METHOD(thread_data_out_V_last_V_1_data_out);
    sensitive << ( data_out_V_last_V_1_payload_A );
    sensitive << ( data_out_V_last_V_1_payload_B );
    sensitive << ( data_out_V_last_V_1_sel );

    SC_METHOD(thread_data_out_V_last_V_1_load_A);
    sensitive << ( data_out_V_last_V_1_sel_wr );
    sensitive << ( data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_last_V_1_load_B);
    sensitive << ( data_out_V_last_V_1_sel_wr );
    sensitive << ( data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_last_V_1_sel);
    sensitive << ( data_out_V_last_V_1_sel_rd );

    SC_METHOD(thread_data_out_V_last_V_1_state_cmp_full);
    sensitive << ( data_out_V_last_V_1_state );

    SC_METHOD(thread_data_out_V_last_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op94_write_state3 );
    sensitive << ( ap_predicate_op106_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_data_out_V_last_V_1_vld_out);
    sensitive << ( data_out_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_0_TDATA);
    sensitive << ( ethernet_axi_0_V_data_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_0_TDATA_blk_n);
    sensitive << ( ethernet_axi_0_V_data_V_1_state );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );

    SC_METHOD(thread_ethernet_axi_0_TKEEP);
    sensitive << ( ethernet_axi_0_V_keep_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_0_TLAST);
    sensitive << ( ethernet_axi_0_V_last_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_0_TVALID);
    sensitive << ( ethernet_axi_0_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_0_V_data_V_1_ack_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_0_V_data_V_1_ack_out);
    sensitive << ( ethernet_axi_0_TREADY );

    SC_METHOD(thread_ethernet_axi_0_V_data_V_1_data_out);
    sensitive << ( ethernet_axi_0_V_data_V_1_payload_A );
    sensitive << ( ethernet_axi_0_V_data_V_1_payload_B );
    sensitive << ( ethernet_axi_0_V_data_V_1_sel );

    SC_METHOD(thread_ethernet_axi_0_V_data_V_1_load_A);
    sensitive << ( ethernet_axi_0_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_0_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_0_V_data_V_1_load_B);
    sensitive << ( ethernet_axi_0_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_0_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_0_V_data_V_1_sel);
    sensitive << ( ethernet_axi_0_V_data_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_0_V_data_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_0_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_0_V_data_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op102_write_state3 );
    sensitive << ( ap_predicate_op114_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_0_V_data_V_1_vld_out);
    sensitive << ( ethernet_axi_0_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_0_V_keep_V_1_ack_in);
    sensitive << ( ethernet_axi_0_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_0_V_keep_V_1_ack_out);
    sensitive << ( ethernet_axi_0_TREADY );

    SC_METHOD(thread_ethernet_axi_0_V_keep_V_1_data_out);
    sensitive << ( ethernet_axi_0_V_keep_V_1_payload_A );
    sensitive << ( ethernet_axi_0_V_keep_V_1_payload_B );
    sensitive << ( ethernet_axi_0_V_keep_V_1_sel );

    SC_METHOD(thread_ethernet_axi_0_V_keep_V_1_load_A);
    sensitive << ( ethernet_axi_0_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_0_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_0_V_keep_V_1_load_B);
    sensitive << ( ethernet_axi_0_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_0_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_0_V_keep_V_1_sel);
    sensitive << ( ethernet_axi_0_V_keep_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_0_V_keep_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_0_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_0_V_keep_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op102_write_state3 );
    sensitive << ( ap_predicate_op114_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_0_V_keep_V_1_vld_out);
    sensitive << ( ethernet_axi_0_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_0_V_last_V_1_ack_in);
    sensitive << ( ethernet_axi_0_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_0_V_last_V_1_ack_out);
    sensitive << ( ethernet_axi_0_TREADY );

    SC_METHOD(thread_ethernet_axi_0_V_last_V_1_data_out);
    sensitive << ( ethernet_axi_0_V_last_V_1_payload_A );
    sensitive << ( ethernet_axi_0_V_last_V_1_payload_B );
    sensitive << ( ethernet_axi_0_V_last_V_1_sel );

    SC_METHOD(thread_ethernet_axi_0_V_last_V_1_load_A);
    sensitive << ( ethernet_axi_0_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_0_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_0_V_last_V_1_load_B);
    sensitive << ( ethernet_axi_0_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_0_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_0_V_last_V_1_sel);
    sensitive << ( ethernet_axi_0_V_last_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_0_V_last_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_0_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_0_V_last_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op102_write_state3 );
    sensitive << ( ap_predicate_op114_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_0_V_last_V_1_vld_out);
    sensitive << ( ethernet_axi_0_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_1_TDATA);
    sensitive << ( ethernet_axi_1_V_data_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_1_TDATA_blk_n);
    sensitive << ( ethernet_axi_1_V_data_V_1_state );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );

    SC_METHOD(thread_ethernet_axi_1_TKEEP);
    sensitive << ( ethernet_axi_1_V_keep_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_1_TLAST);
    sensitive << ( ethernet_axi_1_V_last_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_1_TVALID);
    sensitive << ( ethernet_axi_1_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_1_V_data_V_1_ack_in);
    sensitive << ( ethernet_axi_1_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_1_V_data_V_1_ack_out);
    sensitive << ( ethernet_axi_1_TREADY );

    SC_METHOD(thread_ethernet_axi_1_V_data_V_1_data_out);
    sensitive << ( ethernet_axi_1_V_data_V_1_payload_A );
    sensitive << ( ethernet_axi_1_V_data_V_1_payload_B );
    sensitive << ( ethernet_axi_1_V_data_V_1_sel );

    SC_METHOD(thread_ethernet_axi_1_V_data_V_1_load_A);
    sensitive << ( ethernet_axi_1_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_1_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_1_V_data_V_1_load_B);
    sensitive << ( ethernet_axi_1_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_1_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_1_V_data_V_1_sel);
    sensitive << ( ethernet_axi_1_V_data_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_1_V_data_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_1_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_1_V_data_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op101_write_state3 );
    sensitive << ( ap_predicate_op113_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_1_V_data_V_1_vld_out);
    sensitive << ( ethernet_axi_1_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_1_V_keep_V_1_ack_in);
    sensitive << ( ethernet_axi_1_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_1_V_keep_V_1_ack_out);
    sensitive << ( ethernet_axi_1_TREADY );

    SC_METHOD(thread_ethernet_axi_1_V_keep_V_1_data_out);
    sensitive << ( ethernet_axi_1_V_keep_V_1_payload_A );
    sensitive << ( ethernet_axi_1_V_keep_V_1_payload_B );
    sensitive << ( ethernet_axi_1_V_keep_V_1_sel );

    SC_METHOD(thread_ethernet_axi_1_V_keep_V_1_load_A);
    sensitive << ( ethernet_axi_1_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_1_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_1_V_keep_V_1_load_B);
    sensitive << ( ethernet_axi_1_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_1_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_1_V_keep_V_1_sel);
    sensitive << ( ethernet_axi_1_V_keep_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_1_V_keep_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_1_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_1_V_keep_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op101_write_state3 );
    sensitive << ( ap_predicate_op113_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_1_V_keep_V_1_vld_out);
    sensitive << ( ethernet_axi_1_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_1_V_last_V_1_ack_in);
    sensitive << ( ethernet_axi_1_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_1_V_last_V_1_ack_out);
    sensitive << ( ethernet_axi_1_TREADY );

    SC_METHOD(thread_ethernet_axi_1_V_last_V_1_data_out);
    sensitive << ( ethernet_axi_1_V_last_V_1_payload_A );
    sensitive << ( ethernet_axi_1_V_last_V_1_payload_B );
    sensitive << ( ethernet_axi_1_V_last_V_1_sel );

    SC_METHOD(thread_ethernet_axi_1_V_last_V_1_load_A);
    sensitive << ( ethernet_axi_1_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_1_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_1_V_last_V_1_load_B);
    sensitive << ( ethernet_axi_1_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_1_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_1_V_last_V_1_sel);
    sensitive << ( ethernet_axi_1_V_last_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_1_V_last_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_1_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_1_V_last_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op101_write_state3 );
    sensitive << ( ap_predicate_op113_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_1_V_last_V_1_vld_out);
    sensitive << ( ethernet_axi_1_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_2_TDATA);
    sensitive << ( ethernet_axi_2_V_data_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_2_TDATA_blk_n);
    sensitive << ( ethernet_axi_2_V_data_V_1_state );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771 );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811 );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );

    SC_METHOD(thread_ethernet_axi_2_TKEEP);
    sensitive << ( ethernet_axi_2_V_keep_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_2_TLAST);
    sensitive << ( ethernet_axi_2_V_last_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_2_TVALID);
    sensitive << ( ethernet_axi_2_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_2_V_data_V_1_ack_in);
    sensitive << ( ethernet_axi_2_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_2_V_data_V_1_ack_out);
    sensitive << ( ethernet_axi_2_TREADY );

    SC_METHOD(thread_ethernet_axi_2_V_data_V_1_data_out);
    sensitive << ( ethernet_axi_2_V_data_V_1_payload_A );
    sensitive << ( ethernet_axi_2_V_data_V_1_payload_B );
    sensitive << ( ethernet_axi_2_V_data_V_1_sel );

    SC_METHOD(thread_ethernet_axi_2_V_data_V_1_load_A);
    sensitive << ( ethernet_axi_2_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_2_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_2_V_data_V_1_load_B);
    sensitive << ( ethernet_axi_2_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_2_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_2_V_data_V_1_sel);
    sensitive << ( ethernet_axi_2_V_data_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_2_V_data_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_2_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_2_V_data_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op100_write_state3 );
    sensitive << ( ap_predicate_op112_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_2_V_data_V_1_vld_out);
    sensitive << ( ethernet_axi_2_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_2_V_keep_V_1_ack_in);
    sensitive << ( ethernet_axi_2_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_2_V_keep_V_1_ack_out);
    sensitive << ( ethernet_axi_2_TREADY );

    SC_METHOD(thread_ethernet_axi_2_V_keep_V_1_data_out);
    sensitive << ( ethernet_axi_2_V_keep_V_1_payload_A );
    sensitive << ( ethernet_axi_2_V_keep_V_1_payload_B );
    sensitive << ( ethernet_axi_2_V_keep_V_1_sel );

    SC_METHOD(thread_ethernet_axi_2_V_keep_V_1_load_A);
    sensitive << ( ethernet_axi_2_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_2_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_2_V_keep_V_1_load_B);
    sensitive << ( ethernet_axi_2_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_2_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_2_V_keep_V_1_sel);
    sensitive << ( ethernet_axi_2_V_keep_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_2_V_keep_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_2_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_2_V_keep_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op100_write_state3 );
    sensitive << ( ap_predicate_op112_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_2_V_keep_V_1_vld_out);
    sensitive << ( ethernet_axi_2_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_2_V_last_V_1_ack_in);
    sensitive << ( ethernet_axi_2_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_2_V_last_V_1_ack_out);
    sensitive << ( ethernet_axi_2_TREADY );

    SC_METHOD(thread_ethernet_axi_2_V_last_V_1_data_out);
    sensitive << ( ethernet_axi_2_V_last_V_1_payload_A );
    sensitive << ( ethernet_axi_2_V_last_V_1_payload_B );
    sensitive << ( ethernet_axi_2_V_last_V_1_sel );

    SC_METHOD(thread_ethernet_axi_2_V_last_V_1_load_A);
    sensitive << ( ethernet_axi_2_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_2_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_2_V_last_V_1_load_B);
    sensitive << ( ethernet_axi_2_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_2_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_2_V_last_V_1_sel);
    sensitive << ( ethernet_axi_2_V_last_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_2_V_last_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_2_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_2_V_last_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op100_write_state3 );
    sensitive << ( ap_predicate_op112_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_2_V_last_V_1_vld_out);
    sensitive << ( ethernet_axi_2_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_3_TDATA);
    sensitive << ( ethernet_axi_3_V_data_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_3_TDATA_blk_n);
    sensitive << ( ethernet_axi_3_V_data_V_1_state );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771 );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811 );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );
    sensitive << ( tmp_18_reg_775 );
    sensitive << ( tmp_18_reg_775_pp0_iter2_reg );
    sensitive << ( tmp_1_reg_815 );
    sensitive << ( tmp_1_reg_815_pp0_iter2_reg );

    SC_METHOD(thread_ethernet_axi_3_TKEEP);
    sensitive << ( ethernet_axi_3_V_keep_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_3_TLAST);
    sensitive << ( ethernet_axi_3_V_last_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_3_TVALID);
    sensitive << ( ethernet_axi_3_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_3_V_data_V_1_ack_in);
    sensitive << ( ethernet_axi_3_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_3_V_data_V_1_ack_out);
    sensitive << ( ethernet_axi_3_TREADY );

    SC_METHOD(thread_ethernet_axi_3_V_data_V_1_data_out);
    sensitive << ( ethernet_axi_3_V_data_V_1_payload_A );
    sensitive << ( ethernet_axi_3_V_data_V_1_payload_B );
    sensitive << ( ethernet_axi_3_V_data_V_1_sel );

    SC_METHOD(thread_ethernet_axi_3_V_data_V_1_load_A);
    sensitive << ( ethernet_axi_3_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_3_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_3_V_data_V_1_load_B);
    sensitive << ( ethernet_axi_3_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_3_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_3_V_data_V_1_sel);
    sensitive << ( ethernet_axi_3_V_data_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_3_V_data_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_3_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_3_V_data_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op99_write_state3 );
    sensitive << ( ap_predicate_op111_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_3_V_data_V_1_vld_out);
    sensitive << ( ethernet_axi_3_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_3_V_keep_V_1_ack_in);
    sensitive << ( ethernet_axi_3_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_3_V_keep_V_1_ack_out);
    sensitive << ( ethernet_axi_3_TREADY );

    SC_METHOD(thread_ethernet_axi_3_V_keep_V_1_data_out);
    sensitive << ( ethernet_axi_3_V_keep_V_1_payload_A );
    sensitive << ( ethernet_axi_3_V_keep_V_1_payload_B );
    sensitive << ( ethernet_axi_3_V_keep_V_1_sel );

    SC_METHOD(thread_ethernet_axi_3_V_keep_V_1_load_A);
    sensitive << ( ethernet_axi_3_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_3_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_3_V_keep_V_1_load_B);
    sensitive << ( ethernet_axi_3_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_3_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_3_V_keep_V_1_sel);
    sensitive << ( ethernet_axi_3_V_keep_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_3_V_keep_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_3_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_3_V_keep_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op99_write_state3 );
    sensitive << ( ap_predicate_op111_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_3_V_keep_V_1_vld_out);
    sensitive << ( ethernet_axi_3_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_3_V_last_V_1_ack_in);
    sensitive << ( ethernet_axi_3_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_3_V_last_V_1_ack_out);
    sensitive << ( ethernet_axi_3_TREADY );

    SC_METHOD(thread_ethernet_axi_3_V_last_V_1_data_out);
    sensitive << ( ethernet_axi_3_V_last_V_1_payload_A );
    sensitive << ( ethernet_axi_3_V_last_V_1_payload_B );
    sensitive << ( ethernet_axi_3_V_last_V_1_sel );

    SC_METHOD(thread_ethernet_axi_3_V_last_V_1_load_A);
    sensitive << ( ethernet_axi_3_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_3_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_3_V_last_V_1_load_B);
    sensitive << ( ethernet_axi_3_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_3_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_3_V_last_V_1_sel);
    sensitive << ( ethernet_axi_3_V_last_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_3_V_last_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_3_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_3_V_last_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op99_write_state3 );
    sensitive << ( ap_predicate_op111_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_3_V_last_V_1_vld_out);
    sensitive << ( ethernet_axi_3_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_4_TDATA);
    sensitive << ( ethernet_axi_4_V_data_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_4_TDATA_blk_n);
    sensitive << ( ethernet_axi_4_V_data_V_1_state );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771 );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811 );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );
    sensitive << ( tmp_18_reg_775 );
    sensitive << ( tmp_18_reg_775_pp0_iter2_reg );
    sensitive << ( tmp_1_reg_815 );
    sensitive << ( tmp_1_reg_815_pp0_iter2_reg );
    sensitive << ( tmp_19_reg_779 );
    sensitive << ( tmp_19_reg_779_pp0_iter2_reg );
    sensitive << ( tmp_5_reg_819 );
    sensitive << ( tmp_5_reg_819_pp0_iter2_reg );

    SC_METHOD(thread_ethernet_axi_4_TKEEP);
    sensitive << ( ethernet_axi_4_V_keep_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_4_TLAST);
    sensitive << ( ethernet_axi_4_V_last_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_4_TVALID);
    sensitive << ( ethernet_axi_4_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_4_V_data_V_1_ack_in);
    sensitive << ( ethernet_axi_4_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_4_V_data_V_1_ack_out);
    sensitive << ( ethernet_axi_4_TREADY );

    SC_METHOD(thread_ethernet_axi_4_V_data_V_1_data_out);
    sensitive << ( ethernet_axi_4_V_data_V_1_payload_A );
    sensitive << ( ethernet_axi_4_V_data_V_1_payload_B );
    sensitive << ( ethernet_axi_4_V_data_V_1_sel );

    SC_METHOD(thread_ethernet_axi_4_V_data_V_1_load_A);
    sensitive << ( ethernet_axi_4_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_4_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_4_V_data_V_1_load_B);
    sensitive << ( ethernet_axi_4_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_4_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_4_V_data_V_1_sel);
    sensitive << ( ethernet_axi_4_V_data_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_4_V_data_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_4_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_4_V_data_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op98_write_state3 );
    sensitive << ( ap_predicate_op110_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_4_V_data_V_1_vld_out);
    sensitive << ( ethernet_axi_4_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_4_V_keep_V_1_ack_in);
    sensitive << ( ethernet_axi_4_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_4_V_keep_V_1_ack_out);
    sensitive << ( ethernet_axi_4_TREADY );

    SC_METHOD(thread_ethernet_axi_4_V_keep_V_1_data_out);
    sensitive << ( ethernet_axi_4_V_keep_V_1_payload_A );
    sensitive << ( ethernet_axi_4_V_keep_V_1_payload_B );
    sensitive << ( ethernet_axi_4_V_keep_V_1_sel );

    SC_METHOD(thread_ethernet_axi_4_V_keep_V_1_load_A);
    sensitive << ( ethernet_axi_4_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_4_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_4_V_keep_V_1_load_B);
    sensitive << ( ethernet_axi_4_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_4_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_4_V_keep_V_1_sel);
    sensitive << ( ethernet_axi_4_V_keep_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_4_V_keep_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_4_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_4_V_keep_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op98_write_state3 );
    sensitive << ( ap_predicate_op110_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_4_V_keep_V_1_vld_out);
    sensitive << ( ethernet_axi_4_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_4_V_last_V_1_ack_in);
    sensitive << ( ethernet_axi_4_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_4_V_last_V_1_ack_out);
    sensitive << ( ethernet_axi_4_TREADY );

    SC_METHOD(thread_ethernet_axi_4_V_last_V_1_data_out);
    sensitive << ( ethernet_axi_4_V_last_V_1_payload_A );
    sensitive << ( ethernet_axi_4_V_last_V_1_payload_B );
    sensitive << ( ethernet_axi_4_V_last_V_1_sel );

    SC_METHOD(thread_ethernet_axi_4_V_last_V_1_load_A);
    sensitive << ( ethernet_axi_4_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_4_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_4_V_last_V_1_load_B);
    sensitive << ( ethernet_axi_4_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_4_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_4_V_last_V_1_sel);
    sensitive << ( ethernet_axi_4_V_last_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_4_V_last_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_4_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_4_V_last_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op98_write_state3 );
    sensitive << ( ap_predicate_op110_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_4_V_last_V_1_vld_out);
    sensitive << ( ethernet_axi_4_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_5_TDATA);
    sensitive << ( ethernet_axi_5_V_data_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_5_TDATA_blk_n);
    sensitive << ( ethernet_axi_5_V_data_V_1_state );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771 );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811 );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );
    sensitive << ( tmp_18_reg_775 );
    sensitive << ( tmp_18_reg_775_pp0_iter2_reg );
    sensitive << ( tmp_1_reg_815 );
    sensitive << ( tmp_1_reg_815_pp0_iter2_reg );
    sensitive << ( tmp_19_reg_779 );
    sensitive << ( tmp_19_reg_779_pp0_iter2_reg );
    sensitive << ( tmp_5_reg_819 );
    sensitive << ( tmp_5_reg_819_pp0_iter2_reg );
    sensitive << ( tmp_20_reg_783 );
    sensitive << ( tmp_20_reg_783_pp0_iter2_reg );
    sensitive << ( tmp_11_reg_823 );
    sensitive << ( tmp_11_reg_823_pp0_iter2_reg );

    SC_METHOD(thread_ethernet_axi_5_TKEEP);
    sensitive << ( ethernet_axi_5_V_keep_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_5_TLAST);
    sensitive << ( ethernet_axi_5_V_last_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_5_TVALID);
    sensitive << ( ethernet_axi_5_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_5_V_data_V_1_ack_in);
    sensitive << ( ethernet_axi_5_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_5_V_data_V_1_ack_out);
    sensitive << ( ethernet_axi_5_TREADY );

    SC_METHOD(thread_ethernet_axi_5_V_data_V_1_data_out);
    sensitive << ( ethernet_axi_5_V_data_V_1_payload_A );
    sensitive << ( ethernet_axi_5_V_data_V_1_payload_B );
    sensitive << ( ethernet_axi_5_V_data_V_1_sel );

    SC_METHOD(thread_ethernet_axi_5_V_data_V_1_load_A);
    sensitive << ( ethernet_axi_5_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_5_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_5_V_data_V_1_load_B);
    sensitive << ( ethernet_axi_5_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_5_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_5_V_data_V_1_sel);
    sensitive << ( ethernet_axi_5_V_data_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_5_V_data_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_5_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_5_V_data_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op97_write_state3 );
    sensitive << ( ap_predicate_op109_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_5_V_data_V_1_vld_out);
    sensitive << ( ethernet_axi_5_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_5_V_keep_V_1_ack_in);
    sensitive << ( ethernet_axi_5_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_5_V_keep_V_1_ack_out);
    sensitive << ( ethernet_axi_5_TREADY );

    SC_METHOD(thread_ethernet_axi_5_V_keep_V_1_data_out);
    sensitive << ( ethernet_axi_5_V_keep_V_1_payload_A );
    sensitive << ( ethernet_axi_5_V_keep_V_1_payload_B );
    sensitive << ( ethernet_axi_5_V_keep_V_1_sel );

    SC_METHOD(thread_ethernet_axi_5_V_keep_V_1_load_A);
    sensitive << ( ethernet_axi_5_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_5_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_5_V_keep_V_1_load_B);
    sensitive << ( ethernet_axi_5_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_5_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_5_V_keep_V_1_sel);
    sensitive << ( ethernet_axi_5_V_keep_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_5_V_keep_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_5_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_5_V_keep_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op97_write_state3 );
    sensitive << ( ap_predicate_op109_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_5_V_keep_V_1_vld_out);
    sensitive << ( ethernet_axi_5_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_5_V_last_V_1_ack_in);
    sensitive << ( ethernet_axi_5_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_5_V_last_V_1_ack_out);
    sensitive << ( ethernet_axi_5_TREADY );

    SC_METHOD(thread_ethernet_axi_5_V_last_V_1_data_out);
    sensitive << ( ethernet_axi_5_V_last_V_1_payload_A );
    sensitive << ( ethernet_axi_5_V_last_V_1_payload_B );
    sensitive << ( ethernet_axi_5_V_last_V_1_sel );

    SC_METHOD(thread_ethernet_axi_5_V_last_V_1_load_A);
    sensitive << ( ethernet_axi_5_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_5_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_5_V_last_V_1_load_B);
    sensitive << ( ethernet_axi_5_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_5_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_5_V_last_V_1_sel);
    sensitive << ( ethernet_axi_5_V_last_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_5_V_last_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_5_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_5_V_last_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op97_write_state3 );
    sensitive << ( ap_predicate_op109_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_5_V_last_V_1_vld_out);
    sensitive << ( ethernet_axi_5_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_6_TDATA);
    sensitive << ( ethernet_axi_6_V_data_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_6_TDATA_blk_n);
    sensitive << ( ethernet_axi_6_V_data_V_1_state );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771 );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811 );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );
    sensitive << ( tmp_18_reg_775 );
    sensitive << ( tmp_18_reg_775_pp0_iter2_reg );
    sensitive << ( tmp_1_reg_815 );
    sensitive << ( tmp_1_reg_815_pp0_iter2_reg );
    sensitive << ( tmp_19_reg_779 );
    sensitive << ( tmp_19_reg_779_pp0_iter2_reg );
    sensitive << ( tmp_5_reg_819 );
    sensitive << ( tmp_5_reg_819_pp0_iter2_reg );
    sensitive << ( tmp_20_reg_783 );
    sensitive << ( tmp_20_reg_783_pp0_iter2_reg );
    sensitive << ( tmp_11_reg_823 );
    sensitive << ( tmp_11_reg_823_pp0_iter2_reg );
    sensitive << ( tmp_21_reg_787 );
    sensitive << ( tmp_21_reg_787_pp0_iter2_reg );
    sensitive << ( tmp_13_reg_827 );
    sensitive << ( tmp_13_reg_827_pp0_iter2_reg );

    SC_METHOD(thread_ethernet_axi_6_TKEEP);
    sensitive << ( ethernet_axi_6_V_keep_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_6_TLAST);
    sensitive << ( ethernet_axi_6_V_last_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_6_TVALID);
    sensitive << ( ethernet_axi_6_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_6_V_data_V_1_ack_in);
    sensitive << ( ethernet_axi_6_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_6_V_data_V_1_ack_out);
    sensitive << ( ethernet_axi_6_TREADY );

    SC_METHOD(thread_ethernet_axi_6_V_data_V_1_data_out);
    sensitive << ( ethernet_axi_6_V_data_V_1_payload_A );
    sensitive << ( ethernet_axi_6_V_data_V_1_payload_B );
    sensitive << ( ethernet_axi_6_V_data_V_1_sel );

    SC_METHOD(thread_ethernet_axi_6_V_data_V_1_load_A);
    sensitive << ( ethernet_axi_6_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_6_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_6_V_data_V_1_load_B);
    sensitive << ( ethernet_axi_6_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_6_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_6_V_data_V_1_sel);
    sensitive << ( ethernet_axi_6_V_data_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_6_V_data_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_6_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_6_V_data_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op96_write_state3 );
    sensitive << ( ap_predicate_op108_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_6_V_data_V_1_vld_out);
    sensitive << ( ethernet_axi_6_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_6_V_keep_V_1_ack_in);
    sensitive << ( ethernet_axi_6_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_6_V_keep_V_1_ack_out);
    sensitive << ( ethernet_axi_6_TREADY );

    SC_METHOD(thread_ethernet_axi_6_V_keep_V_1_data_out);
    sensitive << ( ethernet_axi_6_V_keep_V_1_payload_A );
    sensitive << ( ethernet_axi_6_V_keep_V_1_payload_B );
    sensitive << ( ethernet_axi_6_V_keep_V_1_sel );

    SC_METHOD(thread_ethernet_axi_6_V_keep_V_1_load_A);
    sensitive << ( ethernet_axi_6_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_6_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_6_V_keep_V_1_load_B);
    sensitive << ( ethernet_axi_6_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_6_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_6_V_keep_V_1_sel);
    sensitive << ( ethernet_axi_6_V_keep_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_6_V_keep_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_6_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_6_V_keep_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op96_write_state3 );
    sensitive << ( ap_predicate_op108_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_6_V_keep_V_1_vld_out);
    sensitive << ( ethernet_axi_6_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_6_V_last_V_1_ack_in);
    sensitive << ( ethernet_axi_6_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_6_V_last_V_1_ack_out);
    sensitive << ( ethernet_axi_6_TREADY );

    SC_METHOD(thread_ethernet_axi_6_V_last_V_1_data_out);
    sensitive << ( ethernet_axi_6_V_last_V_1_payload_A );
    sensitive << ( ethernet_axi_6_V_last_V_1_payload_B );
    sensitive << ( ethernet_axi_6_V_last_V_1_sel );

    SC_METHOD(thread_ethernet_axi_6_V_last_V_1_load_A);
    sensitive << ( ethernet_axi_6_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_6_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_6_V_last_V_1_load_B);
    sensitive << ( ethernet_axi_6_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_6_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_6_V_last_V_1_sel);
    sensitive << ( ethernet_axi_6_V_last_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_6_V_last_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_6_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_6_V_last_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op96_write_state3 );
    sensitive << ( ap_predicate_op108_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_6_V_last_V_1_vld_out);
    sensitive << ( ethernet_axi_6_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_7_TDATA);
    sensitive << ( ethernet_axi_7_V_data_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_7_TDATA_blk_n);
    sensitive << ( ethernet_axi_7_V_data_V_1_state );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter1_reg );
    sensitive << ( tmp_reg_720_pp0_iter1_reg );
    sensitive << ( cond_reg_739_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_759 );
    sensitive << ( tmp_12_reg_763 );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter2_reg );
    sensitive << ( tmp_reg_720_pp0_iter2_reg );
    sensitive << ( cond_reg_739_pp0_iter2_reg );
    sensitive << ( tmp_10_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_12_reg_763_pp0_iter2_reg );
    sensitive << ( tmp_2_reg_799 );
    sensitive << ( tmp_4_reg_803 );
    sensitive << ( tmp_2_reg_799_pp0_iter2_reg );
    sensitive << ( tmp_4_reg_803_pp0_iter2_reg );
    sensitive << ( tmp_14_reg_767 );
    sensitive << ( tmp_14_reg_767_pp0_iter2_reg );
    sensitive << ( tmp_9_reg_807 );
    sensitive << ( tmp_9_reg_807_pp0_iter2_reg );
    sensitive << ( tmp_16_reg_771 );
    sensitive << ( tmp_16_reg_771_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_811 );
    sensitive << ( tmp_8_reg_811_pp0_iter2_reg );
    sensitive << ( tmp_18_reg_775 );
    sensitive << ( tmp_18_reg_775_pp0_iter2_reg );
    sensitive << ( tmp_1_reg_815 );
    sensitive << ( tmp_1_reg_815_pp0_iter2_reg );
    sensitive << ( tmp_19_reg_779 );
    sensitive << ( tmp_19_reg_779_pp0_iter2_reg );
    sensitive << ( tmp_5_reg_819 );
    sensitive << ( tmp_5_reg_819_pp0_iter2_reg );
    sensitive << ( tmp_20_reg_783 );
    sensitive << ( tmp_20_reg_783_pp0_iter2_reg );
    sensitive << ( tmp_11_reg_823 );
    sensitive << ( tmp_11_reg_823_pp0_iter2_reg );
    sensitive << ( tmp_21_reg_787 );
    sensitive << ( tmp_21_reg_787_pp0_iter2_reg );
    sensitive << ( tmp_13_reg_827 );
    sensitive << ( tmp_13_reg_827_pp0_iter2_reg );
    sensitive << ( tmp_22_reg_791 );
    sensitive << ( tmp_22_reg_791_pp0_iter2_reg );
    sensitive << ( tmp_15_reg_831 );
    sensitive << ( tmp_15_reg_831_pp0_iter2_reg );

    SC_METHOD(thread_ethernet_axi_7_TKEEP);
    sensitive << ( ethernet_axi_7_V_keep_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_7_TLAST);
    sensitive << ( ethernet_axi_7_V_last_V_1_data_out );

    SC_METHOD(thread_ethernet_axi_7_TVALID);
    sensitive << ( ethernet_axi_7_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_7_V_data_V_1_ack_in);
    sensitive << ( ethernet_axi_7_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_7_V_data_V_1_ack_out);
    sensitive << ( ethernet_axi_7_TREADY );

    SC_METHOD(thread_ethernet_axi_7_V_data_V_1_data_out);
    sensitive << ( ethernet_axi_7_V_data_V_1_payload_A );
    sensitive << ( ethernet_axi_7_V_data_V_1_payload_B );
    sensitive << ( ethernet_axi_7_V_data_V_1_sel );

    SC_METHOD(thread_ethernet_axi_7_V_data_V_1_load_A);
    sensitive << ( ethernet_axi_7_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_7_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_7_V_data_V_1_load_B);
    sensitive << ( ethernet_axi_7_V_data_V_1_sel_wr );
    sensitive << ( ethernet_axi_7_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_7_V_data_V_1_sel);
    sensitive << ( ethernet_axi_7_V_data_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_7_V_data_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_7_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_7_V_data_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op95_write_state3 );
    sensitive << ( ap_predicate_op107_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_7_V_data_V_1_vld_out);
    sensitive << ( ethernet_axi_7_V_data_V_1_state );

    SC_METHOD(thread_ethernet_axi_7_V_keep_V_1_ack_in);
    sensitive << ( ethernet_axi_7_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_7_V_keep_V_1_ack_out);
    sensitive << ( ethernet_axi_7_TREADY );

    SC_METHOD(thread_ethernet_axi_7_V_keep_V_1_data_out);
    sensitive << ( ethernet_axi_7_V_keep_V_1_payload_A );
    sensitive << ( ethernet_axi_7_V_keep_V_1_payload_B );
    sensitive << ( ethernet_axi_7_V_keep_V_1_sel );

    SC_METHOD(thread_ethernet_axi_7_V_keep_V_1_load_A);
    sensitive << ( ethernet_axi_7_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_7_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_7_V_keep_V_1_load_B);
    sensitive << ( ethernet_axi_7_V_keep_V_1_sel_wr );
    sensitive << ( ethernet_axi_7_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_7_V_keep_V_1_sel);
    sensitive << ( ethernet_axi_7_V_keep_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_7_V_keep_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_7_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_7_V_keep_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op95_write_state3 );
    sensitive << ( ap_predicate_op107_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_7_V_keep_V_1_vld_out);
    sensitive << ( ethernet_axi_7_V_keep_V_1_state );

    SC_METHOD(thread_ethernet_axi_7_V_last_V_1_ack_in);
    sensitive << ( ethernet_axi_7_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_7_V_last_V_1_ack_out);
    sensitive << ( ethernet_axi_7_TREADY );

    SC_METHOD(thread_ethernet_axi_7_V_last_V_1_data_out);
    sensitive << ( ethernet_axi_7_V_last_V_1_payload_A );
    sensitive << ( ethernet_axi_7_V_last_V_1_payload_B );
    sensitive << ( ethernet_axi_7_V_last_V_1_sel );

    SC_METHOD(thread_ethernet_axi_7_V_last_V_1_load_A);
    sensitive << ( ethernet_axi_7_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_7_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_7_V_last_V_1_load_B);
    sensitive << ( ethernet_axi_7_V_last_V_1_sel_wr );
    sensitive << ( ethernet_axi_7_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_ethernet_axi_7_V_last_V_1_sel);
    sensitive << ( ethernet_axi_7_V_last_V_1_sel_rd );

    SC_METHOD(thread_ethernet_axi_7_V_last_V_1_state_cmp_full);
    sensitive << ( ethernet_axi_7_V_last_V_1_state );

    SC_METHOD(thread_ethernet_axi_7_V_last_V_1_vld_in);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_predicate_op95_write_state3 );
    sensitive << ( ap_predicate_op107_write_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ethernet_axi_7_V_last_V_1_vld_out);
    sensitive << ( ethernet_axi_7_V_last_V_1_state );

    SC_METHOD(thread_fsm_state_V_load_load_fu_384_p1);
    sensitive << ( fsm_state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );

    SC_METHOD(thread_fsm_state_V_load_reg_694_pp0_iter0_reg);
    sensitive << ( fsm_state_V_load_reg_694 );

    SC_METHOD(thread_or_cond_fu_496_p2);
    sensitive << ( tmp_6_fu_484_p2 );
    sensitive << ( tmp_s_fu_490_p2 );

    SC_METHOD(thread_p_Result_3_i_fu_440_p4);
    sensitive << ( data_in_TDATA );

    SC_METHOD(thread_p_Result_i_fu_430_p4);
    sensitive << ( data_in_TDATA );

    SC_METHOD(thread_storemerge_fu_502_p1);
    sensitive << ( or_cond_fu_496_p2 );

    SC_METHOD(thread_tmp_10_fu_530_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( tmp_reg_720_pp0_iter0_reg );
    sensitive << ( cond_reg_739_pp0_iter0_reg );
    sensitive << ( ap_phi_reg_pp0_iter1_mac_type_V_loc_1_reg_362 );

    SC_METHOD(thread_tmp_11_fu_620_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( ethernet_axi_id_V_lo_reg_706 );
    sensitive << ( tmp_2_fu_590_p2 );
    sensitive << ( tmp_4_fu_595_p2 );
    sensitive << ( tmp_9_fu_600_p2 );
    sensitive << ( tmp_8_fu_605_p2 );
    sensitive << ( tmp_1_fu_610_p2 );
    sensitive << ( tmp_5_fu_615_p2 );

    SC_METHOD(thread_tmp_12_fu_536_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( tmp_reg_720_pp0_iter0_reg );
    sensitive << ( cond_reg_739_pp0_iter0_reg );
    sensitive << ( tmp_10_fu_530_p2 );
    sensitive << ( ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373 );

    SC_METHOD(thread_tmp_13_fu_625_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( ethernet_axi_id_V_lo_reg_706 );
    sensitive << ( tmp_2_fu_590_p2 );
    sensitive << ( tmp_4_fu_595_p2 );
    sensitive << ( tmp_9_fu_600_p2 );
    sensitive << ( tmp_8_fu_605_p2 );
    sensitive << ( tmp_1_fu_610_p2 );
    sensitive << ( tmp_5_fu_615_p2 );
    sensitive << ( tmp_11_fu_620_p2 );

    SC_METHOD(thread_tmp_14_fu_542_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( tmp_reg_720_pp0_iter0_reg );
    sensitive << ( cond_reg_739_pp0_iter0_reg );
    sensitive << ( tmp_10_fu_530_p2 );
    sensitive << ( tmp_12_fu_536_p2 );
    sensitive << ( ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373 );

    SC_METHOD(thread_tmp_15_fu_630_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( ethernet_axi_id_V_lo_reg_706 );
    sensitive << ( tmp_2_fu_590_p2 );
    sensitive << ( tmp_4_fu_595_p2 );
    sensitive << ( tmp_9_fu_600_p2 );
    sensitive << ( tmp_8_fu_605_p2 );
    sensitive << ( tmp_1_fu_610_p2 );
    sensitive << ( tmp_5_fu_615_p2 );
    sensitive << ( tmp_11_fu_620_p2 );
    sensitive << ( tmp_13_fu_625_p2 );

    SC_METHOD(thread_tmp_16_fu_548_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( tmp_reg_720_pp0_iter0_reg );
    sensitive << ( cond_reg_739_pp0_iter0_reg );
    sensitive << ( tmp_10_fu_530_p2 );
    sensitive << ( tmp_12_fu_536_p2 );
    sensitive << ( tmp_14_fu_542_p2 );
    sensitive << ( ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373 );

    SC_METHOD(thread_tmp_17_fu_635_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( mac_type_V_load_reg_698 );
    sensitive << ( tmp_2_fu_590_p2 );
    sensitive << ( tmp_4_fu_595_p2 );
    sensitive << ( tmp_9_fu_600_p2 );
    sensitive << ( tmp_8_fu_605_p2 );
    sensitive << ( tmp_1_fu_610_p2 );
    sensitive << ( tmp_5_fu_615_p2 );
    sensitive << ( tmp_11_fu_620_p2 );
    sensitive << ( tmp_13_fu_625_p2 );
    sensitive << ( tmp_15_fu_630_p2 );

    SC_METHOD(thread_tmp_18_fu_554_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( tmp_reg_720_pp0_iter0_reg );
    sensitive << ( cond_reg_739_pp0_iter0_reg );
    sensitive << ( tmp_10_fu_530_p2 );
    sensitive << ( tmp_12_fu_536_p2 );
    sensitive << ( tmp_14_fu_542_p2 );
    sensitive << ( tmp_16_fu_548_p2 );
    sensitive << ( ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373 );

    SC_METHOD(thread_tmp_19_fu_560_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( tmp_reg_720_pp0_iter0_reg );
    sensitive << ( cond_reg_739_pp0_iter0_reg );
    sensitive << ( tmp_10_fu_530_p2 );
    sensitive << ( tmp_12_fu_536_p2 );
    sensitive << ( tmp_14_fu_542_p2 );
    sensitive << ( tmp_16_fu_548_p2 );
    sensitive << ( tmp_18_fu_554_p2 );
    sensitive << ( ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373 );

    SC_METHOD(thread_tmp_1_fu_610_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( ethernet_axi_id_V_lo_reg_706 );
    sensitive << ( tmp_2_fu_590_p2 );
    sensitive << ( tmp_4_fu_595_p2 );
    sensitive << ( tmp_9_fu_600_p2 );
    sensitive << ( tmp_8_fu_605_p2 );

    SC_METHOD(thread_tmp_20_fu_566_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( tmp_reg_720_pp0_iter0_reg );
    sensitive << ( cond_reg_739_pp0_iter0_reg );
    sensitive << ( tmp_10_fu_530_p2 );
    sensitive << ( tmp_12_fu_536_p2 );
    sensitive << ( tmp_14_fu_542_p2 );
    sensitive << ( tmp_16_fu_548_p2 );
    sensitive << ( tmp_18_fu_554_p2 );
    sensitive << ( tmp_19_fu_560_p2 );
    sensitive << ( ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373 );

    SC_METHOD(thread_tmp_21_fu_572_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( tmp_reg_720_pp0_iter0_reg );
    sensitive << ( cond_reg_739_pp0_iter0_reg );
    sensitive << ( tmp_10_fu_530_p2 );
    sensitive << ( tmp_12_fu_536_p2 );
    sensitive << ( tmp_14_fu_542_p2 );
    sensitive << ( tmp_16_fu_548_p2 );
    sensitive << ( tmp_18_fu_554_p2 );
    sensitive << ( tmp_19_fu_560_p2 );
    sensitive << ( tmp_20_fu_566_p2 );
    sensitive << ( ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373 );

    SC_METHOD(thread_tmp_22_fu_578_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( tmp_reg_720_pp0_iter0_reg );
    sensitive << ( cond_reg_739_pp0_iter0_reg );
    sensitive << ( tmp_10_fu_530_p2 );
    sensitive << ( tmp_12_fu_536_p2 );
    sensitive << ( tmp_14_fu_542_p2 );
    sensitive << ( tmp_16_fu_548_p2 );
    sensitive << ( tmp_18_fu_554_p2 );
    sensitive << ( tmp_19_fu_560_p2 );
    sensitive << ( tmp_20_fu_566_p2 );
    sensitive << ( tmp_21_fu_572_p2 );
    sensitive << ( ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373 );

    SC_METHOD(thread_tmp_23_fu_584_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( tmp_reg_720_pp0_iter0_reg );
    sensitive << ( cond_reg_739_pp0_iter0_reg );
    sensitive << ( tmp_10_fu_530_p2 );
    sensitive << ( tmp_12_fu_536_p2 );
    sensitive << ( tmp_14_fu_542_p2 );
    sensitive << ( tmp_16_fu_548_p2 );
    sensitive << ( tmp_18_fu_554_p2 );
    sensitive << ( tmp_19_fu_560_p2 );
    sensitive << ( tmp_20_fu_566_p2 );
    sensitive << ( tmp_21_fu_572_p2 );
    sensitive << ( tmp_22_fu_578_p2 );
    sensitive << ( ap_phi_reg_pp0_iter1_mac_type_V_loc_1_reg_362 );

    SC_METHOD(thread_tmp_24_fu_480_p1);
    sensitive << ( data_in_TDATA );

    SC_METHOD(thread_tmp_2_fu_590_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( mac_type_V_load_reg_698 );

    SC_METHOD(thread_tmp_3_fu_424_p2);
    sensitive << ( data_in_TVALID );
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( fsm_state_V );
    sensitive << ( mac_type_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( tmp_nbreadreq_fu_164_p5 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_predicate_op12_read_state1 );
    sensitive << ( cond_fu_412_p2 );
    sensitive << ( tmp_7_fu_418_p2 );

    SC_METHOD(thread_tmp_4_fu_595_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( ethernet_axi_id_V_lo_reg_706 );
    sensitive << ( tmp_2_fu_590_p2 );

    SC_METHOD(thread_tmp_5_fu_615_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( ethernet_axi_id_V_lo_reg_706 );
    sensitive << ( tmp_2_fu_590_p2 );
    sensitive << ( tmp_4_fu_595_p2 );
    sensitive << ( tmp_9_fu_600_p2 );
    sensitive << ( tmp_8_fu_605_p2 );
    sensitive << ( tmp_1_fu_610_p2 );

    SC_METHOD(thread_tmp_6_fu_484_p2);
    sensitive << ( data_in_TVALID );
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( my_mac_address_V );
    sensitive << ( fsm_state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( tmp_nbreadreq_fu_164_p5 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_predicate_op12_read_state1 );
    sensitive << ( cond_fu_412_p2 );
    sensitive << ( tmp_24_fu_480_p1 );

    SC_METHOD(thread_tmp_7_fu_418_p2);
    sensitive << ( data_in_TVALID );
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( fsm_state_V );
    sensitive << ( word_count_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( tmp_nbreadreq_fu_164_p5 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_predicate_op12_read_state1 );
    sensitive << ( cond_fu_412_p2 );

    SC_METHOD(thread_tmp_8_fu_605_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( ethernet_axi_id_V_lo_reg_706 );
    sensitive << ( tmp_2_fu_590_p2 );
    sensitive << ( tmp_4_fu_595_p2 );
    sensitive << ( tmp_9_fu_600_p2 );

    SC_METHOD(thread_tmp_9_fu_600_p2);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( fsm_state_V_load_reg_694_pp0_iter0_reg );
    sensitive << ( ethernet_axi_id_V_lo_reg_706 );
    sensitive << ( tmp_2_fu_590_p2 );
    sensitive << ( tmp_4_fu_595_p2 );

    SC_METHOD(thread_tmp_i_fu_450_p3);
    sensitive << ( p_Result_3_i_fu_440_p4 );
    sensitive << ( p_Result_i_fu_430_p4 );

    SC_METHOD(thread_tmp_last_V_fu_404_p1);
    sensitive << ( data_in_TLAST );

    SC_METHOD(thread_tmp_nbreadreq_fu_164_p5);
    sensitive << ( data_in_TVALID );

    SC_METHOD(thread_tmp_reg_720_pp0_iter0_reg);
    sensitive << ( tmp_reg_720 );

    SC_METHOD(thread_tmp_s_fu_490_p2);
    sensitive << ( data_in_TVALID );
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( fsm_state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( tmp_nbreadreq_fu_164_p5 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_predicate_op12_read_state1 );
    sensitive << ( cond_fu_412_p2 );
    sensitive << ( tmp_24_fu_480_p1 );

    SC_METHOD(thread_ap_NS_iter0_fsm);
    sensitive << ( data_in_TVALID );
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_predicate_op12_read_state1 );

    SC_METHOD(thread_ap_NS_iter1_fsm);
    sensitive << ( data_in_TVALID );
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_predicate_op12_read_state1 );

    SC_METHOD(thread_ap_NS_iter2_fsm);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_NS_iter3_fsm);
    sensitive << ( ethernet_axi_0_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_0_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_1_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_2_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_3_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_4_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_5_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_6_V_last_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_data_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_keep_V_1_ack_in );
    sensitive << ( ethernet_axi_7_V_last_V_1_ack_in );
    sensitive << ( data_out_V_data_V_1_ack_in );
    sensitive << ( data_out_V_keep_V_1_ack_in );
    sensitive << ( data_out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_CS_iter3_fsm );
    sensitive << ( ap_CS_iter3_fsm_state4 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ethernet_axi_0_V_data_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_0_V_data_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_0_V_data_V_1_state = "00";
    ethernet_axi_0_V_keep_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_0_V_keep_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_0_V_keep_V_1_state = "00";
    ethernet_axi_0_V_last_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_0_V_last_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_0_V_last_V_1_state = "00";
    ethernet_axi_1_V_data_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_1_V_data_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_1_V_data_V_1_state = "00";
    ethernet_axi_1_V_keep_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_1_V_keep_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_1_V_keep_V_1_state = "00";
    ethernet_axi_1_V_last_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_1_V_last_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_1_V_last_V_1_state = "00";
    ethernet_axi_2_V_data_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_2_V_data_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_2_V_data_V_1_state = "00";
    ethernet_axi_2_V_keep_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_2_V_keep_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_2_V_keep_V_1_state = "00";
    ethernet_axi_2_V_last_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_2_V_last_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_2_V_last_V_1_state = "00";
    ethernet_axi_3_V_data_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_3_V_data_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_3_V_data_V_1_state = "00";
    ethernet_axi_3_V_keep_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_3_V_keep_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_3_V_keep_V_1_state = "00";
    ethernet_axi_3_V_last_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_3_V_last_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_3_V_last_V_1_state = "00";
    ethernet_axi_4_V_data_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_4_V_data_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_4_V_data_V_1_state = "00";
    ethernet_axi_4_V_keep_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_4_V_keep_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_4_V_keep_V_1_state = "00";
    ethernet_axi_4_V_last_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_4_V_last_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_4_V_last_V_1_state = "00";
    ethernet_axi_5_V_data_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_5_V_data_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_5_V_data_V_1_state = "00";
    ethernet_axi_5_V_keep_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_5_V_keep_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_5_V_keep_V_1_state = "00";
    ethernet_axi_5_V_last_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_5_V_last_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_5_V_last_V_1_state = "00";
    ethernet_axi_6_V_data_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_6_V_data_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_6_V_data_V_1_state = "00";
    ethernet_axi_6_V_keep_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_6_V_keep_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_6_V_keep_V_1_state = "00";
    ethernet_axi_6_V_last_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_6_V_last_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_6_V_last_V_1_state = "00";
    ethernet_axi_7_V_data_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_7_V_data_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_7_V_data_V_1_state = "00";
    ethernet_axi_7_V_keep_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_7_V_keep_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_7_V_keep_V_1_state = "00";
    ethernet_axi_7_V_last_V_1_sel_rd = SC_LOGIC_0;
    ethernet_axi_7_V_last_V_1_sel_wr = SC_LOGIC_0;
    ethernet_axi_7_V_last_V_1_state = "00";
    data_out_V_data_V_1_sel_rd = SC_LOGIC_0;
    data_out_V_data_V_1_sel_wr = SC_LOGIC_0;
    data_out_V_data_V_1_state = "00";
    data_out_V_keep_V_1_sel_rd = SC_LOGIC_0;
    data_out_V_keep_V_1_sel_wr = SC_LOGIC_0;
    data_out_V_keep_V_1_state = "00";
    data_out_V_last_V_1_sel_rd = SC_LOGIC_0;
    data_out_V_last_V_1_sel_wr = SC_LOGIC_0;
    data_out_V_last_V_1_state = "00";
    fsm_state_V = "0";
    mac_type_V = "0000000000000000";
    ethernet_axi_id_V = "00000000";
    prev_word_data_V = "0000000000000000000000000000000000000000000000000000000000000000";
    prev_word_keep_V = "00000000";
    prev_word_last_V = "0";
    word_count_V = "00";
    ap_CS_iter0_fsm = "1";
    ap_CS_iter1_fsm = "01";
    ap_CS_iter2_fsm = "01";
    ap_CS_iter3_fsm = "01";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ethernet_axi_splitter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, data_in_TDATA, "(port)data_in_TDATA");
    sc_trace(mVcdFile, data_in_TVALID, "(port)data_in_TVALID");
    sc_trace(mVcdFile, data_in_TREADY, "(port)data_in_TREADY");
    sc_trace(mVcdFile, data_in_TKEEP, "(port)data_in_TKEEP");
    sc_trace(mVcdFile, data_in_TLAST, "(port)data_in_TLAST");
    sc_trace(mVcdFile, ethernet_axi_0_TDATA, "(port)ethernet_axi_0_TDATA");
    sc_trace(mVcdFile, ethernet_axi_0_TVALID, "(port)ethernet_axi_0_TVALID");
    sc_trace(mVcdFile, ethernet_axi_0_TREADY, "(port)ethernet_axi_0_TREADY");
    sc_trace(mVcdFile, ethernet_axi_0_TKEEP, "(port)ethernet_axi_0_TKEEP");
    sc_trace(mVcdFile, ethernet_axi_0_TLAST, "(port)ethernet_axi_0_TLAST");
    sc_trace(mVcdFile, ethernet_axi_1_TDATA, "(port)ethernet_axi_1_TDATA");
    sc_trace(mVcdFile, ethernet_axi_1_TVALID, "(port)ethernet_axi_1_TVALID");
    sc_trace(mVcdFile, ethernet_axi_1_TREADY, "(port)ethernet_axi_1_TREADY");
    sc_trace(mVcdFile, ethernet_axi_1_TKEEP, "(port)ethernet_axi_1_TKEEP");
    sc_trace(mVcdFile, ethernet_axi_1_TLAST, "(port)ethernet_axi_1_TLAST");
    sc_trace(mVcdFile, ethernet_axi_2_TDATA, "(port)ethernet_axi_2_TDATA");
    sc_trace(mVcdFile, ethernet_axi_2_TVALID, "(port)ethernet_axi_2_TVALID");
    sc_trace(mVcdFile, ethernet_axi_2_TREADY, "(port)ethernet_axi_2_TREADY");
    sc_trace(mVcdFile, ethernet_axi_2_TKEEP, "(port)ethernet_axi_2_TKEEP");
    sc_trace(mVcdFile, ethernet_axi_2_TLAST, "(port)ethernet_axi_2_TLAST");
    sc_trace(mVcdFile, ethernet_axi_3_TDATA, "(port)ethernet_axi_3_TDATA");
    sc_trace(mVcdFile, ethernet_axi_3_TVALID, "(port)ethernet_axi_3_TVALID");
    sc_trace(mVcdFile, ethernet_axi_3_TREADY, "(port)ethernet_axi_3_TREADY");
    sc_trace(mVcdFile, ethernet_axi_3_TKEEP, "(port)ethernet_axi_3_TKEEP");
    sc_trace(mVcdFile, ethernet_axi_3_TLAST, "(port)ethernet_axi_3_TLAST");
    sc_trace(mVcdFile, ethernet_axi_4_TDATA, "(port)ethernet_axi_4_TDATA");
    sc_trace(mVcdFile, ethernet_axi_4_TVALID, "(port)ethernet_axi_4_TVALID");
    sc_trace(mVcdFile, ethernet_axi_4_TREADY, "(port)ethernet_axi_4_TREADY");
    sc_trace(mVcdFile, ethernet_axi_4_TKEEP, "(port)ethernet_axi_4_TKEEP");
    sc_trace(mVcdFile, ethernet_axi_4_TLAST, "(port)ethernet_axi_4_TLAST");
    sc_trace(mVcdFile, ethernet_axi_5_TDATA, "(port)ethernet_axi_5_TDATA");
    sc_trace(mVcdFile, ethernet_axi_5_TVALID, "(port)ethernet_axi_5_TVALID");
    sc_trace(mVcdFile, ethernet_axi_5_TREADY, "(port)ethernet_axi_5_TREADY");
    sc_trace(mVcdFile, ethernet_axi_5_TKEEP, "(port)ethernet_axi_5_TKEEP");
    sc_trace(mVcdFile, ethernet_axi_5_TLAST, "(port)ethernet_axi_5_TLAST");
    sc_trace(mVcdFile, ethernet_axi_6_TDATA, "(port)ethernet_axi_6_TDATA");
    sc_trace(mVcdFile, ethernet_axi_6_TVALID, "(port)ethernet_axi_6_TVALID");
    sc_trace(mVcdFile, ethernet_axi_6_TREADY, "(port)ethernet_axi_6_TREADY");
    sc_trace(mVcdFile, ethernet_axi_6_TKEEP, "(port)ethernet_axi_6_TKEEP");
    sc_trace(mVcdFile, ethernet_axi_6_TLAST, "(port)ethernet_axi_6_TLAST");
    sc_trace(mVcdFile, ethernet_axi_7_TDATA, "(port)ethernet_axi_7_TDATA");
    sc_trace(mVcdFile, ethernet_axi_7_TVALID, "(port)ethernet_axi_7_TVALID");
    sc_trace(mVcdFile, ethernet_axi_7_TREADY, "(port)ethernet_axi_7_TREADY");
    sc_trace(mVcdFile, ethernet_axi_7_TKEEP, "(port)ethernet_axi_7_TKEEP");
    sc_trace(mVcdFile, ethernet_axi_7_TLAST, "(port)ethernet_axi_7_TLAST");
    sc_trace(mVcdFile, data_out_TDATA, "(port)data_out_TDATA");
    sc_trace(mVcdFile, data_out_TVALID, "(port)data_out_TVALID");
    sc_trace(mVcdFile, data_out_TREADY, "(port)data_out_TREADY");
    sc_trace(mVcdFile, data_out_TKEEP, "(port)data_out_TKEEP");
    sc_trace(mVcdFile, data_out_TLAST, "(port)data_out_TLAST");
    sc_trace(mVcdFile, my_mac_address_V, "(port)my_mac_address_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_data_out, "ethernet_axi_0_V_data_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_vld_in, "ethernet_axi_0_V_data_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_vld_out, "ethernet_axi_0_V_data_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_ack_in, "ethernet_axi_0_V_data_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_ack_out, "ethernet_axi_0_V_data_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_payload_A, "ethernet_axi_0_V_data_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_payload_B, "ethernet_axi_0_V_data_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_sel_rd, "ethernet_axi_0_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_sel_wr, "ethernet_axi_0_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_sel, "ethernet_axi_0_V_data_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_load_A, "ethernet_axi_0_V_data_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_load_B, "ethernet_axi_0_V_data_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_state, "ethernet_axi_0_V_data_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_0_V_data_V_1_state_cmp_full, "ethernet_axi_0_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_data_out, "ethernet_axi_0_V_keep_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_vld_in, "ethernet_axi_0_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_vld_out, "ethernet_axi_0_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_ack_in, "ethernet_axi_0_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_ack_out, "ethernet_axi_0_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_payload_A, "ethernet_axi_0_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_payload_B, "ethernet_axi_0_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_sel_rd, "ethernet_axi_0_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_sel_wr, "ethernet_axi_0_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_sel, "ethernet_axi_0_V_keep_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_load_A, "ethernet_axi_0_V_keep_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_load_B, "ethernet_axi_0_V_keep_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_state, "ethernet_axi_0_V_keep_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_0_V_keep_V_1_state_cmp_full, "ethernet_axi_0_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_data_out, "ethernet_axi_0_V_last_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_vld_in, "ethernet_axi_0_V_last_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_vld_out, "ethernet_axi_0_V_last_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_ack_in, "ethernet_axi_0_V_last_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_ack_out, "ethernet_axi_0_V_last_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_payload_A, "ethernet_axi_0_V_last_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_payload_B, "ethernet_axi_0_V_last_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_sel_rd, "ethernet_axi_0_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_sel_wr, "ethernet_axi_0_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_sel, "ethernet_axi_0_V_last_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_load_A, "ethernet_axi_0_V_last_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_load_B, "ethernet_axi_0_V_last_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_state, "ethernet_axi_0_V_last_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_0_V_last_V_1_state_cmp_full, "ethernet_axi_0_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_data_out, "ethernet_axi_1_V_data_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_vld_in, "ethernet_axi_1_V_data_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_vld_out, "ethernet_axi_1_V_data_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_ack_in, "ethernet_axi_1_V_data_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_ack_out, "ethernet_axi_1_V_data_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_payload_A, "ethernet_axi_1_V_data_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_payload_B, "ethernet_axi_1_V_data_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_sel_rd, "ethernet_axi_1_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_sel_wr, "ethernet_axi_1_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_sel, "ethernet_axi_1_V_data_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_load_A, "ethernet_axi_1_V_data_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_load_B, "ethernet_axi_1_V_data_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_state, "ethernet_axi_1_V_data_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_1_V_data_V_1_state_cmp_full, "ethernet_axi_1_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_data_out, "ethernet_axi_1_V_keep_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_vld_in, "ethernet_axi_1_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_vld_out, "ethernet_axi_1_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_ack_in, "ethernet_axi_1_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_ack_out, "ethernet_axi_1_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_payload_A, "ethernet_axi_1_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_payload_B, "ethernet_axi_1_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_sel_rd, "ethernet_axi_1_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_sel_wr, "ethernet_axi_1_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_sel, "ethernet_axi_1_V_keep_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_load_A, "ethernet_axi_1_V_keep_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_load_B, "ethernet_axi_1_V_keep_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_state, "ethernet_axi_1_V_keep_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_1_V_keep_V_1_state_cmp_full, "ethernet_axi_1_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_data_out, "ethernet_axi_1_V_last_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_vld_in, "ethernet_axi_1_V_last_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_vld_out, "ethernet_axi_1_V_last_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_ack_in, "ethernet_axi_1_V_last_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_ack_out, "ethernet_axi_1_V_last_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_payload_A, "ethernet_axi_1_V_last_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_payload_B, "ethernet_axi_1_V_last_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_sel_rd, "ethernet_axi_1_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_sel_wr, "ethernet_axi_1_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_sel, "ethernet_axi_1_V_last_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_load_A, "ethernet_axi_1_V_last_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_load_B, "ethernet_axi_1_V_last_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_state, "ethernet_axi_1_V_last_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_1_V_last_V_1_state_cmp_full, "ethernet_axi_1_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_data_out, "ethernet_axi_2_V_data_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_vld_in, "ethernet_axi_2_V_data_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_vld_out, "ethernet_axi_2_V_data_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_ack_in, "ethernet_axi_2_V_data_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_ack_out, "ethernet_axi_2_V_data_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_payload_A, "ethernet_axi_2_V_data_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_payload_B, "ethernet_axi_2_V_data_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_sel_rd, "ethernet_axi_2_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_sel_wr, "ethernet_axi_2_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_sel, "ethernet_axi_2_V_data_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_load_A, "ethernet_axi_2_V_data_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_load_B, "ethernet_axi_2_V_data_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_state, "ethernet_axi_2_V_data_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_2_V_data_V_1_state_cmp_full, "ethernet_axi_2_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_data_out, "ethernet_axi_2_V_keep_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_vld_in, "ethernet_axi_2_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_vld_out, "ethernet_axi_2_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_ack_in, "ethernet_axi_2_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_ack_out, "ethernet_axi_2_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_payload_A, "ethernet_axi_2_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_payload_B, "ethernet_axi_2_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_sel_rd, "ethernet_axi_2_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_sel_wr, "ethernet_axi_2_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_sel, "ethernet_axi_2_V_keep_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_load_A, "ethernet_axi_2_V_keep_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_load_B, "ethernet_axi_2_V_keep_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_state, "ethernet_axi_2_V_keep_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_2_V_keep_V_1_state_cmp_full, "ethernet_axi_2_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_data_out, "ethernet_axi_2_V_last_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_vld_in, "ethernet_axi_2_V_last_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_vld_out, "ethernet_axi_2_V_last_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_ack_in, "ethernet_axi_2_V_last_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_ack_out, "ethernet_axi_2_V_last_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_payload_A, "ethernet_axi_2_V_last_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_payload_B, "ethernet_axi_2_V_last_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_sel_rd, "ethernet_axi_2_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_sel_wr, "ethernet_axi_2_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_sel, "ethernet_axi_2_V_last_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_load_A, "ethernet_axi_2_V_last_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_load_B, "ethernet_axi_2_V_last_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_state, "ethernet_axi_2_V_last_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_2_V_last_V_1_state_cmp_full, "ethernet_axi_2_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_data_out, "ethernet_axi_3_V_data_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_vld_in, "ethernet_axi_3_V_data_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_vld_out, "ethernet_axi_3_V_data_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_ack_in, "ethernet_axi_3_V_data_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_ack_out, "ethernet_axi_3_V_data_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_payload_A, "ethernet_axi_3_V_data_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_payload_B, "ethernet_axi_3_V_data_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_sel_rd, "ethernet_axi_3_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_sel_wr, "ethernet_axi_3_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_sel, "ethernet_axi_3_V_data_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_load_A, "ethernet_axi_3_V_data_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_load_B, "ethernet_axi_3_V_data_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_state, "ethernet_axi_3_V_data_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_3_V_data_V_1_state_cmp_full, "ethernet_axi_3_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_data_out, "ethernet_axi_3_V_keep_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_vld_in, "ethernet_axi_3_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_vld_out, "ethernet_axi_3_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_ack_in, "ethernet_axi_3_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_ack_out, "ethernet_axi_3_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_payload_A, "ethernet_axi_3_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_payload_B, "ethernet_axi_3_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_sel_rd, "ethernet_axi_3_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_sel_wr, "ethernet_axi_3_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_sel, "ethernet_axi_3_V_keep_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_load_A, "ethernet_axi_3_V_keep_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_load_B, "ethernet_axi_3_V_keep_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_state, "ethernet_axi_3_V_keep_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_3_V_keep_V_1_state_cmp_full, "ethernet_axi_3_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_data_out, "ethernet_axi_3_V_last_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_vld_in, "ethernet_axi_3_V_last_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_vld_out, "ethernet_axi_3_V_last_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_ack_in, "ethernet_axi_3_V_last_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_ack_out, "ethernet_axi_3_V_last_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_payload_A, "ethernet_axi_3_V_last_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_payload_B, "ethernet_axi_3_V_last_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_sel_rd, "ethernet_axi_3_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_sel_wr, "ethernet_axi_3_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_sel, "ethernet_axi_3_V_last_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_load_A, "ethernet_axi_3_V_last_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_load_B, "ethernet_axi_3_V_last_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_state, "ethernet_axi_3_V_last_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_3_V_last_V_1_state_cmp_full, "ethernet_axi_3_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_data_out, "ethernet_axi_4_V_data_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_vld_in, "ethernet_axi_4_V_data_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_vld_out, "ethernet_axi_4_V_data_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_ack_in, "ethernet_axi_4_V_data_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_ack_out, "ethernet_axi_4_V_data_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_payload_A, "ethernet_axi_4_V_data_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_payload_B, "ethernet_axi_4_V_data_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_sel_rd, "ethernet_axi_4_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_sel_wr, "ethernet_axi_4_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_sel, "ethernet_axi_4_V_data_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_load_A, "ethernet_axi_4_V_data_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_load_B, "ethernet_axi_4_V_data_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_state, "ethernet_axi_4_V_data_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_4_V_data_V_1_state_cmp_full, "ethernet_axi_4_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_data_out, "ethernet_axi_4_V_keep_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_vld_in, "ethernet_axi_4_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_vld_out, "ethernet_axi_4_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_ack_in, "ethernet_axi_4_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_ack_out, "ethernet_axi_4_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_payload_A, "ethernet_axi_4_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_payload_B, "ethernet_axi_4_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_sel_rd, "ethernet_axi_4_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_sel_wr, "ethernet_axi_4_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_sel, "ethernet_axi_4_V_keep_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_load_A, "ethernet_axi_4_V_keep_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_load_B, "ethernet_axi_4_V_keep_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_state, "ethernet_axi_4_V_keep_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_4_V_keep_V_1_state_cmp_full, "ethernet_axi_4_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_data_out, "ethernet_axi_4_V_last_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_vld_in, "ethernet_axi_4_V_last_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_vld_out, "ethernet_axi_4_V_last_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_ack_in, "ethernet_axi_4_V_last_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_ack_out, "ethernet_axi_4_V_last_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_payload_A, "ethernet_axi_4_V_last_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_payload_B, "ethernet_axi_4_V_last_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_sel_rd, "ethernet_axi_4_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_sel_wr, "ethernet_axi_4_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_sel, "ethernet_axi_4_V_last_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_load_A, "ethernet_axi_4_V_last_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_load_B, "ethernet_axi_4_V_last_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_state, "ethernet_axi_4_V_last_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_4_V_last_V_1_state_cmp_full, "ethernet_axi_4_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_data_out, "ethernet_axi_5_V_data_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_vld_in, "ethernet_axi_5_V_data_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_vld_out, "ethernet_axi_5_V_data_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_ack_in, "ethernet_axi_5_V_data_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_ack_out, "ethernet_axi_5_V_data_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_payload_A, "ethernet_axi_5_V_data_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_payload_B, "ethernet_axi_5_V_data_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_sel_rd, "ethernet_axi_5_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_sel_wr, "ethernet_axi_5_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_sel, "ethernet_axi_5_V_data_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_load_A, "ethernet_axi_5_V_data_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_load_B, "ethernet_axi_5_V_data_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_state, "ethernet_axi_5_V_data_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_5_V_data_V_1_state_cmp_full, "ethernet_axi_5_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_data_out, "ethernet_axi_5_V_keep_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_vld_in, "ethernet_axi_5_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_vld_out, "ethernet_axi_5_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_ack_in, "ethernet_axi_5_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_ack_out, "ethernet_axi_5_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_payload_A, "ethernet_axi_5_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_payload_B, "ethernet_axi_5_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_sel_rd, "ethernet_axi_5_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_sel_wr, "ethernet_axi_5_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_sel, "ethernet_axi_5_V_keep_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_load_A, "ethernet_axi_5_V_keep_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_load_B, "ethernet_axi_5_V_keep_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_state, "ethernet_axi_5_V_keep_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_5_V_keep_V_1_state_cmp_full, "ethernet_axi_5_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_data_out, "ethernet_axi_5_V_last_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_vld_in, "ethernet_axi_5_V_last_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_vld_out, "ethernet_axi_5_V_last_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_ack_in, "ethernet_axi_5_V_last_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_ack_out, "ethernet_axi_5_V_last_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_payload_A, "ethernet_axi_5_V_last_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_payload_B, "ethernet_axi_5_V_last_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_sel_rd, "ethernet_axi_5_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_sel_wr, "ethernet_axi_5_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_sel, "ethernet_axi_5_V_last_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_load_A, "ethernet_axi_5_V_last_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_load_B, "ethernet_axi_5_V_last_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_state, "ethernet_axi_5_V_last_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_5_V_last_V_1_state_cmp_full, "ethernet_axi_5_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_data_out, "ethernet_axi_6_V_data_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_vld_in, "ethernet_axi_6_V_data_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_vld_out, "ethernet_axi_6_V_data_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_ack_in, "ethernet_axi_6_V_data_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_ack_out, "ethernet_axi_6_V_data_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_payload_A, "ethernet_axi_6_V_data_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_payload_B, "ethernet_axi_6_V_data_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_sel_rd, "ethernet_axi_6_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_sel_wr, "ethernet_axi_6_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_sel, "ethernet_axi_6_V_data_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_load_A, "ethernet_axi_6_V_data_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_load_B, "ethernet_axi_6_V_data_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_state, "ethernet_axi_6_V_data_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_6_V_data_V_1_state_cmp_full, "ethernet_axi_6_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_data_out, "ethernet_axi_6_V_keep_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_vld_in, "ethernet_axi_6_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_vld_out, "ethernet_axi_6_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_ack_in, "ethernet_axi_6_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_ack_out, "ethernet_axi_6_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_payload_A, "ethernet_axi_6_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_payload_B, "ethernet_axi_6_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_sel_rd, "ethernet_axi_6_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_sel_wr, "ethernet_axi_6_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_sel, "ethernet_axi_6_V_keep_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_load_A, "ethernet_axi_6_V_keep_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_load_B, "ethernet_axi_6_V_keep_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_state, "ethernet_axi_6_V_keep_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_6_V_keep_V_1_state_cmp_full, "ethernet_axi_6_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_data_out, "ethernet_axi_6_V_last_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_vld_in, "ethernet_axi_6_V_last_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_vld_out, "ethernet_axi_6_V_last_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_ack_in, "ethernet_axi_6_V_last_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_ack_out, "ethernet_axi_6_V_last_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_payload_A, "ethernet_axi_6_V_last_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_payload_B, "ethernet_axi_6_V_last_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_sel_rd, "ethernet_axi_6_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_sel_wr, "ethernet_axi_6_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_sel, "ethernet_axi_6_V_last_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_load_A, "ethernet_axi_6_V_last_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_load_B, "ethernet_axi_6_V_last_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_state, "ethernet_axi_6_V_last_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_6_V_last_V_1_state_cmp_full, "ethernet_axi_6_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_data_out, "ethernet_axi_7_V_data_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_vld_in, "ethernet_axi_7_V_data_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_vld_out, "ethernet_axi_7_V_data_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_ack_in, "ethernet_axi_7_V_data_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_ack_out, "ethernet_axi_7_V_data_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_payload_A, "ethernet_axi_7_V_data_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_payload_B, "ethernet_axi_7_V_data_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_sel_rd, "ethernet_axi_7_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_sel_wr, "ethernet_axi_7_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_sel, "ethernet_axi_7_V_data_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_load_A, "ethernet_axi_7_V_data_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_load_B, "ethernet_axi_7_V_data_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_state, "ethernet_axi_7_V_data_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_7_V_data_V_1_state_cmp_full, "ethernet_axi_7_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_data_out, "ethernet_axi_7_V_keep_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_vld_in, "ethernet_axi_7_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_vld_out, "ethernet_axi_7_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_ack_in, "ethernet_axi_7_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_ack_out, "ethernet_axi_7_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_payload_A, "ethernet_axi_7_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_payload_B, "ethernet_axi_7_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_sel_rd, "ethernet_axi_7_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_sel_wr, "ethernet_axi_7_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_sel, "ethernet_axi_7_V_keep_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_load_A, "ethernet_axi_7_V_keep_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_load_B, "ethernet_axi_7_V_keep_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_state, "ethernet_axi_7_V_keep_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_7_V_keep_V_1_state_cmp_full, "ethernet_axi_7_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_data_out, "ethernet_axi_7_V_last_V_1_data_out");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_vld_in, "ethernet_axi_7_V_last_V_1_vld_in");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_vld_out, "ethernet_axi_7_V_last_V_1_vld_out");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_ack_in, "ethernet_axi_7_V_last_V_1_ack_in");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_ack_out, "ethernet_axi_7_V_last_V_1_ack_out");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_payload_A, "ethernet_axi_7_V_last_V_1_payload_A");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_payload_B, "ethernet_axi_7_V_last_V_1_payload_B");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_sel_rd, "ethernet_axi_7_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_sel_wr, "ethernet_axi_7_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_sel, "ethernet_axi_7_V_last_V_1_sel");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_load_A, "ethernet_axi_7_V_last_V_1_load_A");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_load_B, "ethernet_axi_7_V_last_V_1_load_B");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_state, "ethernet_axi_7_V_last_V_1_state");
    sc_trace(mVcdFile, ethernet_axi_7_V_last_V_1_state_cmp_full, "ethernet_axi_7_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, data_out_V_data_V_1_data_out, "data_out_V_data_V_1_data_out");
    sc_trace(mVcdFile, data_out_V_data_V_1_vld_in, "data_out_V_data_V_1_vld_in");
    sc_trace(mVcdFile, data_out_V_data_V_1_vld_out, "data_out_V_data_V_1_vld_out");
    sc_trace(mVcdFile, data_out_V_data_V_1_ack_in, "data_out_V_data_V_1_ack_in");
    sc_trace(mVcdFile, data_out_V_data_V_1_ack_out, "data_out_V_data_V_1_ack_out");
    sc_trace(mVcdFile, data_out_V_data_V_1_payload_A, "data_out_V_data_V_1_payload_A");
    sc_trace(mVcdFile, data_out_V_data_V_1_payload_B, "data_out_V_data_V_1_payload_B");
    sc_trace(mVcdFile, data_out_V_data_V_1_sel_rd, "data_out_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, data_out_V_data_V_1_sel_wr, "data_out_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, data_out_V_data_V_1_sel, "data_out_V_data_V_1_sel");
    sc_trace(mVcdFile, data_out_V_data_V_1_load_A, "data_out_V_data_V_1_load_A");
    sc_trace(mVcdFile, data_out_V_data_V_1_load_B, "data_out_V_data_V_1_load_B");
    sc_trace(mVcdFile, data_out_V_data_V_1_state, "data_out_V_data_V_1_state");
    sc_trace(mVcdFile, data_out_V_data_V_1_state_cmp_full, "data_out_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, data_out_V_keep_V_1_data_out, "data_out_V_keep_V_1_data_out");
    sc_trace(mVcdFile, data_out_V_keep_V_1_vld_in, "data_out_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, data_out_V_keep_V_1_vld_out, "data_out_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, data_out_V_keep_V_1_ack_in, "data_out_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, data_out_V_keep_V_1_ack_out, "data_out_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, data_out_V_keep_V_1_payload_A, "data_out_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, data_out_V_keep_V_1_payload_B, "data_out_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, data_out_V_keep_V_1_sel_rd, "data_out_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, data_out_V_keep_V_1_sel_wr, "data_out_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, data_out_V_keep_V_1_sel, "data_out_V_keep_V_1_sel");
    sc_trace(mVcdFile, data_out_V_keep_V_1_load_A, "data_out_V_keep_V_1_load_A");
    sc_trace(mVcdFile, data_out_V_keep_V_1_load_B, "data_out_V_keep_V_1_load_B");
    sc_trace(mVcdFile, data_out_V_keep_V_1_state, "data_out_V_keep_V_1_state");
    sc_trace(mVcdFile, data_out_V_keep_V_1_state_cmp_full, "data_out_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, data_out_V_last_V_1_data_out, "data_out_V_last_V_1_data_out");
    sc_trace(mVcdFile, data_out_V_last_V_1_vld_in, "data_out_V_last_V_1_vld_in");
    sc_trace(mVcdFile, data_out_V_last_V_1_vld_out, "data_out_V_last_V_1_vld_out");
    sc_trace(mVcdFile, data_out_V_last_V_1_ack_in, "data_out_V_last_V_1_ack_in");
    sc_trace(mVcdFile, data_out_V_last_V_1_ack_out, "data_out_V_last_V_1_ack_out");
    sc_trace(mVcdFile, data_out_V_last_V_1_payload_A, "data_out_V_last_V_1_payload_A");
    sc_trace(mVcdFile, data_out_V_last_V_1_payload_B, "data_out_V_last_V_1_payload_B");
    sc_trace(mVcdFile, data_out_V_last_V_1_sel_rd, "data_out_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, data_out_V_last_V_1_sel_wr, "data_out_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, data_out_V_last_V_1_sel, "data_out_V_last_V_1_sel");
    sc_trace(mVcdFile, data_out_V_last_V_1_load_A, "data_out_V_last_V_1_load_A");
    sc_trace(mVcdFile, data_out_V_last_V_1_load_B, "data_out_V_last_V_1_load_B");
    sc_trace(mVcdFile, data_out_V_last_V_1_state, "data_out_V_last_V_1_state");
    sc_trace(mVcdFile, data_out_V_last_V_1_state_cmp_full, "data_out_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, fsm_state_V, "fsm_state_V");
    sc_trace(mVcdFile, mac_type_V, "mac_type_V");
    sc_trace(mVcdFile, ethernet_axi_id_V, "ethernet_axi_id_V");
    sc_trace(mVcdFile, prev_word_data_V, "prev_word_data_V");
    sc_trace(mVcdFile, prev_word_keep_V, "prev_word_keep_V");
    sc_trace(mVcdFile, prev_word_last_V, "prev_word_last_V");
    sc_trace(mVcdFile, word_count_V, "word_count_V");
    sc_trace(mVcdFile, data_in_TDATA_blk_n, "data_in_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_iter0_fsm, "ap_CS_iter0_fsm");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state1, "ap_CS_iter0_fsm_state1");
    sc_trace(mVcdFile, ap_CS_iter1_fsm, "ap_CS_iter1_fsm");
    sc_trace(mVcdFile, ap_CS_iter1_fsm_state2, "ap_CS_iter1_fsm_state2");
    sc_trace(mVcdFile, ap_CS_iter2_fsm, "ap_CS_iter2_fsm");
    sc_trace(mVcdFile, ap_CS_iter2_fsm_state3, "ap_CS_iter2_fsm_state3");
    sc_trace(mVcdFile, ap_CS_iter3_fsm, "ap_CS_iter3_fsm");
    sc_trace(mVcdFile, ap_CS_iter3_fsm_state4, "ap_CS_iter3_fsm_state4");
    sc_trace(mVcdFile, fsm_state_V_load_load_fu_384_p1, "fsm_state_V_load_load_fu_384_p1");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_164_p5, "tmp_nbreadreq_fu_164_p5");
    sc_trace(mVcdFile, ethernet_axi_0_TDATA_blk_n, "ethernet_axi_0_TDATA_blk_n");
    sc_trace(mVcdFile, fsm_state_V_load_reg_694, "fsm_state_V_load_reg_694");
    sc_trace(mVcdFile, fsm_state_V_load_reg_694_pp0_iter1_reg, "fsm_state_V_load_reg_694_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_reg_720, "tmp_reg_720");
    sc_trace(mVcdFile, tmp_reg_720_pp0_iter1_reg, "tmp_reg_720_pp0_iter1_reg");
    sc_trace(mVcdFile, cond_reg_739, "cond_reg_739");
    sc_trace(mVcdFile, cond_reg_739_pp0_iter1_reg, "cond_reg_739_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_10_reg_759, "tmp_10_reg_759");
    sc_trace(mVcdFile, tmp_12_reg_763, "tmp_12_reg_763");
    sc_trace(mVcdFile, fsm_state_V_load_reg_694_pp0_iter2_reg, "fsm_state_V_load_reg_694_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_reg_720_pp0_iter2_reg, "tmp_reg_720_pp0_iter2_reg");
    sc_trace(mVcdFile, cond_reg_739_pp0_iter2_reg, "cond_reg_739_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_10_reg_759_pp0_iter2_reg, "tmp_10_reg_759_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_12_reg_763_pp0_iter2_reg, "tmp_12_reg_763_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_reg_799, "tmp_2_reg_799");
    sc_trace(mVcdFile, tmp_4_reg_803, "tmp_4_reg_803");
    sc_trace(mVcdFile, tmp_2_reg_799_pp0_iter2_reg, "tmp_2_reg_799_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_4_reg_803_pp0_iter2_reg, "tmp_4_reg_803_pp0_iter2_reg");
    sc_trace(mVcdFile, ethernet_axi_1_TDATA_blk_n, "ethernet_axi_1_TDATA_blk_n");
    sc_trace(mVcdFile, tmp_14_reg_767, "tmp_14_reg_767");
    sc_trace(mVcdFile, tmp_14_reg_767_pp0_iter2_reg, "tmp_14_reg_767_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_9_reg_807, "tmp_9_reg_807");
    sc_trace(mVcdFile, tmp_9_reg_807_pp0_iter2_reg, "tmp_9_reg_807_pp0_iter2_reg");
    sc_trace(mVcdFile, ethernet_axi_2_TDATA_blk_n, "ethernet_axi_2_TDATA_blk_n");
    sc_trace(mVcdFile, tmp_16_reg_771, "tmp_16_reg_771");
    sc_trace(mVcdFile, tmp_16_reg_771_pp0_iter2_reg, "tmp_16_reg_771_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_8_reg_811, "tmp_8_reg_811");
    sc_trace(mVcdFile, tmp_8_reg_811_pp0_iter2_reg, "tmp_8_reg_811_pp0_iter2_reg");
    sc_trace(mVcdFile, ethernet_axi_3_TDATA_blk_n, "ethernet_axi_3_TDATA_blk_n");
    sc_trace(mVcdFile, tmp_18_reg_775, "tmp_18_reg_775");
    sc_trace(mVcdFile, tmp_18_reg_775_pp0_iter2_reg, "tmp_18_reg_775_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_1_reg_815, "tmp_1_reg_815");
    sc_trace(mVcdFile, tmp_1_reg_815_pp0_iter2_reg, "tmp_1_reg_815_pp0_iter2_reg");
    sc_trace(mVcdFile, ethernet_axi_4_TDATA_blk_n, "ethernet_axi_4_TDATA_blk_n");
    sc_trace(mVcdFile, tmp_19_reg_779, "tmp_19_reg_779");
    sc_trace(mVcdFile, tmp_19_reg_779_pp0_iter2_reg, "tmp_19_reg_779_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_5_reg_819, "tmp_5_reg_819");
    sc_trace(mVcdFile, tmp_5_reg_819_pp0_iter2_reg, "tmp_5_reg_819_pp0_iter2_reg");
    sc_trace(mVcdFile, ethernet_axi_5_TDATA_blk_n, "ethernet_axi_5_TDATA_blk_n");
    sc_trace(mVcdFile, tmp_20_reg_783, "tmp_20_reg_783");
    sc_trace(mVcdFile, tmp_20_reg_783_pp0_iter2_reg, "tmp_20_reg_783_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_11_reg_823, "tmp_11_reg_823");
    sc_trace(mVcdFile, tmp_11_reg_823_pp0_iter2_reg, "tmp_11_reg_823_pp0_iter2_reg");
    sc_trace(mVcdFile, ethernet_axi_6_TDATA_blk_n, "ethernet_axi_6_TDATA_blk_n");
    sc_trace(mVcdFile, tmp_21_reg_787, "tmp_21_reg_787");
    sc_trace(mVcdFile, tmp_21_reg_787_pp0_iter2_reg, "tmp_21_reg_787_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_13_reg_827, "tmp_13_reg_827");
    sc_trace(mVcdFile, tmp_13_reg_827_pp0_iter2_reg, "tmp_13_reg_827_pp0_iter2_reg");
    sc_trace(mVcdFile, ethernet_axi_7_TDATA_blk_n, "ethernet_axi_7_TDATA_blk_n");
    sc_trace(mVcdFile, tmp_22_reg_791, "tmp_22_reg_791");
    sc_trace(mVcdFile, tmp_22_reg_791_pp0_iter2_reg, "tmp_22_reg_791_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_15_reg_831, "tmp_15_reg_831");
    sc_trace(mVcdFile, tmp_15_reg_831_pp0_iter2_reg, "tmp_15_reg_831_pp0_iter2_reg");
    sc_trace(mVcdFile, data_out_TDATA_blk_n, "data_out_TDATA_blk_n");
    sc_trace(mVcdFile, tmp_23_reg_795, "tmp_23_reg_795");
    sc_trace(mVcdFile, tmp_23_reg_795_pp0_iter2_reg, "tmp_23_reg_795_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_17_reg_835, "tmp_17_reg_835");
    sc_trace(mVcdFile, tmp_17_reg_835_pp0_iter2_reg, "tmp_17_reg_835_pp0_iter2_reg");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_predicate_op94_write_state3, "ap_predicate_op94_write_state3");
    sc_trace(mVcdFile, ap_predicate_op95_write_state3, "ap_predicate_op95_write_state3");
    sc_trace(mVcdFile, ap_predicate_op96_write_state3, "ap_predicate_op96_write_state3");
    sc_trace(mVcdFile, ap_predicate_op97_write_state3, "ap_predicate_op97_write_state3");
    sc_trace(mVcdFile, ap_predicate_op98_write_state3, "ap_predicate_op98_write_state3");
    sc_trace(mVcdFile, ap_predicate_op99_write_state3, "ap_predicate_op99_write_state3");
    sc_trace(mVcdFile, ap_predicate_op100_write_state3, "ap_predicate_op100_write_state3");
    sc_trace(mVcdFile, ap_predicate_op101_write_state3, "ap_predicate_op101_write_state3");
    sc_trace(mVcdFile, ap_predicate_op102_write_state3, "ap_predicate_op102_write_state3");
    sc_trace(mVcdFile, ap_predicate_op106_write_state3, "ap_predicate_op106_write_state3");
    sc_trace(mVcdFile, ap_predicate_op107_write_state3, "ap_predicate_op107_write_state3");
    sc_trace(mVcdFile, ap_predicate_op108_write_state3, "ap_predicate_op108_write_state3");
    sc_trace(mVcdFile, ap_predicate_op109_write_state3, "ap_predicate_op109_write_state3");
    sc_trace(mVcdFile, ap_predicate_op110_write_state3, "ap_predicate_op110_write_state3");
    sc_trace(mVcdFile, ap_predicate_op111_write_state3, "ap_predicate_op111_write_state3");
    sc_trace(mVcdFile, ap_predicate_op112_write_state3, "ap_predicate_op112_write_state3");
    sc_trace(mVcdFile, ap_predicate_op113_write_state3, "ap_predicate_op113_write_state3");
    sc_trace(mVcdFile, ap_predicate_op114_write_state3, "ap_predicate_op114_write_state3");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_predicate_op160_write_state4, "ap_predicate_op160_write_state4");
    sc_trace(mVcdFile, ap_predicate_op163_write_state4, "ap_predicate_op163_write_state4");
    sc_trace(mVcdFile, ap_predicate_op166_write_state4, "ap_predicate_op166_write_state4");
    sc_trace(mVcdFile, ap_predicate_op169_write_state4, "ap_predicate_op169_write_state4");
    sc_trace(mVcdFile, ap_predicate_op172_write_state4, "ap_predicate_op172_write_state4");
    sc_trace(mVcdFile, ap_predicate_op175_write_state4, "ap_predicate_op175_write_state4");
    sc_trace(mVcdFile, ap_predicate_op178_write_state4, "ap_predicate_op178_write_state4");
    sc_trace(mVcdFile, ap_predicate_op181_write_state4, "ap_predicate_op181_write_state4");
    sc_trace(mVcdFile, ap_predicate_op184_write_state4, "ap_predicate_op184_write_state4");
    sc_trace(mVcdFile, ap_predicate_op189_write_state4, "ap_predicate_op189_write_state4");
    sc_trace(mVcdFile, ap_predicate_op192_write_state4, "ap_predicate_op192_write_state4");
    sc_trace(mVcdFile, ap_predicate_op195_write_state4, "ap_predicate_op195_write_state4");
    sc_trace(mVcdFile, ap_predicate_op198_write_state4, "ap_predicate_op198_write_state4");
    sc_trace(mVcdFile, ap_predicate_op201_write_state4, "ap_predicate_op201_write_state4");
    sc_trace(mVcdFile, ap_predicate_op204_write_state4, "ap_predicate_op204_write_state4");
    sc_trace(mVcdFile, ap_predicate_op207_write_state4, "ap_predicate_op207_write_state4");
    sc_trace(mVcdFile, ap_predicate_op210_write_state4, "ap_predicate_op210_write_state4");
    sc_trace(mVcdFile, ap_predicate_op213_write_state4, "ap_predicate_op213_write_state4");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_predicate_op12_read_state1, "ap_predicate_op12_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, fsm_state_V_load_reg_694_pp0_iter0_reg, "fsm_state_V_load_reg_694_pp0_iter0_reg");
    sc_trace(mVcdFile, mac_type_V_load_reg_698, "mac_type_V_load_reg_698");
    sc_trace(mVcdFile, ethernet_axi_id_V_lo_reg_706, "ethernet_axi_id_V_lo_reg_706");
    sc_trace(mVcdFile, tmp_reg_720_pp0_iter0_reg, "tmp_reg_720_pp0_iter0_reg");
    sc_trace(mVcdFile, tmp_data_V_reg_724, "tmp_data_V_reg_724");
    sc_trace(mVcdFile, tmp_data_V_reg_724_pp0_iter1_reg, "tmp_data_V_reg_724_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_keep_V_reg_729, "tmp_keep_V_reg_729");
    sc_trace(mVcdFile, tmp_keep_V_reg_729_pp0_iter1_reg, "tmp_keep_V_reg_729_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_last_V_fu_404_p1, "tmp_last_V_fu_404_p1");
    sc_trace(mVcdFile, tmp_last_V_reg_734, "tmp_last_V_reg_734");
    sc_trace(mVcdFile, tmp_last_V_reg_734_pp0_iter1_reg, "tmp_last_V_reg_734_pp0_iter1_reg");
    sc_trace(mVcdFile, cond_fu_412_p2, "cond_fu_412_p2");
    sc_trace(mVcdFile, cond_reg_739_pp0_iter0_reg, "cond_reg_739_pp0_iter0_reg");
    sc_trace(mVcdFile, tmp_i_fu_450_p3, "tmp_i_fu_450_p3");
    sc_trace(mVcdFile, tmp_7_fu_418_p2, "tmp_7_fu_418_p2");
    sc_trace(mVcdFile, tmp_3_fu_424_p2, "tmp_3_fu_424_p2");
    sc_trace(mVcdFile, tmp_10_fu_530_p2, "tmp_10_fu_530_p2");
    sc_trace(mVcdFile, tmp_12_fu_536_p2, "tmp_12_fu_536_p2");
    sc_trace(mVcdFile, tmp_14_fu_542_p2, "tmp_14_fu_542_p2");
    sc_trace(mVcdFile, tmp_16_fu_548_p2, "tmp_16_fu_548_p2");
    sc_trace(mVcdFile, tmp_18_fu_554_p2, "tmp_18_fu_554_p2");
    sc_trace(mVcdFile, tmp_19_fu_560_p2, "tmp_19_fu_560_p2");
    sc_trace(mVcdFile, tmp_20_fu_566_p2, "tmp_20_fu_566_p2");
    sc_trace(mVcdFile, tmp_21_fu_572_p2, "tmp_21_fu_572_p2");
    sc_trace(mVcdFile, tmp_22_fu_578_p2, "tmp_22_fu_578_p2");
    sc_trace(mVcdFile, tmp_23_fu_584_p2, "tmp_23_fu_584_p2");
    sc_trace(mVcdFile, tmp_2_fu_590_p2, "tmp_2_fu_590_p2");
    sc_trace(mVcdFile, tmp_4_fu_595_p2, "tmp_4_fu_595_p2");
    sc_trace(mVcdFile, tmp_9_fu_600_p2, "tmp_9_fu_600_p2");
    sc_trace(mVcdFile, tmp_8_fu_605_p2, "tmp_8_fu_605_p2");
    sc_trace(mVcdFile, tmp_1_fu_610_p2, "tmp_1_fu_610_p2");
    sc_trace(mVcdFile, tmp_5_fu_615_p2, "tmp_5_fu_615_p2");
    sc_trace(mVcdFile, tmp_11_fu_620_p2, "tmp_11_fu_620_p2");
    sc_trace(mVcdFile, tmp_13_fu_625_p2, "tmp_13_fu_625_p2");
    sc_trace(mVcdFile, tmp_15_fu_630_p2, "tmp_15_fu_630_p2");
    sc_trace(mVcdFile, tmp_17_fu_635_p2, "tmp_17_fu_635_p2");
    sc_trace(mVcdFile, ap_phi_mux_word_count_V_flag_phi_fu_306_p6, "ap_phi_mux_word_count_V_flag_phi_fu_306_p6");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_word_count_V_flag_reg_303, "ap_phi_reg_pp0_iter0_word_count_V_flag_reg_303");
    sc_trace(mVcdFile, ap_phi_mux_word_count_V_flag_1_phi_fu_320_p4, "ap_phi_mux_word_count_V_flag_1_phi_fu_320_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_word_count_V_flag_1_reg_317, "ap_phi_reg_pp0_iter0_word_count_V_flag_1_reg_317");
    sc_trace(mVcdFile, ap_phi_mux_word_count_V_new_1_phi_fu_331_p4, "ap_phi_mux_word_count_V_new_1_phi_fu_331_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_word_count_V_new_1_reg_328, "ap_phi_reg_pp0_iter0_word_count_V_new_1_reg_328");
    sc_trace(mVcdFile, ap_phi_mux_word_count_V_flag_2_phi_fu_342_p4, "ap_phi_mux_word_count_V_flag_2_phi_fu_342_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_word_count_V_flag_2_reg_339, "ap_phi_reg_pp0_iter0_word_count_V_flag_2_reg_339");
    sc_trace(mVcdFile, ap_phi_mux_word_count_V_new_2_phi_fu_354_p4, "ap_phi_mux_word_count_V_new_2_phi_fu_354_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_word_count_V_new_2_reg_351, "ap_phi_reg_pp0_iter0_word_count_V_new_2_reg_351");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_mac_type_V_loc_1_reg_362, "ap_phi_reg_pp0_iter0_mac_type_V_loc_1_reg_362");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_mac_type_V_loc_1_reg_362, "ap_phi_reg_pp0_iter1_mac_type_V_loc_1_reg_362");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_ethernet_axi_id_V_lo_1_reg_373, "ap_phi_reg_pp0_iter0_ethernet_axi_id_V_lo_1_reg_373");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373, "ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373");
    sc_trace(mVcdFile, storemerge_fu_502_p1, "storemerge_fu_502_p1");
    sc_trace(mVcdFile, p_Result_3_i_fu_440_p4, "p_Result_3_i_fu_440_p4");
    sc_trace(mVcdFile, p_Result_i_fu_430_p4, "p_Result_i_fu_430_p4");
    sc_trace(mVcdFile, tmp_24_fu_480_p1, "tmp_24_fu_480_p1");
    sc_trace(mVcdFile, tmp_6_fu_484_p2, "tmp_6_fu_484_p2");
    sc_trace(mVcdFile, tmp_s_fu_490_p2, "tmp_s_fu_490_p2");
    sc_trace(mVcdFile, or_cond_fu_496_p2, "or_cond_fu_496_p2");
    sc_trace(mVcdFile, ap_NS_iter0_fsm, "ap_NS_iter0_fsm");
    sc_trace(mVcdFile, ap_NS_iter1_fsm, "ap_NS_iter1_fsm");
    sc_trace(mVcdFile, ap_NS_iter2_fsm, "ap_NS_iter2_fsm");
    sc_trace(mVcdFile, ap_NS_iter3_fsm, "ap_NS_iter3_fsm");
    sc_trace(mVcdFile, ap_condition_1639, "ap_condition_1639");
    sc_trace(mVcdFile, ap_condition_2423, "ap_condition_2423");
    sc_trace(mVcdFile, ap_condition_2217, "ap_condition_2217");
    sc_trace(mVcdFile, ap_condition_2692, "ap_condition_2692");
    sc_trace(mVcdFile, ap_condition_2233, "ap_condition_2233");
#endif

    }
    mHdltvinHandle.open("ethernet_axi_splitter.hdltvin.dat");
    mHdltvoutHandle.open("ethernet_axi_splitter.hdltvout.dat");
}

ethernet_axi_splitter::~ethernet_axi_splitter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void ethernet_axi_splitter::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter0_fsm = ap_ST_iter0_fsm_state1;
    } else {
        ap_CS_iter0_fsm = ap_NS_iter0_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter1_fsm = ap_ST_iter1_fsm_state0;
    } else {
        ap_CS_iter1_fsm = ap_NS_iter1_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter2_fsm = ap_ST_iter2_fsm_state0;
    } else {
        ap_CS_iter2_fsm = ap_NS_iter2_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter3_fsm = ap_ST_iter3_fsm_state0;
    } else {
        ap_CS_iter3_fsm = ap_NS_iter3_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, cond_fu_412_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_418_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_424_p2.read()))) {
        ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373 = data_in_TDATA.read().range(55, 48);
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && 
                 !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, cond_fu_412_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_418_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && 
                 !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, cond_fu_412_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_418_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_424_p2.read())))) {
        ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373 = ethernet_axi_id_V.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))))) {
        ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373 = ap_phi_reg_pp0_iter0_ethernet_axi_id_V_lo_1_reg_373.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, cond_fu_412_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_418_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_424_p2.read()))) {
        ap_phi_reg_pp0_iter1_mac_type_V_loc_1_reg_362 = tmp_i_fu_450_p3.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && 
                 !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, cond_fu_412_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_418_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && 
                 !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, cond_fu_412_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_418_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_424_p2.read())))) {
        ap_phi_reg_pp0_iter1_mac_type_V_loc_1_reg_362 = mac_type_V.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))))) {
        ap_phi_reg_pp0_iter1_mac_type_V_loc_1_reg_362 = ap_phi_reg_pp0_iter0_mac_type_V_loc_1_reg_362.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_vld_out.read()))) {
            data_out_V_data_V_1_sel_rd =  (sc_logic) (~data_out_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_ack_in.read()))) {
            data_out_V_data_V_1_sel_wr =  (sc_logic) (~data_out_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_data_V_1_state.read())))) {
            data_out_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_data_V_1_state.read())))) {
            data_out_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_ack_out.read()))))) {
            data_out_V_data_V_1_state = ap_const_lv2_3;
        } else {
            data_out_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_vld_out.read()))) {
            data_out_V_keep_V_1_sel_rd =  (sc_logic) (~data_out_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_ack_in.read()))) {
            data_out_V_keep_V_1_sel_wr =  (sc_logic) (~data_out_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_keep_V_1_state.read())))) {
            data_out_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_keep_V_1_state.read())))) {
            data_out_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_ack_out.read()))))) {
            data_out_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            data_out_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_out.read()))) {
            data_out_V_last_V_1_sel_rd =  (sc_logic) (~data_out_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_in.read()))) {
            data_out_V_last_V_1_sel_wr =  (sc_logic) (~data_out_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_last_V_1_state.read())))) {
            data_out_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read())))) {
            data_out_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_out.read()))))) {
            data_out_V_last_V_1_state = ap_const_lv2_3;
        } else {
            data_out_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_0_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_data_V_1_vld_out.read()))) {
            ethernet_axi_0_V_data_V_1_sel_rd =  (sc_logic) (~ethernet_axi_0_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_0_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_data_V_1_ack_in.read()))) {
            ethernet_axi_0_V_data_V_1_sel_wr =  (sc_logic) (~ethernet_axi_0_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_0_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ethernet_axi_0_V_data_V_1_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ethernet_axi_0_V_data_V_1_state.read(), ap_const_lv2_2)))) {
            ethernet_axi_0_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ethernet_axi_0_V_data_V_1_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ethernet_axi_0_V_data_V_1_state.read(), ap_const_lv2_1)))) {
            ethernet_axi_0_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ethernet_axi_0_V_data_V_1_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ethernet_axi_0_V_data_V_1_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(ethernet_axi_0_V_data_V_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_data_V_1_ack_out.read()))))) {
            ethernet_axi_0_V_data_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_0_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_0_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_keep_V_1_vld_out.read()))) {
            ethernet_axi_0_V_keep_V_1_sel_rd =  (sc_logic) (~ethernet_axi_0_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_0_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_keep_V_1_ack_in.read()))) {
            ethernet_axi_0_V_keep_V_1_sel_wr =  (sc_logic) (~ethernet_axi_0_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_0_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_0_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_0_V_keep_V_1_state.read())))) {
            ethernet_axi_0_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_0_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_0_V_keep_V_1_state.read())))) {
            ethernet_axi_0_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_0_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_0_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_0_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_keep_V_1_ack_out.read()))))) {
            ethernet_axi_0_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_0_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_0_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_last_V_1_vld_out.read()))) {
            ethernet_axi_0_V_last_V_1_sel_rd =  (sc_logic) (~ethernet_axi_0_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_0_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_last_V_1_ack_in.read()))) {
            ethernet_axi_0_V_last_V_1_sel_wr =  (sc_logic) (~ethernet_axi_0_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_0_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_0_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_0_V_last_V_1_state.read())))) {
            ethernet_axi_0_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_0_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_0_V_last_V_1_state.read())))) {
            ethernet_axi_0_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_0_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_0_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_0_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_last_V_1_ack_out.read()))))) {
            ethernet_axi_0_V_last_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_0_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_1_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_data_V_1_vld_out.read()))) {
            ethernet_axi_1_V_data_V_1_sel_rd =  (sc_logic) (~ethernet_axi_1_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_1_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_data_V_1_ack_in.read()))) {
            ethernet_axi_1_V_data_V_1_sel_wr =  (sc_logic) (~ethernet_axi_1_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_1_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_1_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_1_V_data_V_1_state.read())))) {
            ethernet_axi_1_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_1_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_1_V_data_V_1_state.read())))) {
            ethernet_axi_1_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_1_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_1_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_1_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_data_V_1_ack_out.read()))))) {
            ethernet_axi_1_V_data_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_1_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_1_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_keep_V_1_vld_out.read()))) {
            ethernet_axi_1_V_keep_V_1_sel_rd =  (sc_logic) (~ethernet_axi_1_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_1_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_keep_V_1_ack_in.read()))) {
            ethernet_axi_1_V_keep_V_1_sel_wr =  (sc_logic) (~ethernet_axi_1_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_1_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_1_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_1_V_keep_V_1_state.read())))) {
            ethernet_axi_1_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_1_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_1_V_keep_V_1_state.read())))) {
            ethernet_axi_1_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_1_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_1_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_1_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_keep_V_1_ack_out.read()))))) {
            ethernet_axi_1_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_1_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_1_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_last_V_1_vld_out.read()))) {
            ethernet_axi_1_V_last_V_1_sel_rd =  (sc_logic) (~ethernet_axi_1_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_1_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_last_V_1_ack_in.read()))) {
            ethernet_axi_1_V_last_V_1_sel_wr =  (sc_logic) (~ethernet_axi_1_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_1_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_1_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_1_V_last_V_1_state.read())))) {
            ethernet_axi_1_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_1_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_1_V_last_V_1_state.read())))) {
            ethernet_axi_1_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_1_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_1_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_1_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_last_V_1_ack_out.read()))))) {
            ethernet_axi_1_V_last_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_1_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_2_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_data_V_1_vld_out.read()))) {
            ethernet_axi_2_V_data_V_1_sel_rd =  (sc_logic) (~ethernet_axi_2_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_2_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_data_V_1_ack_in.read()))) {
            ethernet_axi_2_V_data_V_1_sel_wr =  (sc_logic) (~ethernet_axi_2_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_2_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_2_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_2_V_data_V_1_state.read())))) {
            ethernet_axi_2_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_2_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_2_V_data_V_1_state.read())))) {
            ethernet_axi_2_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_2_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_2_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_2_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_data_V_1_ack_out.read()))))) {
            ethernet_axi_2_V_data_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_2_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_2_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_keep_V_1_vld_out.read()))) {
            ethernet_axi_2_V_keep_V_1_sel_rd =  (sc_logic) (~ethernet_axi_2_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_2_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_keep_V_1_ack_in.read()))) {
            ethernet_axi_2_V_keep_V_1_sel_wr =  (sc_logic) (~ethernet_axi_2_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_2_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_2_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_2_V_keep_V_1_state.read())))) {
            ethernet_axi_2_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_2_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_2_V_keep_V_1_state.read())))) {
            ethernet_axi_2_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_2_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_2_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_2_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_keep_V_1_ack_out.read()))))) {
            ethernet_axi_2_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_2_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_2_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_last_V_1_vld_out.read()))) {
            ethernet_axi_2_V_last_V_1_sel_rd =  (sc_logic) (~ethernet_axi_2_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_2_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_last_V_1_ack_in.read()))) {
            ethernet_axi_2_V_last_V_1_sel_wr =  (sc_logic) (~ethernet_axi_2_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_2_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_2_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_2_V_last_V_1_state.read())))) {
            ethernet_axi_2_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_2_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_2_V_last_V_1_state.read())))) {
            ethernet_axi_2_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_2_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_2_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_2_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_last_V_1_ack_out.read()))))) {
            ethernet_axi_2_V_last_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_2_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_3_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_data_V_1_vld_out.read()))) {
            ethernet_axi_3_V_data_V_1_sel_rd =  (sc_logic) (~ethernet_axi_3_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_3_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_data_V_1_ack_in.read()))) {
            ethernet_axi_3_V_data_V_1_sel_wr =  (sc_logic) (~ethernet_axi_3_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_3_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_3_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_3_V_data_V_1_state.read())))) {
            ethernet_axi_3_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_3_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_3_V_data_V_1_state.read())))) {
            ethernet_axi_3_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_3_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_3_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_3_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_data_V_1_ack_out.read()))))) {
            ethernet_axi_3_V_data_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_3_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_3_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_keep_V_1_vld_out.read()))) {
            ethernet_axi_3_V_keep_V_1_sel_rd =  (sc_logic) (~ethernet_axi_3_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_3_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_keep_V_1_ack_in.read()))) {
            ethernet_axi_3_V_keep_V_1_sel_wr =  (sc_logic) (~ethernet_axi_3_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_3_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_3_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_3_V_keep_V_1_state.read())))) {
            ethernet_axi_3_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_3_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_3_V_keep_V_1_state.read())))) {
            ethernet_axi_3_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_3_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_3_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_3_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_keep_V_1_ack_out.read()))))) {
            ethernet_axi_3_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_3_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_3_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_last_V_1_vld_out.read()))) {
            ethernet_axi_3_V_last_V_1_sel_rd =  (sc_logic) (~ethernet_axi_3_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_3_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_last_V_1_ack_in.read()))) {
            ethernet_axi_3_V_last_V_1_sel_wr =  (sc_logic) (~ethernet_axi_3_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_3_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_3_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_3_V_last_V_1_state.read())))) {
            ethernet_axi_3_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_3_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_3_V_last_V_1_state.read())))) {
            ethernet_axi_3_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_3_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_3_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_3_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_last_V_1_ack_out.read()))))) {
            ethernet_axi_3_V_last_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_3_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_4_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_data_V_1_vld_out.read()))) {
            ethernet_axi_4_V_data_V_1_sel_rd =  (sc_logic) (~ethernet_axi_4_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_4_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_data_V_1_ack_in.read()))) {
            ethernet_axi_4_V_data_V_1_sel_wr =  (sc_logic) (~ethernet_axi_4_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_4_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_4_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_4_V_data_V_1_state.read())))) {
            ethernet_axi_4_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_4_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_4_V_data_V_1_state.read())))) {
            ethernet_axi_4_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_4_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_4_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_4_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_data_V_1_ack_out.read()))))) {
            ethernet_axi_4_V_data_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_4_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_4_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_keep_V_1_vld_out.read()))) {
            ethernet_axi_4_V_keep_V_1_sel_rd =  (sc_logic) (~ethernet_axi_4_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_4_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_keep_V_1_ack_in.read()))) {
            ethernet_axi_4_V_keep_V_1_sel_wr =  (sc_logic) (~ethernet_axi_4_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_4_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_4_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_4_V_keep_V_1_state.read())))) {
            ethernet_axi_4_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_4_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_4_V_keep_V_1_state.read())))) {
            ethernet_axi_4_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_4_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_4_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_4_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_keep_V_1_ack_out.read()))))) {
            ethernet_axi_4_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_4_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_4_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_last_V_1_vld_out.read()))) {
            ethernet_axi_4_V_last_V_1_sel_rd =  (sc_logic) (~ethernet_axi_4_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_4_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_last_V_1_ack_in.read()))) {
            ethernet_axi_4_V_last_V_1_sel_wr =  (sc_logic) (~ethernet_axi_4_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_4_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_4_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_4_V_last_V_1_state.read())))) {
            ethernet_axi_4_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_4_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_4_V_last_V_1_state.read())))) {
            ethernet_axi_4_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_4_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_4_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_4_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_last_V_1_ack_out.read()))))) {
            ethernet_axi_4_V_last_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_4_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_5_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_data_V_1_vld_out.read()))) {
            ethernet_axi_5_V_data_V_1_sel_rd =  (sc_logic) (~ethernet_axi_5_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_5_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_data_V_1_ack_in.read()))) {
            ethernet_axi_5_V_data_V_1_sel_wr =  (sc_logic) (~ethernet_axi_5_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_5_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_5_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_5_V_data_V_1_state.read())))) {
            ethernet_axi_5_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_5_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_5_V_data_V_1_state.read())))) {
            ethernet_axi_5_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_5_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_5_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_5_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_data_V_1_ack_out.read()))))) {
            ethernet_axi_5_V_data_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_5_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_5_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_keep_V_1_vld_out.read()))) {
            ethernet_axi_5_V_keep_V_1_sel_rd =  (sc_logic) (~ethernet_axi_5_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_5_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_keep_V_1_ack_in.read()))) {
            ethernet_axi_5_V_keep_V_1_sel_wr =  (sc_logic) (~ethernet_axi_5_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_5_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_5_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_5_V_keep_V_1_state.read())))) {
            ethernet_axi_5_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_5_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_5_V_keep_V_1_state.read())))) {
            ethernet_axi_5_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_5_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_5_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_5_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_keep_V_1_ack_out.read()))))) {
            ethernet_axi_5_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_5_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_5_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_last_V_1_vld_out.read()))) {
            ethernet_axi_5_V_last_V_1_sel_rd =  (sc_logic) (~ethernet_axi_5_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_5_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_last_V_1_ack_in.read()))) {
            ethernet_axi_5_V_last_V_1_sel_wr =  (sc_logic) (~ethernet_axi_5_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_5_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_5_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_5_V_last_V_1_state.read())))) {
            ethernet_axi_5_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_5_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_5_V_last_V_1_state.read())))) {
            ethernet_axi_5_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_5_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_5_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_5_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_last_V_1_ack_out.read()))))) {
            ethernet_axi_5_V_last_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_5_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_6_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_data_V_1_vld_out.read()))) {
            ethernet_axi_6_V_data_V_1_sel_rd =  (sc_logic) (~ethernet_axi_6_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_6_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_data_V_1_ack_in.read()))) {
            ethernet_axi_6_V_data_V_1_sel_wr =  (sc_logic) (~ethernet_axi_6_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_6_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_6_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_6_V_data_V_1_state.read())))) {
            ethernet_axi_6_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_6_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_6_V_data_V_1_state.read())))) {
            ethernet_axi_6_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_6_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_6_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_6_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_data_V_1_ack_out.read()))))) {
            ethernet_axi_6_V_data_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_6_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_6_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_keep_V_1_vld_out.read()))) {
            ethernet_axi_6_V_keep_V_1_sel_rd =  (sc_logic) (~ethernet_axi_6_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_6_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_keep_V_1_ack_in.read()))) {
            ethernet_axi_6_V_keep_V_1_sel_wr =  (sc_logic) (~ethernet_axi_6_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_6_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_6_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_6_V_keep_V_1_state.read())))) {
            ethernet_axi_6_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_6_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_6_V_keep_V_1_state.read())))) {
            ethernet_axi_6_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_6_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_6_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_6_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_keep_V_1_ack_out.read()))))) {
            ethernet_axi_6_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_6_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_6_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_last_V_1_vld_out.read()))) {
            ethernet_axi_6_V_last_V_1_sel_rd =  (sc_logic) (~ethernet_axi_6_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_6_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_last_V_1_ack_in.read()))) {
            ethernet_axi_6_V_last_V_1_sel_wr =  (sc_logic) (~ethernet_axi_6_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_6_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_6_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_6_V_last_V_1_state.read())))) {
            ethernet_axi_6_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_6_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_6_V_last_V_1_state.read())))) {
            ethernet_axi_6_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_6_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_6_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_6_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_last_V_1_ack_out.read()))))) {
            ethernet_axi_6_V_last_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_6_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_7_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_data_V_1_vld_out.read()))) {
            ethernet_axi_7_V_data_V_1_sel_rd =  (sc_logic) (~ethernet_axi_7_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_7_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_data_V_1_ack_in.read()))) {
            ethernet_axi_7_V_data_V_1_sel_wr =  (sc_logic) (~ethernet_axi_7_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_7_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_7_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_7_V_data_V_1_state.read())))) {
            ethernet_axi_7_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_7_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_7_V_data_V_1_state.read())))) {
            ethernet_axi_7_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_7_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_7_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_7_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_data_V_1_ack_out.read()))))) {
            ethernet_axi_7_V_data_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_7_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_7_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_keep_V_1_vld_out.read()))) {
            ethernet_axi_7_V_keep_V_1_sel_rd =  (sc_logic) (~ethernet_axi_7_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_7_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_keep_V_1_ack_in.read()))) {
            ethernet_axi_7_V_keep_V_1_sel_wr =  (sc_logic) (~ethernet_axi_7_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_7_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_7_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_7_V_keep_V_1_state.read())))) {
            ethernet_axi_7_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_7_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_7_V_keep_V_1_state.read())))) {
            ethernet_axi_7_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_7_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_7_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_7_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_keep_V_1_ack_out.read()))))) {
            ethernet_axi_7_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_7_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_7_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_last_V_1_vld_out.read()))) {
            ethernet_axi_7_V_last_V_1_sel_rd =  (sc_logic) (~ethernet_axi_7_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_7_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_last_V_1_ack_in.read()))) {
            ethernet_axi_7_V_last_V_1_sel_wr =  (sc_logic) (~ethernet_axi_7_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ethernet_axi_7_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_7_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_7_V_last_V_1_state.read())))) {
            ethernet_axi_7_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_7_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_7_V_last_V_1_state.read())))) {
            ethernet_axi_7_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, ethernet_axi_7_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, ethernet_axi_7_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, ethernet_axi_7_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_last_V_1_ack_out.read()))))) {
            ethernet_axi_7_V_last_V_1_state = ap_const_lv2_3;
        } else {
            ethernet_axi_7_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_2217.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_load_fu_384_p1.read())) {
            fsm_state_V = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_condition_2423.read(), ap_const_boolean_1)) {
            fsm_state_V = ap_const_lv1_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_2233.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, cond_fu_412_p2.read())) {
            mac_type_V = storemerge_fu_502_p1.read();
        } else if (esl_seteq<1,1,1>(ap_condition_2692.read(), ap_const_boolean_1)) {
            mac_type_V = tmp_i_fu_450_p3.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))))) {
        cond_reg_739 = cond_fu_412_p2.read();
        tmp_data_V_reg_724 = data_in_TDATA.read();
        tmp_keep_V_reg_729 = data_in_TKEEP.read();
        tmp_last_V_reg_734 = data_in_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))))) {
        cond_reg_739_pp0_iter1_reg = cond_reg_739.read();
        fsm_state_V_load_reg_694_pp0_iter1_reg = fsm_state_V_load_reg_694.read();
        tmp_data_V_reg_724_pp0_iter1_reg = tmp_data_V_reg_724.read();
        tmp_keep_V_reg_729_pp0_iter1_reg = tmp_keep_V_reg_729.read();
        tmp_last_V_reg_734_pp0_iter1_reg = tmp_last_V_reg_734.read();
        tmp_reg_720_pp0_iter1_reg = tmp_reg_720.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))))) {
        cond_reg_739_pp0_iter2_reg = cond_reg_739_pp0_iter1_reg.read();
        fsm_state_V_load_reg_694_pp0_iter2_reg = fsm_state_V_load_reg_694_pp0_iter1_reg.read();
        tmp_10_reg_759_pp0_iter2_reg = tmp_10_reg_759.read();
        tmp_11_reg_823_pp0_iter2_reg = tmp_11_reg_823.read();
        tmp_12_reg_763_pp0_iter2_reg = tmp_12_reg_763.read();
        tmp_13_reg_827_pp0_iter2_reg = tmp_13_reg_827.read();
        tmp_14_reg_767_pp0_iter2_reg = tmp_14_reg_767.read();
        tmp_15_reg_831_pp0_iter2_reg = tmp_15_reg_831.read();
        tmp_16_reg_771_pp0_iter2_reg = tmp_16_reg_771.read();
        tmp_17_reg_835_pp0_iter2_reg = tmp_17_reg_835.read();
        tmp_18_reg_775_pp0_iter2_reg = tmp_18_reg_775.read();
        tmp_19_reg_779_pp0_iter2_reg = tmp_19_reg_779.read();
        tmp_1_reg_815_pp0_iter2_reg = tmp_1_reg_815.read();
        tmp_20_reg_783_pp0_iter2_reg = tmp_20_reg_783.read();
        tmp_21_reg_787_pp0_iter2_reg = tmp_21_reg_787.read();
        tmp_22_reg_791_pp0_iter2_reg = tmp_22_reg_791.read();
        tmp_23_reg_795_pp0_iter2_reg = tmp_23_reg_795.read();
        tmp_2_reg_799_pp0_iter2_reg = tmp_2_reg_799.read();
        tmp_4_reg_803_pp0_iter2_reg = tmp_4_reg_803.read();
        tmp_5_reg_819_pp0_iter2_reg = tmp_5_reg_819.read();
        tmp_8_reg_811_pp0_iter2_reg = tmp_8_reg_811.read();
        tmp_9_reg_807_pp0_iter2_reg = tmp_9_reg_807.read();
        tmp_reg_720_pp0_iter2_reg = tmp_reg_720_pp0_iter1_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_load_A.read())) {
        data_out_V_data_V_1_payload_A = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_load_B.read())) {
        data_out_V_data_V_1_payload_B = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_load_A.read())) {
        data_out_V_keep_V_1_payload_A = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_load_B.read())) {
        data_out_V_keep_V_1_payload_B = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_load_A.read())) {
        data_out_V_last_V_1_payload_A = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_load_B.read())) {
        data_out_V_last_V_1_payload_B = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_data_V_1_load_A.read())) {
        ethernet_axi_0_V_data_V_1_payload_A = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_data_V_1_load_B.read())) {
        ethernet_axi_0_V_data_V_1_payload_B = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_keep_V_1_load_A.read())) {
        ethernet_axi_0_V_keep_V_1_payload_A = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_keep_V_1_load_B.read())) {
        ethernet_axi_0_V_keep_V_1_payload_B = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_last_V_1_load_A.read())) {
        ethernet_axi_0_V_last_V_1_payload_A = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_last_V_1_load_B.read())) {
        ethernet_axi_0_V_last_V_1_payload_B = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_data_V_1_load_A.read())) {
        ethernet_axi_1_V_data_V_1_payload_A = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_data_V_1_load_B.read())) {
        ethernet_axi_1_V_data_V_1_payload_B = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_keep_V_1_load_A.read())) {
        ethernet_axi_1_V_keep_V_1_payload_A = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_keep_V_1_load_B.read())) {
        ethernet_axi_1_V_keep_V_1_payload_B = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_last_V_1_load_A.read())) {
        ethernet_axi_1_V_last_V_1_payload_A = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_last_V_1_load_B.read())) {
        ethernet_axi_1_V_last_V_1_payload_B = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_data_V_1_load_A.read())) {
        ethernet_axi_2_V_data_V_1_payload_A = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_data_V_1_load_B.read())) {
        ethernet_axi_2_V_data_V_1_payload_B = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_keep_V_1_load_A.read())) {
        ethernet_axi_2_V_keep_V_1_payload_A = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_keep_V_1_load_B.read())) {
        ethernet_axi_2_V_keep_V_1_payload_B = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_last_V_1_load_A.read())) {
        ethernet_axi_2_V_last_V_1_payload_A = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_last_V_1_load_B.read())) {
        ethernet_axi_2_V_last_V_1_payload_B = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_data_V_1_load_A.read())) {
        ethernet_axi_3_V_data_V_1_payload_A = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_data_V_1_load_B.read())) {
        ethernet_axi_3_V_data_V_1_payload_B = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_keep_V_1_load_A.read())) {
        ethernet_axi_3_V_keep_V_1_payload_A = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_keep_V_1_load_B.read())) {
        ethernet_axi_3_V_keep_V_1_payload_B = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_last_V_1_load_A.read())) {
        ethernet_axi_3_V_last_V_1_payload_A = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_last_V_1_load_B.read())) {
        ethernet_axi_3_V_last_V_1_payload_B = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_data_V_1_load_A.read())) {
        ethernet_axi_4_V_data_V_1_payload_A = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_data_V_1_load_B.read())) {
        ethernet_axi_4_V_data_V_1_payload_B = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_keep_V_1_load_A.read())) {
        ethernet_axi_4_V_keep_V_1_payload_A = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_keep_V_1_load_B.read())) {
        ethernet_axi_4_V_keep_V_1_payload_B = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_last_V_1_load_A.read())) {
        ethernet_axi_4_V_last_V_1_payload_A = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_last_V_1_load_B.read())) {
        ethernet_axi_4_V_last_V_1_payload_B = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_data_V_1_load_A.read())) {
        ethernet_axi_5_V_data_V_1_payload_A = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_data_V_1_load_B.read())) {
        ethernet_axi_5_V_data_V_1_payload_B = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_keep_V_1_load_A.read())) {
        ethernet_axi_5_V_keep_V_1_payload_A = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_keep_V_1_load_B.read())) {
        ethernet_axi_5_V_keep_V_1_payload_B = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_last_V_1_load_A.read())) {
        ethernet_axi_5_V_last_V_1_payload_A = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_last_V_1_load_B.read())) {
        ethernet_axi_5_V_last_V_1_payload_B = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_data_V_1_load_A.read())) {
        ethernet_axi_6_V_data_V_1_payload_A = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_data_V_1_load_B.read())) {
        ethernet_axi_6_V_data_V_1_payload_B = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_keep_V_1_load_A.read())) {
        ethernet_axi_6_V_keep_V_1_payload_A = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_keep_V_1_load_B.read())) {
        ethernet_axi_6_V_keep_V_1_payload_B = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_last_V_1_load_A.read())) {
        ethernet_axi_6_V_last_V_1_payload_A = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_last_V_1_load_B.read())) {
        ethernet_axi_6_V_last_V_1_payload_B = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_data_V_1_load_A.read())) {
        ethernet_axi_7_V_data_V_1_payload_A = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_data_V_1_load_B.read())) {
        ethernet_axi_7_V_data_V_1_payload_B = prev_word_data_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_keep_V_1_load_A.read())) {
        ethernet_axi_7_V_keep_V_1_payload_A = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_keep_V_1_load_B.read())) {
        ethernet_axi_7_V_keep_V_1_payload_B = prev_word_keep_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_last_V_1_load_A.read())) {
        ethernet_axi_7_V_last_V_1_payload_A = prev_word_last_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_last_V_1_load_B.read())) {
        ethernet_axi_7_V_last_V_1_payload_B = prev_word_last_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_fu_412_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_418_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_424_p2.read()))) {
        ethernet_axi_id_V = data_in_TDATA.read().range(55, 48);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))))) {
        ethernet_axi_id_V_lo_reg_706 = ethernet_axi_id_V.read();
        fsm_state_V_load_reg_694 = fsm_state_V.read();
        mac_type_V_load_reg_698 = mac_type_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))))) {
        prev_word_data_V = tmp_data_V_reg_724_pp0_iter1_reg.read();
        prev_word_keep_V = tmp_keep_V_reg_729_pp0_iter1_reg.read();
        prev_word_last_V = tmp_last_V_reg_734_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter0_reg.read()))) {
        tmp_10_reg_759 = tmp_10_fu_530_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_590_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_595_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_600_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_605_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_610_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_615_p2.read()))) {
        tmp_11_reg_823 = tmp_11_fu_620_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_530_p2.read()))) {
        tmp_12_reg_763 = tmp_12_fu_536_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_590_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_595_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_600_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_605_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_610_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_615_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_620_p2.read()))) {
        tmp_13_reg_827 = tmp_13_fu_625_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_530_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()))) {
        tmp_14_reg_767 = tmp_14_fu_542_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_590_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_595_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_600_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_605_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_610_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_615_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_620_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_625_p2.read()))) {
        tmp_15_reg_831 = tmp_15_fu_630_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_530_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_fu_542_p2.read()))) {
        tmp_16_reg_771 = tmp_16_fu_548_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && ((esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_595_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_600_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_605_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_610_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_615_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_620_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_625_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_fu_630_p2.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_590_p2.read()))))) {
        tmp_17_reg_835 = tmp_17_fu_635_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_530_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_fu_542_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_548_p2.read()))) {
        tmp_18_reg_775 = tmp_18_fu_554_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_530_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_fu_542_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_548_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_554_p2.read()))) {
        tmp_19_reg_779 = tmp_19_fu_560_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_590_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_595_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_600_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_605_p2.read()))) {
        tmp_1_reg_815 = tmp_1_fu_610_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_530_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_fu_542_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_548_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_554_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_560_p2.read()))) {
        tmp_20_reg_783 = tmp_20_fu_566_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_530_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_fu_542_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_548_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_554_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_560_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_fu_566_p2.read()))) {
        tmp_21_reg_787 = tmp_21_fu_572_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_530_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_fu_542_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_548_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_554_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_560_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_fu_572_p2.read()))) {
        tmp_22_reg_791 = tmp_22_fu_578_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && ((esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter0_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter0_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_fu_542_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_548_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_fu_554_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_560_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_fu_566_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_fu_572_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_22_fu_578_p2.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter0_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter0_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_530_p2.read()))))) {
        tmp_23_reg_795 = tmp_23_fu_584_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter0_reg.read()))) {
        tmp_2_reg_799 = tmp_2_fu_590_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_590_p2.read()))) {
        tmp_4_reg_803 = tmp_4_fu_595_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_590_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_595_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_600_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_605_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_610_p2.read()))) {
        tmp_5_reg_819 = tmp_5_fu_615_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_590_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_595_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_600_p2.read()))) {
        tmp_8_reg_811 = tmp_8_fu_605_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter0_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_590_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_595_p2.read()))) {
        tmp_9_reg_807 = tmp_9_fu_600_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))))) {
        tmp_reg_720 = tmp_nbreadreq_fu_164_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_word_count_V_flag_2_phi_fu_342_p4.read()))) {
        word_count_V = ap_phi_mux_word_count_V_new_2_phi_fu_354_p4.read();
    }
}

void ethernet_axi_splitter::thread_ap_CS_iter0_fsm_state1() {
    ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm.read()[0];
}

void ethernet_axi_splitter::thread_ap_CS_iter1_fsm_state2() {
    ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm.read()[1];
}

void ethernet_axi_splitter::thread_ap_CS_iter2_fsm_state3() {
    ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm.read()[1];
}

void ethernet_axi_splitter::thread_ap_CS_iter3_fsm_state4() {
    ap_CS_iter3_fsm_state4 = ap_CS_iter3_fsm.read()[1];
}

void ethernet_axi_splitter::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()));
}

void ethernet_axi_splitter::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ethernet_axi_splitter::thread_ap_block_state3_io() {
    ap_block_state3_io = ((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op94_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op95_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op97_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op98_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op100_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op102_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op106_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op107_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op109_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op110_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op111_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op112_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op113_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_write_state3.read())));
}

void ethernet_axi_splitter::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ethernet_axi_splitter::thread_ap_block_state4_io() {
    ap_block_state4_io = ((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op163_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op166_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op172_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op175_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op178_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op181_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op184_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op189_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op192_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op195_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op198_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op201_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op204_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op207_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op210_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op213_write_state4.read())));
}

void ethernet_axi_splitter::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()));
}

void ethernet_axi_splitter::thread_ap_condition_1639() {
    ap_condition_1639 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()));
}

void ethernet_axi_splitter::thread_ap_condition_2217() {
    ap_condition_2217 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))));
}

void ethernet_axi_splitter::thread_ap_condition_2233() {
    ap_condition_2233 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))));
}

void ethernet_axi_splitter::thread_ap_condition_2423() {
    ap_condition_2423 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_404_p1.read()));
}

void ethernet_axi_splitter::thread_ap_condition_2692() {
    ap_condition_2692 = (esl_seteq<1,1,1>(ap_const_lv1_0, cond_fu_412_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_418_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_424_p2.read()));
}

void ethernet_axi_splitter::thread_ap_phi_mux_word_count_V_flag_1_phi_fu_320_p4() {
    if (esl_seteq<1,1,1>(ap_condition_1639.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, cond_fu_412_p2.read())) {
            ap_phi_mux_word_count_V_flag_1_phi_fu_320_p4 = ap_phi_mux_word_count_V_flag_phi_fu_306_p6.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, cond_fu_412_p2.read())) {
            ap_phi_mux_word_count_V_flag_1_phi_fu_320_p4 = ap_const_lv1_1;
        } else {
            ap_phi_mux_word_count_V_flag_1_phi_fu_320_p4 = ap_phi_reg_pp0_iter0_word_count_V_flag_1_reg_317.read();
        }
    } else {
        ap_phi_mux_word_count_V_flag_1_phi_fu_320_p4 = ap_phi_reg_pp0_iter0_word_count_V_flag_1_reg_317.read();
    }
}

void ethernet_axi_splitter::thread_ap_phi_mux_word_count_V_flag_2_phi_fu_342_p4() {
    if (esl_seteq<1,1,1>(ap_condition_1639.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_fu_404_p1.read())) {
            ap_phi_mux_word_count_V_flag_2_phi_fu_342_p4 = ap_phi_mux_word_count_V_flag_1_phi_fu_320_p4.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_404_p1.read())) {
            ap_phi_mux_word_count_V_flag_2_phi_fu_342_p4 = ap_const_lv1_1;
        } else {
            ap_phi_mux_word_count_V_flag_2_phi_fu_342_p4 = ap_phi_reg_pp0_iter0_word_count_V_flag_2_reg_339.read();
        }
    } else {
        ap_phi_mux_word_count_V_flag_2_phi_fu_342_p4 = ap_phi_reg_pp0_iter0_word_count_V_flag_2_reg_339.read();
    }
}

void ethernet_axi_splitter::thread_ap_phi_mux_word_count_V_flag_phi_fu_306_p6() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_fu_412_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_418_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_424_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_fu_412_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_418_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_424_p2.read())))) {
        ap_phi_mux_word_count_V_flag_phi_fu_306_p6 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, cond_fu_412_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_418_p2.read()))) {
        ap_phi_mux_word_count_V_flag_phi_fu_306_p6 = ap_const_lv1_0;
    } else {
        ap_phi_mux_word_count_V_flag_phi_fu_306_p6 = ap_phi_reg_pp0_iter0_word_count_V_flag_reg_303.read();
    }
}

void ethernet_axi_splitter::thread_ap_phi_mux_word_count_V_new_1_phi_fu_331_p4() {
    if (esl_seteq<1,1,1>(ap_condition_1639.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, cond_fu_412_p2.read())) {
            ap_phi_mux_word_count_V_new_1_phi_fu_331_p4 = ap_const_lv2_2;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, cond_fu_412_p2.read())) {
            ap_phi_mux_word_count_V_new_1_phi_fu_331_p4 = ap_const_lv2_1;
        } else {
            ap_phi_mux_word_count_V_new_1_phi_fu_331_p4 = ap_phi_reg_pp0_iter0_word_count_V_new_1_reg_328.read();
        }
    } else {
        ap_phi_mux_word_count_V_new_1_phi_fu_331_p4 = ap_phi_reg_pp0_iter0_word_count_V_new_1_reg_328.read();
    }
}

void ethernet_axi_splitter::thread_ap_phi_mux_word_count_V_new_2_phi_fu_354_p4() {
    if (esl_seteq<1,1,1>(ap_condition_1639.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_fu_404_p1.read())) {
            ap_phi_mux_word_count_V_new_2_phi_fu_354_p4 = ap_phi_mux_word_count_V_new_1_phi_fu_331_p4.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_404_p1.read())) {
            ap_phi_mux_word_count_V_new_2_phi_fu_354_p4 = ap_const_lv2_0;
        } else {
            ap_phi_mux_word_count_V_new_2_phi_fu_354_p4 = ap_phi_reg_pp0_iter0_word_count_V_new_2_reg_351.read();
        }
    } else {
        ap_phi_mux_word_count_V_new_2_phi_fu_354_p4 = ap_phi_reg_pp0_iter0_word_count_V_new_2_reg_351.read();
    }
}

void ethernet_axi_splitter::thread_ap_phi_reg_pp0_iter0_ethernet_axi_id_V_lo_1_reg_373() {
    ap_phi_reg_pp0_iter0_ethernet_axi_id_V_lo_1_reg_373 =  (sc_lv<8>) ("XXXXXXXX");
}

void ethernet_axi_splitter::thread_ap_phi_reg_pp0_iter0_mac_type_V_loc_1_reg_362() {
    ap_phi_reg_pp0_iter0_mac_type_V_loc_1_reg_362 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
}

void ethernet_axi_splitter::thread_ap_phi_reg_pp0_iter0_word_count_V_flag_1_reg_317() {
    ap_phi_reg_pp0_iter0_word_count_V_flag_1_reg_317 = "X";
}

void ethernet_axi_splitter::thread_ap_phi_reg_pp0_iter0_word_count_V_flag_2_reg_339() {
    ap_phi_reg_pp0_iter0_word_count_V_flag_2_reg_339 = "X";
}

void ethernet_axi_splitter::thread_ap_phi_reg_pp0_iter0_word_count_V_flag_reg_303() {
    ap_phi_reg_pp0_iter0_word_count_V_flag_reg_303 = "X";
}

void ethernet_axi_splitter::thread_ap_phi_reg_pp0_iter0_word_count_V_new_1_reg_328() {
    ap_phi_reg_pp0_iter0_word_count_V_new_1_reg_328 =  (sc_lv<2>) ("XX");
}

void ethernet_axi_splitter::thread_ap_phi_reg_pp0_iter0_word_count_V_new_2_reg_351() {
    ap_phi_reg_pp0_iter0_word_count_V_new_2_reg_351 =  (sc_lv<2>) ("XX");
}

void ethernet_axi_splitter::thread_ap_predicate_op100_write_state3() {
    ap_predicate_op100_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_771.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op101_write_state3() {
    ap_predicate_op101_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_reg_767.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op102_write_state3() {
    ap_predicate_op102_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_reg_763.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op106_write_state3() {
    ap_predicate_op106_write_state3 = ((esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_823.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_reg_827.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_831.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_reg_835.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_reg_835.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_799.read())));
}

void ethernet_axi_splitter::thread_ap_predicate_op107_write_state3() {
    ap_predicate_op107_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_823.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_reg_827.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_reg_831.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op108_write_state3() {
    ap_predicate_op108_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_823.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_reg_827.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op109_write_state3() {
    ap_predicate_op109_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_823.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op110_write_state3() {
    ap_predicate_op110_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_819.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op111_write_state3() {
    ap_predicate_op111_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_815.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op112_write_state3() {
    ap_predicate_op112_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_811.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op113_write_state3() {
    ap_predicate_op113_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_807.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op114_write_state3() {
    ap_predicate_op114_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_803.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op12_read_state1() {
    ap_predicate_op12_read_state1 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op160_write_state4() {
    ap_predicate_op160_write_state4 = ((esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_783_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_reg_787_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_22_reg_791_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_795_pp0_iter2_reg.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_795_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_759_pp0_iter2_reg.read())));
}

void ethernet_axi_splitter::thread_ap_predicate_op163_write_state4() {
    ap_predicate_op163_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_783_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_reg_787_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_22_reg_791_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op166_write_state4() {
    ap_predicate_op166_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_783_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_reg_787_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op169_write_state4() {
    ap_predicate_op169_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_reg_783_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op172_write_state4() {
    ap_predicate_op172_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_reg_779_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op175_write_state4() {
    ap_predicate_op175_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_reg_775_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op178_write_state4() {
    ap_predicate_op178_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_771_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op181_write_state4() {
    ap_predicate_op181_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_reg_767_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op184_write_state4() {
    ap_predicate_op184_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_reg_763_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op189_write_state4() {
    ap_predicate_op189_write_state4 = ((esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_823_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_reg_827_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_831_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_reg_835_pp0_iter2_reg.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_reg_835_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_799_pp0_iter2_reg.read())));
}

void ethernet_axi_splitter::thread_ap_predicate_op192_write_state4() {
    ap_predicate_op192_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_823_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_reg_827_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_reg_831_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op195_write_state4() {
    ap_predicate_op195_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_823_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_reg_827_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op198_write_state4() {
    ap_predicate_op198_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_823_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op201_write_state4() {
    ap_predicate_op201_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_819_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op204_write_state4() {
    ap_predicate_op204_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_815_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op207_write_state4() {
    ap_predicate_op207_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_811_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op210_write_state4() {
    ap_predicate_op210_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_807_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op213_write_state4() {
    ap_predicate_op213_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_803_pp0_iter2_reg.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op94_write_state3() {
    ap_predicate_op94_write_state3 = ((esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_783.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_reg_787.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_22_reg_791.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_795.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_795.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_759.read())));
}

void ethernet_axi_splitter::thread_ap_predicate_op95_write_state3() {
    ap_predicate_op95_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_783.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_reg_787.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_22_reg_791.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op96_write_state3() {
    ap_predicate_op96_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_783.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_reg_787.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op97_write_state3() {
    ap_predicate_op97_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_reg_783.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op98_write_state3() {
    ap_predicate_op98_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_reg_779.read()));
}

void ethernet_axi_splitter::thread_ap_predicate_op99_write_state3() {
    ap_predicate_op99_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_reg_775.read()));
}

void ethernet_axi_splitter::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void ethernet_axi_splitter::thread_cond_fu_412_p2() {
    cond_fu_412_p2 = (!word_count_V.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(word_count_V.read() == ap_const_lv2_0);
}

void ethernet_axi_splitter::thread_cond_reg_739_pp0_iter0_reg() {
    cond_reg_739_pp0_iter0_reg = cond_reg_739.read();
}

void ethernet_axi_splitter::thread_data_in_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_164_p5.read()))) {
        data_in_TDATA_blk_n = data_in_TVALID.read();
    } else {
        data_in_TDATA_blk_n = ap_const_logic_1;
    }
}

void ethernet_axi_splitter::thread_data_in_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))))) {
        data_in_TREADY = ap_const_logic_1;
    } else {
        data_in_TREADY = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_data_out_TDATA() {
    data_out_TDATA = data_out_V_data_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_data_out_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_783.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_reg_787.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_22_reg_791.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_795.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_795.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_759.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_783_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_reg_787_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_22_reg_791_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_795_pp0_iter2_reg.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_795_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_759_pp0_iter2_reg.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_823.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_reg_827.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_831.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_reg_835.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_reg_835.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_799.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_823_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_reg_827_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_831_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_reg_835_pp0_iter2_reg.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_reg_835_pp0_iter2_reg.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_799_pp0_iter2_reg.read())))))) {
        data_out_TDATA_blk_n = data_out_V_data_V_1_state.read()[1];
    } else {
        data_out_TDATA_blk_n = ap_const_logic_1;
    }
}

void ethernet_axi_splitter::thread_data_out_TKEEP() {
    data_out_TKEEP = data_out_V_keep_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_data_out_TLAST() {
    data_out_TLAST = data_out_V_last_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_data_out_TVALID() {
    data_out_TVALID = data_out_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_data_out_V_data_V_1_ack_in() {
    data_out_V_data_V_1_ack_in = data_out_V_data_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_data_out_V_data_V_1_ack_out() {
    data_out_V_data_V_1_ack_out = data_out_TREADY.read();
}

void ethernet_axi_splitter::thread_data_out_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_data_V_1_sel.read())) {
        data_out_V_data_V_1_data_out = data_out_V_data_V_1_payload_B.read();
    } else {
        data_out_V_data_V_1_data_out = data_out_V_data_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_data_out_V_data_V_1_load_A() {
    data_out_V_data_V_1_load_A = (data_out_V_data_V_1_state_cmp_full.read() & ~data_out_V_data_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_data_out_V_data_V_1_load_B() {
    data_out_V_data_V_1_load_B = (data_out_V_data_V_1_sel_wr.read() & data_out_V_data_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_data_out_V_data_V_1_sel() {
    data_out_V_data_V_1_sel = data_out_V_data_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_data_out_V_data_V_1_state_cmp_full() {
    data_out_V_data_V_1_state_cmp_full =  (sc_logic) ((!data_out_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data_out_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_data_out_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op94_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op106_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        data_out_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        data_out_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_data_out_V_data_V_1_vld_out() {
    data_out_V_data_V_1_vld_out = data_out_V_data_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_data_out_V_keep_V_1_ack_in() {
    data_out_V_keep_V_1_ack_in = data_out_V_keep_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_data_out_V_keep_V_1_ack_out() {
    data_out_V_keep_V_1_ack_out = data_out_TREADY.read();
}

void ethernet_axi_splitter::thread_data_out_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_keep_V_1_sel.read())) {
        data_out_V_keep_V_1_data_out = data_out_V_keep_V_1_payload_B.read();
    } else {
        data_out_V_keep_V_1_data_out = data_out_V_keep_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_data_out_V_keep_V_1_load_A() {
    data_out_V_keep_V_1_load_A = (data_out_V_keep_V_1_state_cmp_full.read() & ~data_out_V_keep_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_data_out_V_keep_V_1_load_B() {
    data_out_V_keep_V_1_load_B = (data_out_V_keep_V_1_sel_wr.read() & data_out_V_keep_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_data_out_V_keep_V_1_sel() {
    data_out_V_keep_V_1_sel = data_out_V_keep_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_data_out_V_keep_V_1_state_cmp_full() {
    data_out_V_keep_V_1_state_cmp_full =  (sc_logic) ((!data_out_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data_out_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_data_out_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op94_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op106_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        data_out_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        data_out_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_data_out_V_keep_V_1_vld_out() {
    data_out_V_keep_V_1_vld_out = data_out_V_keep_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_data_out_V_last_V_1_ack_in() {
    data_out_V_last_V_1_ack_in = data_out_V_last_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_data_out_V_last_V_1_ack_out() {
    data_out_V_last_V_1_ack_out = data_out_TREADY.read();
}

void ethernet_axi_splitter::thread_data_out_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_sel.read())) {
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_B.read();
    } else {
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_data_out_V_last_V_1_load_A() {
    data_out_V_last_V_1_load_A = (data_out_V_last_V_1_state_cmp_full.read() & ~data_out_V_last_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_data_out_V_last_V_1_load_B() {
    data_out_V_last_V_1_load_B = (data_out_V_last_V_1_sel_wr.read() & data_out_V_last_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_data_out_V_last_V_1_sel() {
    data_out_V_last_V_1_sel = data_out_V_last_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_data_out_V_last_V_1_state_cmp_full() {
    data_out_V_last_V_1_state_cmp_full =  (sc_logic) ((!data_out_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data_out_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_data_out_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op94_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op106_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        data_out_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        data_out_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_data_out_V_last_V_1_vld_out() {
    data_out_V_last_V_1_vld_out = data_out_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_0_TDATA() {
    ethernet_axi_0_TDATA = ethernet_axi_0_V_data_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_0_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_reg_763.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_reg_763_pp0_iter2_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_803.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_803_pp0_iter2_reg.read())))) {
        ethernet_axi_0_TDATA_blk_n = ethernet_axi_0_V_data_V_1_state.read()[1];
    } else {
        ethernet_axi_0_TDATA_blk_n = ap_const_logic_1;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_0_TKEEP() {
    ethernet_axi_0_TKEEP = ethernet_axi_0_V_keep_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_0_TLAST() {
    ethernet_axi_0_TLAST = ethernet_axi_0_V_last_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_0_TVALID() {
    ethernet_axi_0_TVALID = ethernet_axi_0_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_data_V_1_ack_in() {
    ethernet_axi_0_V_data_V_1_ack_in = ethernet_axi_0_V_data_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_data_V_1_ack_out() {
    ethernet_axi_0_V_data_V_1_ack_out = ethernet_axi_0_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_data_V_1_sel.read())) {
        ethernet_axi_0_V_data_V_1_data_out = ethernet_axi_0_V_data_V_1_payload_B.read();
    } else {
        ethernet_axi_0_V_data_V_1_data_out = ethernet_axi_0_V_data_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_data_V_1_load_A() {
    ethernet_axi_0_V_data_V_1_load_A = (ethernet_axi_0_V_data_V_1_state_cmp_full.read() & ~ethernet_axi_0_V_data_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_data_V_1_load_B() {
    ethernet_axi_0_V_data_V_1_load_B = (ethernet_axi_0_V_data_V_1_sel_wr.read() & ethernet_axi_0_V_data_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_data_V_1_sel() {
    ethernet_axi_0_V_data_V_1_sel = ethernet_axi_0_V_data_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_data_V_1_state_cmp_full() {
    ethernet_axi_0_V_data_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_0_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_0_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op102_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_0_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_0_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_data_V_1_vld_out() {
    ethernet_axi_0_V_data_V_1_vld_out = ethernet_axi_0_V_data_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_keep_V_1_ack_in() {
    ethernet_axi_0_V_keep_V_1_ack_in = ethernet_axi_0_V_keep_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_keep_V_1_ack_out() {
    ethernet_axi_0_V_keep_V_1_ack_out = ethernet_axi_0_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_keep_V_1_sel.read())) {
        ethernet_axi_0_V_keep_V_1_data_out = ethernet_axi_0_V_keep_V_1_payload_B.read();
    } else {
        ethernet_axi_0_V_keep_V_1_data_out = ethernet_axi_0_V_keep_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_keep_V_1_load_A() {
    ethernet_axi_0_V_keep_V_1_load_A = (ethernet_axi_0_V_keep_V_1_state_cmp_full.read() & ~ethernet_axi_0_V_keep_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_keep_V_1_load_B() {
    ethernet_axi_0_V_keep_V_1_load_B = (ethernet_axi_0_V_keep_V_1_sel_wr.read() & ethernet_axi_0_V_keep_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_keep_V_1_sel() {
    ethernet_axi_0_V_keep_V_1_sel = ethernet_axi_0_V_keep_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_keep_V_1_state_cmp_full() {
    ethernet_axi_0_V_keep_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_0_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_0_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op102_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_0_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_0_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_keep_V_1_vld_out() {
    ethernet_axi_0_V_keep_V_1_vld_out = ethernet_axi_0_V_keep_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_last_V_1_ack_in() {
    ethernet_axi_0_V_last_V_1_ack_in = ethernet_axi_0_V_last_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_last_V_1_ack_out() {
    ethernet_axi_0_V_last_V_1_ack_out = ethernet_axi_0_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_0_V_last_V_1_sel.read())) {
        ethernet_axi_0_V_last_V_1_data_out = ethernet_axi_0_V_last_V_1_payload_B.read();
    } else {
        ethernet_axi_0_V_last_V_1_data_out = ethernet_axi_0_V_last_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_last_V_1_load_A() {
    ethernet_axi_0_V_last_V_1_load_A = (ethernet_axi_0_V_last_V_1_state_cmp_full.read() & ~ethernet_axi_0_V_last_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_last_V_1_load_B() {
    ethernet_axi_0_V_last_V_1_load_B = (ethernet_axi_0_V_last_V_1_sel_wr.read() & ethernet_axi_0_V_last_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_last_V_1_sel() {
    ethernet_axi_0_V_last_V_1_sel = ethernet_axi_0_V_last_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_last_V_1_state_cmp_full() {
    ethernet_axi_0_V_last_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_0_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_0_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op102_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_0_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_0_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_0_V_last_V_1_vld_out() {
    ethernet_axi_0_V_last_V_1_vld_out = ethernet_axi_0_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_1_TDATA() {
    ethernet_axi_1_TDATA = ethernet_axi_1_V_data_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_1_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_reg_767.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_reg_767_pp0_iter2_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_807.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_807_pp0_iter2_reg.read())))) {
        ethernet_axi_1_TDATA_blk_n = ethernet_axi_1_V_data_V_1_state.read()[1];
    } else {
        ethernet_axi_1_TDATA_blk_n = ap_const_logic_1;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_1_TKEEP() {
    ethernet_axi_1_TKEEP = ethernet_axi_1_V_keep_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_1_TLAST() {
    ethernet_axi_1_TLAST = ethernet_axi_1_V_last_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_1_TVALID() {
    ethernet_axi_1_TVALID = ethernet_axi_1_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_data_V_1_ack_in() {
    ethernet_axi_1_V_data_V_1_ack_in = ethernet_axi_1_V_data_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_data_V_1_ack_out() {
    ethernet_axi_1_V_data_V_1_ack_out = ethernet_axi_1_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_data_V_1_sel.read())) {
        ethernet_axi_1_V_data_V_1_data_out = ethernet_axi_1_V_data_V_1_payload_B.read();
    } else {
        ethernet_axi_1_V_data_V_1_data_out = ethernet_axi_1_V_data_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_data_V_1_load_A() {
    ethernet_axi_1_V_data_V_1_load_A = (ethernet_axi_1_V_data_V_1_state_cmp_full.read() & ~ethernet_axi_1_V_data_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_data_V_1_load_B() {
    ethernet_axi_1_V_data_V_1_load_B = (ethernet_axi_1_V_data_V_1_sel_wr.read() & ethernet_axi_1_V_data_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_data_V_1_sel() {
    ethernet_axi_1_V_data_V_1_sel = ethernet_axi_1_V_data_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_data_V_1_state_cmp_full() {
    ethernet_axi_1_V_data_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_1_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_1_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op113_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_1_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_1_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_data_V_1_vld_out() {
    ethernet_axi_1_V_data_V_1_vld_out = ethernet_axi_1_V_data_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_keep_V_1_ack_in() {
    ethernet_axi_1_V_keep_V_1_ack_in = ethernet_axi_1_V_keep_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_keep_V_1_ack_out() {
    ethernet_axi_1_V_keep_V_1_ack_out = ethernet_axi_1_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_keep_V_1_sel.read())) {
        ethernet_axi_1_V_keep_V_1_data_out = ethernet_axi_1_V_keep_V_1_payload_B.read();
    } else {
        ethernet_axi_1_V_keep_V_1_data_out = ethernet_axi_1_V_keep_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_keep_V_1_load_A() {
    ethernet_axi_1_V_keep_V_1_load_A = (ethernet_axi_1_V_keep_V_1_state_cmp_full.read() & ~ethernet_axi_1_V_keep_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_keep_V_1_load_B() {
    ethernet_axi_1_V_keep_V_1_load_B = (ethernet_axi_1_V_keep_V_1_sel_wr.read() & ethernet_axi_1_V_keep_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_keep_V_1_sel() {
    ethernet_axi_1_V_keep_V_1_sel = ethernet_axi_1_V_keep_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_keep_V_1_state_cmp_full() {
    ethernet_axi_1_V_keep_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_1_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_1_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op113_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_1_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_1_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_keep_V_1_vld_out() {
    ethernet_axi_1_V_keep_V_1_vld_out = ethernet_axi_1_V_keep_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_last_V_1_ack_in() {
    ethernet_axi_1_V_last_V_1_ack_in = ethernet_axi_1_V_last_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_last_V_1_ack_out() {
    ethernet_axi_1_V_last_V_1_ack_out = ethernet_axi_1_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_1_V_last_V_1_sel.read())) {
        ethernet_axi_1_V_last_V_1_data_out = ethernet_axi_1_V_last_V_1_payload_B.read();
    } else {
        ethernet_axi_1_V_last_V_1_data_out = ethernet_axi_1_V_last_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_last_V_1_load_A() {
    ethernet_axi_1_V_last_V_1_load_A = (ethernet_axi_1_V_last_V_1_state_cmp_full.read() & ~ethernet_axi_1_V_last_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_last_V_1_load_B() {
    ethernet_axi_1_V_last_V_1_load_B = (ethernet_axi_1_V_last_V_1_sel_wr.read() & ethernet_axi_1_V_last_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_last_V_1_sel() {
    ethernet_axi_1_V_last_V_1_sel = ethernet_axi_1_V_last_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_last_V_1_state_cmp_full() {
    ethernet_axi_1_V_last_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_1_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_1_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op113_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_1_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_1_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_1_V_last_V_1_vld_out() {
    ethernet_axi_1_V_last_V_1_vld_out = ethernet_axi_1_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_2_TDATA() {
    ethernet_axi_2_TDATA = ethernet_axi_2_V_data_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_2_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_771.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_771_pp0_iter2_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_811.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_811_pp0_iter2_reg.read())))) {
        ethernet_axi_2_TDATA_blk_n = ethernet_axi_2_V_data_V_1_state.read()[1];
    } else {
        ethernet_axi_2_TDATA_blk_n = ap_const_logic_1;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_2_TKEEP() {
    ethernet_axi_2_TKEEP = ethernet_axi_2_V_keep_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_2_TLAST() {
    ethernet_axi_2_TLAST = ethernet_axi_2_V_last_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_2_TVALID() {
    ethernet_axi_2_TVALID = ethernet_axi_2_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_data_V_1_ack_in() {
    ethernet_axi_2_V_data_V_1_ack_in = ethernet_axi_2_V_data_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_data_V_1_ack_out() {
    ethernet_axi_2_V_data_V_1_ack_out = ethernet_axi_2_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_data_V_1_sel.read())) {
        ethernet_axi_2_V_data_V_1_data_out = ethernet_axi_2_V_data_V_1_payload_B.read();
    } else {
        ethernet_axi_2_V_data_V_1_data_out = ethernet_axi_2_V_data_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_data_V_1_load_A() {
    ethernet_axi_2_V_data_V_1_load_A = (ethernet_axi_2_V_data_V_1_state_cmp_full.read() & ~ethernet_axi_2_V_data_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_data_V_1_load_B() {
    ethernet_axi_2_V_data_V_1_load_B = (ethernet_axi_2_V_data_V_1_sel_wr.read() & ethernet_axi_2_V_data_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_data_V_1_sel() {
    ethernet_axi_2_V_data_V_1_sel = ethernet_axi_2_V_data_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_data_V_1_state_cmp_full() {
    ethernet_axi_2_V_data_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_2_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_2_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op100_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op112_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_2_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_2_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_data_V_1_vld_out() {
    ethernet_axi_2_V_data_V_1_vld_out = ethernet_axi_2_V_data_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_keep_V_1_ack_in() {
    ethernet_axi_2_V_keep_V_1_ack_in = ethernet_axi_2_V_keep_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_keep_V_1_ack_out() {
    ethernet_axi_2_V_keep_V_1_ack_out = ethernet_axi_2_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_keep_V_1_sel.read())) {
        ethernet_axi_2_V_keep_V_1_data_out = ethernet_axi_2_V_keep_V_1_payload_B.read();
    } else {
        ethernet_axi_2_V_keep_V_1_data_out = ethernet_axi_2_V_keep_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_keep_V_1_load_A() {
    ethernet_axi_2_V_keep_V_1_load_A = (ethernet_axi_2_V_keep_V_1_state_cmp_full.read() & ~ethernet_axi_2_V_keep_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_keep_V_1_load_B() {
    ethernet_axi_2_V_keep_V_1_load_B = (ethernet_axi_2_V_keep_V_1_sel_wr.read() & ethernet_axi_2_V_keep_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_keep_V_1_sel() {
    ethernet_axi_2_V_keep_V_1_sel = ethernet_axi_2_V_keep_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_keep_V_1_state_cmp_full() {
    ethernet_axi_2_V_keep_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_2_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_2_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op100_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op112_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_2_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_2_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_keep_V_1_vld_out() {
    ethernet_axi_2_V_keep_V_1_vld_out = ethernet_axi_2_V_keep_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_last_V_1_ack_in() {
    ethernet_axi_2_V_last_V_1_ack_in = ethernet_axi_2_V_last_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_last_V_1_ack_out() {
    ethernet_axi_2_V_last_V_1_ack_out = ethernet_axi_2_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_2_V_last_V_1_sel.read())) {
        ethernet_axi_2_V_last_V_1_data_out = ethernet_axi_2_V_last_V_1_payload_B.read();
    } else {
        ethernet_axi_2_V_last_V_1_data_out = ethernet_axi_2_V_last_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_last_V_1_load_A() {
    ethernet_axi_2_V_last_V_1_load_A = (ethernet_axi_2_V_last_V_1_state_cmp_full.read() & ~ethernet_axi_2_V_last_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_last_V_1_load_B() {
    ethernet_axi_2_V_last_V_1_load_B = (ethernet_axi_2_V_last_V_1_sel_wr.read() & ethernet_axi_2_V_last_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_last_V_1_sel() {
    ethernet_axi_2_V_last_V_1_sel = ethernet_axi_2_V_last_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_last_V_1_state_cmp_full() {
    ethernet_axi_2_V_last_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_2_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_2_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op100_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op112_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_2_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_2_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_2_V_last_V_1_vld_out() {
    ethernet_axi_2_V_last_V_1_vld_out = ethernet_axi_2_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_3_TDATA() {
    ethernet_axi_3_TDATA = ethernet_axi_3_V_data_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_3_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_reg_775.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_18_reg_775_pp0_iter2_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_815.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_815_pp0_iter2_reg.read())))) {
        ethernet_axi_3_TDATA_blk_n = ethernet_axi_3_V_data_V_1_state.read()[1];
    } else {
        ethernet_axi_3_TDATA_blk_n = ap_const_logic_1;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_3_TKEEP() {
    ethernet_axi_3_TKEEP = ethernet_axi_3_V_keep_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_3_TLAST() {
    ethernet_axi_3_TLAST = ethernet_axi_3_V_last_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_3_TVALID() {
    ethernet_axi_3_TVALID = ethernet_axi_3_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_data_V_1_ack_in() {
    ethernet_axi_3_V_data_V_1_ack_in = ethernet_axi_3_V_data_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_data_V_1_ack_out() {
    ethernet_axi_3_V_data_V_1_ack_out = ethernet_axi_3_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_data_V_1_sel.read())) {
        ethernet_axi_3_V_data_V_1_data_out = ethernet_axi_3_V_data_V_1_payload_B.read();
    } else {
        ethernet_axi_3_V_data_V_1_data_out = ethernet_axi_3_V_data_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_data_V_1_load_A() {
    ethernet_axi_3_V_data_V_1_load_A = (ethernet_axi_3_V_data_V_1_state_cmp_full.read() & ~ethernet_axi_3_V_data_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_data_V_1_load_B() {
    ethernet_axi_3_V_data_V_1_load_B = (ethernet_axi_3_V_data_V_1_sel_wr.read() & ethernet_axi_3_V_data_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_data_V_1_sel() {
    ethernet_axi_3_V_data_V_1_sel = ethernet_axi_3_V_data_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_data_V_1_state_cmp_full() {
    ethernet_axi_3_V_data_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_3_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_3_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op111_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_3_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_3_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_data_V_1_vld_out() {
    ethernet_axi_3_V_data_V_1_vld_out = ethernet_axi_3_V_data_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_keep_V_1_ack_in() {
    ethernet_axi_3_V_keep_V_1_ack_in = ethernet_axi_3_V_keep_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_keep_V_1_ack_out() {
    ethernet_axi_3_V_keep_V_1_ack_out = ethernet_axi_3_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_keep_V_1_sel.read())) {
        ethernet_axi_3_V_keep_V_1_data_out = ethernet_axi_3_V_keep_V_1_payload_B.read();
    } else {
        ethernet_axi_3_V_keep_V_1_data_out = ethernet_axi_3_V_keep_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_keep_V_1_load_A() {
    ethernet_axi_3_V_keep_V_1_load_A = (ethernet_axi_3_V_keep_V_1_state_cmp_full.read() & ~ethernet_axi_3_V_keep_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_keep_V_1_load_B() {
    ethernet_axi_3_V_keep_V_1_load_B = (ethernet_axi_3_V_keep_V_1_sel_wr.read() & ethernet_axi_3_V_keep_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_keep_V_1_sel() {
    ethernet_axi_3_V_keep_V_1_sel = ethernet_axi_3_V_keep_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_keep_V_1_state_cmp_full() {
    ethernet_axi_3_V_keep_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_3_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_3_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op111_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_3_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_3_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_keep_V_1_vld_out() {
    ethernet_axi_3_V_keep_V_1_vld_out = ethernet_axi_3_V_keep_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_last_V_1_ack_in() {
    ethernet_axi_3_V_last_V_1_ack_in = ethernet_axi_3_V_last_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_last_V_1_ack_out() {
    ethernet_axi_3_V_last_V_1_ack_out = ethernet_axi_3_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_3_V_last_V_1_sel.read())) {
        ethernet_axi_3_V_last_V_1_data_out = ethernet_axi_3_V_last_V_1_payload_B.read();
    } else {
        ethernet_axi_3_V_last_V_1_data_out = ethernet_axi_3_V_last_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_last_V_1_load_A() {
    ethernet_axi_3_V_last_V_1_load_A = (ethernet_axi_3_V_last_V_1_state_cmp_full.read() & ~ethernet_axi_3_V_last_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_last_V_1_load_B() {
    ethernet_axi_3_V_last_V_1_load_B = (ethernet_axi_3_V_last_V_1_sel_wr.read() & ethernet_axi_3_V_last_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_last_V_1_sel() {
    ethernet_axi_3_V_last_V_1_sel = ethernet_axi_3_V_last_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_last_V_1_state_cmp_full() {
    ethernet_axi_3_V_last_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_3_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_3_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op111_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_3_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_3_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_3_V_last_V_1_vld_out() {
    ethernet_axi_3_V_last_V_1_vld_out = ethernet_axi_3_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_4_TDATA() {
    ethernet_axi_4_TDATA = ethernet_axi_4_V_data_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_4_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_reg_779.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_reg_779_pp0_iter2_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_819.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_819_pp0_iter2_reg.read())))) {
        ethernet_axi_4_TDATA_blk_n = ethernet_axi_4_V_data_V_1_state.read()[1];
    } else {
        ethernet_axi_4_TDATA_blk_n = ap_const_logic_1;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_4_TKEEP() {
    ethernet_axi_4_TKEEP = ethernet_axi_4_V_keep_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_4_TLAST() {
    ethernet_axi_4_TLAST = ethernet_axi_4_V_last_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_4_TVALID() {
    ethernet_axi_4_TVALID = ethernet_axi_4_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_data_V_1_ack_in() {
    ethernet_axi_4_V_data_V_1_ack_in = ethernet_axi_4_V_data_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_data_V_1_ack_out() {
    ethernet_axi_4_V_data_V_1_ack_out = ethernet_axi_4_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_data_V_1_sel.read())) {
        ethernet_axi_4_V_data_V_1_data_out = ethernet_axi_4_V_data_V_1_payload_B.read();
    } else {
        ethernet_axi_4_V_data_V_1_data_out = ethernet_axi_4_V_data_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_data_V_1_load_A() {
    ethernet_axi_4_V_data_V_1_load_A = (ethernet_axi_4_V_data_V_1_state_cmp_full.read() & ~ethernet_axi_4_V_data_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_data_V_1_load_B() {
    ethernet_axi_4_V_data_V_1_load_B = (ethernet_axi_4_V_data_V_1_sel_wr.read() & ethernet_axi_4_V_data_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_data_V_1_sel() {
    ethernet_axi_4_V_data_V_1_sel = ethernet_axi_4_V_data_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_data_V_1_state_cmp_full() {
    ethernet_axi_4_V_data_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_4_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_4_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op98_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op110_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_4_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_4_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_data_V_1_vld_out() {
    ethernet_axi_4_V_data_V_1_vld_out = ethernet_axi_4_V_data_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_keep_V_1_ack_in() {
    ethernet_axi_4_V_keep_V_1_ack_in = ethernet_axi_4_V_keep_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_keep_V_1_ack_out() {
    ethernet_axi_4_V_keep_V_1_ack_out = ethernet_axi_4_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_keep_V_1_sel.read())) {
        ethernet_axi_4_V_keep_V_1_data_out = ethernet_axi_4_V_keep_V_1_payload_B.read();
    } else {
        ethernet_axi_4_V_keep_V_1_data_out = ethernet_axi_4_V_keep_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_keep_V_1_load_A() {
    ethernet_axi_4_V_keep_V_1_load_A = (ethernet_axi_4_V_keep_V_1_state_cmp_full.read() & ~ethernet_axi_4_V_keep_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_keep_V_1_load_B() {
    ethernet_axi_4_V_keep_V_1_load_B = (ethernet_axi_4_V_keep_V_1_sel_wr.read() & ethernet_axi_4_V_keep_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_keep_V_1_sel() {
    ethernet_axi_4_V_keep_V_1_sel = ethernet_axi_4_V_keep_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_keep_V_1_state_cmp_full() {
    ethernet_axi_4_V_keep_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_4_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_4_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op98_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op110_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_4_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_4_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_keep_V_1_vld_out() {
    ethernet_axi_4_V_keep_V_1_vld_out = ethernet_axi_4_V_keep_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_last_V_1_ack_in() {
    ethernet_axi_4_V_last_V_1_ack_in = ethernet_axi_4_V_last_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_last_V_1_ack_out() {
    ethernet_axi_4_V_last_V_1_ack_out = ethernet_axi_4_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_4_V_last_V_1_sel.read())) {
        ethernet_axi_4_V_last_V_1_data_out = ethernet_axi_4_V_last_V_1_payload_B.read();
    } else {
        ethernet_axi_4_V_last_V_1_data_out = ethernet_axi_4_V_last_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_last_V_1_load_A() {
    ethernet_axi_4_V_last_V_1_load_A = (ethernet_axi_4_V_last_V_1_state_cmp_full.read() & ~ethernet_axi_4_V_last_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_last_V_1_load_B() {
    ethernet_axi_4_V_last_V_1_load_B = (ethernet_axi_4_V_last_V_1_sel_wr.read() & ethernet_axi_4_V_last_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_last_V_1_sel() {
    ethernet_axi_4_V_last_V_1_sel = ethernet_axi_4_V_last_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_last_V_1_state_cmp_full() {
    ethernet_axi_4_V_last_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_4_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_4_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op98_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op110_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_4_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_4_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_4_V_last_V_1_vld_out() {
    ethernet_axi_4_V_last_V_1_vld_out = ethernet_axi_4_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_5_TDATA() {
    ethernet_axi_5_TDATA = ethernet_axi_5_V_data_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_5_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_reg_783.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_reg_783_pp0_iter2_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_823.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_823_pp0_iter2_reg.read())))) {
        ethernet_axi_5_TDATA_blk_n = ethernet_axi_5_V_data_V_1_state.read()[1];
    } else {
        ethernet_axi_5_TDATA_blk_n = ap_const_logic_1;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_5_TKEEP() {
    ethernet_axi_5_TKEEP = ethernet_axi_5_V_keep_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_5_TLAST() {
    ethernet_axi_5_TLAST = ethernet_axi_5_V_last_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_5_TVALID() {
    ethernet_axi_5_TVALID = ethernet_axi_5_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_data_V_1_ack_in() {
    ethernet_axi_5_V_data_V_1_ack_in = ethernet_axi_5_V_data_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_data_V_1_ack_out() {
    ethernet_axi_5_V_data_V_1_ack_out = ethernet_axi_5_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_data_V_1_sel.read())) {
        ethernet_axi_5_V_data_V_1_data_out = ethernet_axi_5_V_data_V_1_payload_B.read();
    } else {
        ethernet_axi_5_V_data_V_1_data_out = ethernet_axi_5_V_data_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_data_V_1_load_A() {
    ethernet_axi_5_V_data_V_1_load_A = (ethernet_axi_5_V_data_V_1_state_cmp_full.read() & ~ethernet_axi_5_V_data_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_data_V_1_load_B() {
    ethernet_axi_5_V_data_V_1_load_B = (ethernet_axi_5_V_data_V_1_sel_wr.read() & ethernet_axi_5_V_data_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_data_V_1_sel() {
    ethernet_axi_5_V_data_V_1_sel = ethernet_axi_5_V_data_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_data_V_1_state_cmp_full() {
    ethernet_axi_5_V_data_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_5_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_5_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op97_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op109_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_5_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_5_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_data_V_1_vld_out() {
    ethernet_axi_5_V_data_V_1_vld_out = ethernet_axi_5_V_data_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_keep_V_1_ack_in() {
    ethernet_axi_5_V_keep_V_1_ack_in = ethernet_axi_5_V_keep_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_keep_V_1_ack_out() {
    ethernet_axi_5_V_keep_V_1_ack_out = ethernet_axi_5_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_keep_V_1_sel.read())) {
        ethernet_axi_5_V_keep_V_1_data_out = ethernet_axi_5_V_keep_V_1_payload_B.read();
    } else {
        ethernet_axi_5_V_keep_V_1_data_out = ethernet_axi_5_V_keep_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_keep_V_1_load_A() {
    ethernet_axi_5_V_keep_V_1_load_A = (ethernet_axi_5_V_keep_V_1_state_cmp_full.read() & ~ethernet_axi_5_V_keep_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_keep_V_1_load_B() {
    ethernet_axi_5_V_keep_V_1_load_B = (ethernet_axi_5_V_keep_V_1_sel_wr.read() & ethernet_axi_5_V_keep_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_keep_V_1_sel() {
    ethernet_axi_5_V_keep_V_1_sel = ethernet_axi_5_V_keep_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_keep_V_1_state_cmp_full() {
    ethernet_axi_5_V_keep_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_5_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_5_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op97_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op109_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_5_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_5_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_keep_V_1_vld_out() {
    ethernet_axi_5_V_keep_V_1_vld_out = ethernet_axi_5_V_keep_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_last_V_1_ack_in() {
    ethernet_axi_5_V_last_V_1_ack_in = ethernet_axi_5_V_last_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_last_V_1_ack_out() {
    ethernet_axi_5_V_last_V_1_ack_out = ethernet_axi_5_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_5_V_last_V_1_sel.read())) {
        ethernet_axi_5_V_last_V_1_data_out = ethernet_axi_5_V_last_V_1_payload_B.read();
    } else {
        ethernet_axi_5_V_last_V_1_data_out = ethernet_axi_5_V_last_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_last_V_1_load_A() {
    ethernet_axi_5_V_last_V_1_load_A = (ethernet_axi_5_V_last_V_1_state_cmp_full.read() & ~ethernet_axi_5_V_last_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_last_V_1_load_B() {
    ethernet_axi_5_V_last_V_1_load_B = (ethernet_axi_5_V_last_V_1_sel_wr.read() & ethernet_axi_5_V_last_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_last_V_1_sel() {
    ethernet_axi_5_V_last_V_1_sel = ethernet_axi_5_V_last_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_last_V_1_state_cmp_full() {
    ethernet_axi_5_V_last_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_5_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_5_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op97_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op109_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_5_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_5_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_5_V_last_V_1_vld_out() {
    ethernet_axi_5_V_last_V_1_vld_out = ethernet_axi_5_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_6_TDATA() {
    ethernet_axi_6_TDATA = ethernet_axi_6_V_data_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_6_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_783.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_reg_787.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_783_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_reg_787_pp0_iter2_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_823.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_reg_827.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_823_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_reg_827_pp0_iter2_reg.read())))) {
        ethernet_axi_6_TDATA_blk_n = ethernet_axi_6_V_data_V_1_state.read()[1];
    } else {
        ethernet_axi_6_TDATA_blk_n = ap_const_logic_1;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_6_TKEEP() {
    ethernet_axi_6_TKEEP = ethernet_axi_6_V_keep_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_6_TLAST() {
    ethernet_axi_6_TLAST = ethernet_axi_6_V_last_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_6_TVALID() {
    ethernet_axi_6_TVALID = ethernet_axi_6_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_data_V_1_ack_in() {
    ethernet_axi_6_V_data_V_1_ack_in = ethernet_axi_6_V_data_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_data_V_1_ack_out() {
    ethernet_axi_6_V_data_V_1_ack_out = ethernet_axi_6_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_data_V_1_sel.read())) {
        ethernet_axi_6_V_data_V_1_data_out = ethernet_axi_6_V_data_V_1_payload_B.read();
    } else {
        ethernet_axi_6_V_data_V_1_data_out = ethernet_axi_6_V_data_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_data_V_1_load_A() {
    ethernet_axi_6_V_data_V_1_load_A = (ethernet_axi_6_V_data_V_1_state_cmp_full.read() & ~ethernet_axi_6_V_data_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_data_V_1_load_B() {
    ethernet_axi_6_V_data_V_1_load_B = (ethernet_axi_6_V_data_V_1_sel_wr.read() & ethernet_axi_6_V_data_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_data_V_1_sel() {
    ethernet_axi_6_V_data_V_1_sel = ethernet_axi_6_V_data_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_data_V_1_state_cmp_full() {
    ethernet_axi_6_V_data_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_6_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_6_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_6_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_6_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_data_V_1_vld_out() {
    ethernet_axi_6_V_data_V_1_vld_out = ethernet_axi_6_V_data_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_keep_V_1_ack_in() {
    ethernet_axi_6_V_keep_V_1_ack_in = ethernet_axi_6_V_keep_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_keep_V_1_ack_out() {
    ethernet_axi_6_V_keep_V_1_ack_out = ethernet_axi_6_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_keep_V_1_sel.read())) {
        ethernet_axi_6_V_keep_V_1_data_out = ethernet_axi_6_V_keep_V_1_payload_B.read();
    } else {
        ethernet_axi_6_V_keep_V_1_data_out = ethernet_axi_6_V_keep_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_keep_V_1_load_A() {
    ethernet_axi_6_V_keep_V_1_load_A = (ethernet_axi_6_V_keep_V_1_state_cmp_full.read() & ~ethernet_axi_6_V_keep_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_keep_V_1_load_B() {
    ethernet_axi_6_V_keep_V_1_load_B = (ethernet_axi_6_V_keep_V_1_sel_wr.read() & ethernet_axi_6_V_keep_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_keep_V_1_sel() {
    ethernet_axi_6_V_keep_V_1_sel = ethernet_axi_6_V_keep_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_keep_V_1_state_cmp_full() {
    ethernet_axi_6_V_keep_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_6_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_6_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_6_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_6_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_keep_V_1_vld_out() {
    ethernet_axi_6_V_keep_V_1_vld_out = ethernet_axi_6_V_keep_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_last_V_1_ack_in() {
    ethernet_axi_6_V_last_V_1_ack_in = ethernet_axi_6_V_last_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_last_V_1_ack_out() {
    ethernet_axi_6_V_last_V_1_ack_out = ethernet_axi_6_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_6_V_last_V_1_sel.read())) {
        ethernet_axi_6_V_last_V_1_data_out = ethernet_axi_6_V_last_V_1_payload_B.read();
    } else {
        ethernet_axi_6_V_last_V_1_data_out = ethernet_axi_6_V_last_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_last_V_1_load_A() {
    ethernet_axi_6_V_last_V_1_load_A = (ethernet_axi_6_V_last_V_1_state_cmp_full.read() & ~ethernet_axi_6_V_last_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_last_V_1_load_B() {
    ethernet_axi_6_V_last_V_1_load_B = (ethernet_axi_6_V_last_V_1_sel_wr.read() & ethernet_axi_6_V_last_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_last_V_1_sel() {
    ethernet_axi_6_V_last_V_1_sel = ethernet_axi_6_V_last_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_last_V_1_state_cmp_full() {
    ethernet_axi_6_V_last_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_6_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_6_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_6_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_6_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_6_V_last_V_1_vld_out() {
    ethernet_axi_6_V_last_V_1_vld_out = ethernet_axi_6_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_7_TDATA() {
    ethernet_axi_7_TDATA = ethernet_axi_7_V_data_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_7_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_783.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_reg_787.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_22_reg_791.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_720_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_739_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_reg_759_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_763_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_767_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_771_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_18_reg_775_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_reg_779_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_783_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_reg_787_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_22_reg_791_pp0_iter2_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_823.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_reg_827.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_reg_831.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsm_state_V_load_reg_694_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_799_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_803_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_807_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_811_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_815_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_819_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_reg_823_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_reg_827_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_reg_831_pp0_iter2_reg.read())))) {
        ethernet_axi_7_TDATA_blk_n = ethernet_axi_7_V_data_V_1_state.read()[1];
    } else {
        ethernet_axi_7_TDATA_blk_n = ap_const_logic_1;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_7_TKEEP() {
    ethernet_axi_7_TKEEP = ethernet_axi_7_V_keep_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_7_TLAST() {
    ethernet_axi_7_TLAST = ethernet_axi_7_V_last_V_1_data_out.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_7_TVALID() {
    ethernet_axi_7_TVALID = ethernet_axi_7_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_data_V_1_ack_in() {
    ethernet_axi_7_V_data_V_1_ack_in = ethernet_axi_7_V_data_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_data_V_1_ack_out() {
    ethernet_axi_7_V_data_V_1_ack_out = ethernet_axi_7_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_data_V_1_sel.read())) {
        ethernet_axi_7_V_data_V_1_data_out = ethernet_axi_7_V_data_V_1_payload_B.read();
    } else {
        ethernet_axi_7_V_data_V_1_data_out = ethernet_axi_7_V_data_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_data_V_1_load_A() {
    ethernet_axi_7_V_data_V_1_load_A = (ethernet_axi_7_V_data_V_1_state_cmp_full.read() & ~ethernet_axi_7_V_data_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_data_V_1_load_B() {
    ethernet_axi_7_V_data_V_1_load_B = (ethernet_axi_7_V_data_V_1_sel_wr.read() & ethernet_axi_7_V_data_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_data_V_1_sel() {
    ethernet_axi_7_V_data_V_1_sel = ethernet_axi_7_V_data_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_data_V_1_state_cmp_full() {
    ethernet_axi_7_V_data_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_7_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_7_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op95_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op107_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_7_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_7_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_data_V_1_vld_out() {
    ethernet_axi_7_V_data_V_1_vld_out = ethernet_axi_7_V_data_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_keep_V_1_ack_in() {
    ethernet_axi_7_V_keep_V_1_ack_in = ethernet_axi_7_V_keep_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_keep_V_1_ack_out() {
    ethernet_axi_7_V_keep_V_1_ack_out = ethernet_axi_7_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_keep_V_1_sel.read())) {
        ethernet_axi_7_V_keep_V_1_data_out = ethernet_axi_7_V_keep_V_1_payload_B.read();
    } else {
        ethernet_axi_7_V_keep_V_1_data_out = ethernet_axi_7_V_keep_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_keep_V_1_load_A() {
    ethernet_axi_7_V_keep_V_1_load_A = (ethernet_axi_7_V_keep_V_1_state_cmp_full.read() & ~ethernet_axi_7_V_keep_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_keep_V_1_load_B() {
    ethernet_axi_7_V_keep_V_1_load_B = (ethernet_axi_7_V_keep_V_1_sel_wr.read() & ethernet_axi_7_V_keep_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_keep_V_1_sel() {
    ethernet_axi_7_V_keep_V_1_sel = ethernet_axi_7_V_keep_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_keep_V_1_state_cmp_full() {
    ethernet_axi_7_V_keep_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_7_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_7_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op95_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op107_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_7_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_7_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_keep_V_1_vld_out() {
    ethernet_axi_7_V_keep_V_1_vld_out = ethernet_axi_7_V_keep_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_last_V_1_ack_in() {
    ethernet_axi_7_V_last_V_1_ack_in = ethernet_axi_7_V_last_V_1_state.read()[1];
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_last_V_1_ack_out() {
    ethernet_axi_7_V_last_V_1_ack_out = ethernet_axi_7_TREADY.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ethernet_axi_7_V_last_V_1_sel.read())) {
        ethernet_axi_7_V_last_V_1_data_out = ethernet_axi_7_V_last_V_1_payload_B.read();
    } else {
        ethernet_axi_7_V_last_V_1_data_out = ethernet_axi_7_V_last_V_1_payload_A.read();
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_last_V_1_load_A() {
    ethernet_axi_7_V_last_V_1_load_A = (ethernet_axi_7_V_last_V_1_state_cmp_full.read() & ~ethernet_axi_7_V_last_V_1_sel_wr.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_last_V_1_load_B() {
    ethernet_axi_7_V_last_V_1_load_B = (ethernet_axi_7_V_last_V_1_sel_wr.read() & ethernet_axi_7_V_last_V_1_state_cmp_full.read());
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_last_V_1_sel() {
    ethernet_axi_7_V_last_V_1_sel = ethernet_axi_7_V_last_V_1_sel_rd.read();
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_last_V_1_state_cmp_full() {
    ethernet_axi_7_V_last_V_1_state_cmp_full =  (sc_logic) ((!ethernet_axi_7_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_7_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op95_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op107_write_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))))))) {
        ethernet_axi_7_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        ethernet_axi_7_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void ethernet_axi_splitter::thread_ethernet_axi_7_V_last_V_1_vld_out() {
    ethernet_axi_7_V_last_V_1_vld_out = ethernet_axi_7_V_last_V_1_state.read()[0];
}

void ethernet_axi_splitter::thread_fsm_state_V_load_load_fu_384_p1() {
    fsm_state_V_load_load_fu_384_p1 = fsm_state_V.read();
}

void ethernet_axi_splitter::thread_fsm_state_V_load_reg_694_pp0_iter0_reg() {
    fsm_state_V_load_reg_694_pp0_iter0_reg = fsm_state_V_load_reg_694.read();
}

void ethernet_axi_splitter::thread_or_cond_fu_496_p2() {
    or_cond_fu_496_p2 = (tmp_6_fu_484_p2.read() | tmp_s_fu_490_p2.read());
}

void ethernet_axi_splitter::thread_p_Result_3_i_fu_440_p4() {
    p_Result_3_i_fu_440_p4 = data_in_TDATA.read().range(39, 32);
}

void ethernet_axi_splitter::thread_p_Result_i_fu_430_p4() {
    p_Result_i_fu_430_p4 = data_in_TDATA.read().range(47, 40);
}

void ethernet_axi_splitter::thread_storemerge_fu_502_p1() {
    storemerge_fu_502_p1 = esl_zext<16,1>(or_cond_fu_496_p2.read());
}

void ethernet_axi_splitter::thread_tmp_10_fu_530_p2() {
    tmp_10_fu_530_p2 = (!ap_phi_reg_pp0_iter1_mac_type_V_loc_1_reg_362.read().is_01() || !ap_const_lv16_7A00.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_reg_pp0_iter1_mac_type_V_loc_1_reg_362.read() == ap_const_lv16_7A00);
}

void ethernet_axi_splitter::thread_tmp_11_fu_620_p2() {
    tmp_11_fu_620_p2 = (!ethernet_axi_id_V_lo_reg_706.read().is_01() || !ap_const_lv8_5.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_id_V_lo_reg_706.read() == ap_const_lv8_5);
}

void ethernet_axi_splitter::thread_tmp_12_fu_536_p2() {
    tmp_12_fu_536_p2 = (!ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read() == ap_const_lv8_0);
}

void ethernet_axi_splitter::thread_tmp_13_fu_625_p2() {
    tmp_13_fu_625_p2 = (!ethernet_axi_id_V_lo_reg_706.read().is_01() || !ap_const_lv8_6.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_id_V_lo_reg_706.read() == ap_const_lv8_6);
}

void ethernet_axi_splitter::thread_tmp_14_fu_542_p2() {
    tmp_14_fu_542_p2 = (!ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read() == ap_const_lv8_1);
}

void ethernet_axi_splitter::thread_tmp_15_fu_630_p2() {
    tmp_15_fu_630_p2 = (!ethernet_axi_id_V_lo_reg_706.read().is_01() || !ap_const_lv8_7.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_id_V_lo_reg_706.read() == ap_const_lv8_7);
}

void ethernet_axi_splitter::thread_tmp_16_fu_548_p2() {
    tmp_16_fu_548_p2 = (!ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read().is_01() || !ap_const_lv8_2.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read() == ap_const_lv8_2);
}

void ethernet_axi_splitter::thread_tmp_17_fu_635_p2() {
    tmp_17_fu_635_p2 = (!mac_type_V_load_reg_698.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(mac_type_V_load_reg_698.read() == ap_const_lv16_0);
}

void ethernet_axi_splitter::thread_tmp_18_fu_554_p2() {
    tmp_18_fu_554_p2 = (!ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read().is_01() || !ap_const_lv8_3.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read() == ap_const_lv8_3);
}

void ethernet_axi_splitter::thread_tmp_19_fu_560_p2() {
    tmp_19_fu_560_p2 = (!ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read().is_01() || !ap_const_lv8_4.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read() == ap_const_lv8_4);
}

void ethernet_axi_splitter::thread_tmp_1_fu_610_p2() {
    tmp_1_fu_610_p2 = (!ethernet_axi_id_V_lo_reg_706.read().is_01() || !ap_const_lv8_3.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_id_V_lo_reg_706.read() == ap_const_lv8_3);
}

void ethernet_axi_splitter::thread_tmp_20_fu_566_p2() {
    tmp_20_fu_566_p2 = (!ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read().is_01() || !ap_const_lv8_5.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read() == ap_const_lv8_5);
}

void ethernet_axi_splitter::thread_tmp_21_fu_572_p2() {
    tmp_21_fu_572_p2 = (!ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read().is_01() || !ap_const_lv8_6.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read() == ap_const_lv8_6);
}

void ethernet_axi_splitter::thread_tmp_22_fu_578_p2() {
    tmp_22_fu_578_p2 = (!ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read().is_01() || !ap_const_lv8_7.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_reg_pp0_iter1_ethernet_axi_id_V_lo_1_reg_373.read() == ap_const_lv8_7);
}

void ethernet_axi_splitter::thread_tmp_23_fu_584_p2() {
    tmp_23_fu_584_p2 = (!ap_phi_reg_pp0_iter1_mac_type_V_loc_1_reg_362.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_reg_pp0_iter1_mac_type_V_loc_1_reg_362.read() == ap_const_lv16_0);
}

void ethernet_axi_splitter::thread_tmp_24_fu_480_p1() {
    tmp_24_fu_480_p1 = data_in_TDATA.read().range(48-1, 0);
}

void ethernet_axi_splitter::thread_tmp_2_fu_590_p2() {
    tmp_2_fu_590_p2 = (!mac_type_V_load_reg_698.read().is_01() || !ap_const_lv16_7A00.is_01())? sc_lv<1>(): sc_lv<1>(mac_type_V_load_reg_698.read() == ap_const_lv16_7A00);
}

void ethernet_axi_splitter::thread_tmp_3_fu_424_p2() {
    tmp_3_fu_424_p2 = (!mac_type_V.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(mac_type_V.read() == ap_const_lv16_0);
}

void ethernet_axi_splitter::thread_tmp_4_fu_595_p2() {
    tmp_4_fu_595_p2 = (!ethernet_axi_id_V_lo_reg_706.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_id_V_lo_reg_706.read() == ap_const_lv8_0);
}

void ethernet_axi_splitter::thread_tmp_5_fu_615_p2() {
    tmp_5_fu_615_p2 = (!ethernet_axi_id_V_lo_reg_706.read().is_01() || !ap_const_lv8_4.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_id_V_lo_reg_706.read() == ap_const_lv8_4);
}

void ethernet_axi_splitter::thread_tmp_6_fu_484_p2() {
    tmp_6_fu_484_p2 = (!tmp_24_fu_480_p1.read().is_01() || !my_mac_address_V.read().is_01())? sc_lv<1>(): sc_lv<1>(tmp_24_fu_480_p1.read() == my_mac_address_V.read());
}

void ethernet_axi_splitter::thread_tmp_7_fu_418_p2() {
    tmp_7_fu_418_p2 = (!word_count_V.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(word_count_V.read() == ap_const_lv2_1);
}

void ethernet_axi_splitter::thread_tmp_8_fu_605_p2() {
    tmp_8_fu_605_p2 = (!ethernet_axi_id_V_lo_reg_706.read().is_01() || !ap_const_lv8_2.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_id_V_lo_reg_706.read() == ap_const_lv8_2);
}

void ethernet_axi_splitter::thread_tmp_9_fu_600_p2() {
    tmp_9_fu_600_p2 = (!ethernet_axi_id_V_lo_reg_706.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(ethernet_axi_id_V_lo_reg_706.read() == ap_const_lv8_1);
}

void ethernet_axi_splitter::thread_tmp_i_fu_450_p3() {
    tmp_i_fu_450_p3 = esl_concat<8,8>(p_Result_3_i_fu_440_p4.read(), p_Result_i_fu_430_p4.read());
}

void ethernet_axi_splitter::thread_tmp_last_V_fu_404_p1() {
    tmp_last_V_fu_404_p1 = data_in_TLAST.read();
}

void ethernet_axi_splitter::thread_tmp_nbreadreq_fu_164_p5() {
    tmp_nbreadreq_fu_164_p5 =  (sc_lv<1>) ((data_in_TVALID.read()));
}

void ethernet_axi_splitter::thread_tmp_reg_720_pp0_iter0_reg() {
    tmp_reg_720_pp0_iter0_reg = tmp_reg_720.read();
}

void ethernet_axi_splitter::thread_tmp_s_fu_490_p2() {
    tmp_s_fu_490_p2 = (!tmp_24_fu_480_p1.read().is_01() || !ap_const_lv48_FFFFFFFFFFFF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_24_fu_480_p1.read() == ap_const_lv48_FFFFFFFFFFFF);
}

void ethernet_axi_splitter::thread_ap_NS_iter0_fsm() {
    switch (ap_CS_iter0_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
break;
        default : 
            ap_NS_iter0_fsm = "X";
            break;
    }
}

void ethernet_axi_splitter::thread_ap_NS_iter1_fsm() {
    switch (ap_CS_iter1_fsm.read().to_uint64()) {
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read())))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && (esl_seteq<1,1,1>(ap_CS_iter0_fsm_state1.read(), ap_const_logic_0) || 
  (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, data_in_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter1_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

void ethernet_axi_splitter::thread_ap_NS_iter2_fsm() {
    switch (ap_CS_iter2_fsm.read().to_uint64()) {
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            } else if ((!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) && esl_seteq<1,1,1>(ap_CS_iter1_fsm_state2.read(), ap_const_logic_0))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            } else {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            } else {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter2_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

void ethernet_axi_splitter::thread_ap_NS_iter3_fsm() {
    switch (ap_CS_iter3_fsm.read().to_uint64()) {
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) {
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            } else if ((((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || 
  esl_seteq<1,1,1>(ap_CS_iter2_fsm_state3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))) {
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            } else {
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter3_fsm_state4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_0_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_1_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_2_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_3_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_4_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_5_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_6_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, ethernet_axi_7_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_keep_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())))))) {
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            } else {
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter3_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

void ethernet_axi_splitter::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_TDATA\" :  \"" << data_in_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_TVALID\" :  \"" << data_in_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"data_in_TREADY\" :  \"" << data_in_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_TKEEP\" :  \"" << data_in_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_TLAST\" :  \"" << data_in_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_0_TDATA\" :  \"" << ethernet_axi_0_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_0_TVALID\" :  \"" << ethernet_axi_0_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ethernet_axi_0_TREADY\" :  \"" << ethernet_axi_0_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_0_TKEEP\" :  \"" << ethernet_axi_0_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_0_TLAST\" :  \"" << ethernet_axi_0_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_1_TDATA\" :  \"" << ethernet_axi_1_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_1_TVALID\" :  \"" << ethernet_axi_1_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ethernet_axi_1_TREADY\" :  \"" << ethernet_axi_1_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_1_TKEEP\" :  \"" << ethernet_axi_1_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_1_TLAST\" :  \"" << ethernet_axi_1_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_2_TDATA\" :  \"" << ethernet_axi_2_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_2_TVALID\" :  \"" << ethernet_axi_2_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ethernet_axi_2_TREADY\" :  \"" << ethernet_axi_2_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_2_TKEEP\" :  \"" << ethernet_axi_2_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_2_TLAST\" :  \"" << ethernet_axi_2_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_3_TDATA\" :  \"" << ethernet_axi_3_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_3_TVALID\" :  \"" << ethernet_axi_3_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ethernet_axi_3_TREADY\" :  \"" << ethernet_axi_3_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_3_TKEEP\" :  \"" << ethernet_axi_3_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_3_TLAST\" :  \"" << ethernet_axi_3_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_4_TDATA\" :  \"" << ethernet_axi_4_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_4_TVALID\" :  \"" << ethernet_axi_4_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ethernet_axi_4_TREADY\" :  \"" << ethernet_axi_4_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_4_TKEEP\" :  \"" << ethernet_axi_4_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_4_TLAST\" :  \"" << ethernet_axi_4_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_5_TDATA\" :  \"" << ethernet_axi_5_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_5_TVALID\" :  \"" << ethernet_axi_5_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ethernet_axi_5_TREADY\" :  \"" << ethernet_axi_5_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_5_TKEEP\" :  \"" << ethernet_axi_5_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_5_TLAST\" :  \"" << ethernet_axi_5_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_6_TDATA\" :  \"" << ethernet_axi_6_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_6_TVALID\" :  \"" << ethernet_axi_6_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ethernet_axi_6_TREADY\" :  \"" << ethernet_axi_6_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_6_TKEEP\" :  \"" << ethernet_axi_6_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_6_TLAST\" :  \"" << ethernet_axi_6_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_7_TDATA\" :  \"" << ethernet_axi_7_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_7_TVALID\" :  \"" << ethernet_axi_7_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ethernet_axi_7_TREADY\" :  \"" << ethernet_axi_7_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_7_TKEEP\" :  \"" << ethernet_axi_7_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_axi_7_TLAST\" :  \"" << ethernet_axi_7_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_TDATA\" :  \"" << data_out_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_TVALID\" :  \"" << data_out_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_out_TREADY\" :  \"" << data_out_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_TKEEP\" :  \"" << data_out_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_TLAST\" :  \"" << data_out_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"my_mac_address_V\" :  \"" << my_mac_address_V.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

