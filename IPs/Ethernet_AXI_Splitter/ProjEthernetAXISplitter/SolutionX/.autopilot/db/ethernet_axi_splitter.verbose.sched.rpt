

================================================================
== Vivado HLS Report for 'ethernet_axi_splitter'
================================================================
* Date:           Thu Jul 14 17:23:00 2022

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        ProjEthernetAXISplitter
* Solution:       SolutionX
* Product family: kintexu
* Target device:  xcku040-ffva1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   3.30|     3.601|        0.30|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    3|    3|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 1
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.60>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%my_mac_address_V_rea = call i48 @_ssdm_op_Read.ap_stable.i48(i48 %my_mac_address_V)"   --->   Operation 5 'read' 'my_mac_address_V_rea' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%fsm_state_V_load = load i1* @fsm_state_V, align 1" [ethernet_axi_splitter.cpp:119]   --->   Operation 6 'load' 'fsm_state_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%mac_type_V_load = load i16* @mac_type_V, align 2" [ethernet_axi_splitter.cpp:135]   --->   Operation 7 'load' 'mac_type_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%ethernet_axi_id_V_lo = load i8* @ethernet_axi_id_V, align 1" [ethernet_axi_splitter.cpp:142]   --->   Operation 8 'load' 'ethernet_axi_id_V_lo' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "br i1 %fsm_state_V_load, label %25, label %0" [ethernet_axi_splitter.cpp:119]   --->   Operation 9 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_NbReadReq.axis.i64P.i8P.i1P(i64* %data_in_V_data_V, i8* %data_in_V_keep_V, i1* %data_in_V_last_V, i32 1)" [ethernet_axi_splitter.cpp:121]   --->   Operation 10 'nbreadreq' 'tmp' <Predicate = (!fsm_state_V_load)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "br i1 %tmp, label %1, label %._crit_edge435" [ethernet_axi_splitter.cpp:121]   --->   Operation 11 'br' <Predicate = (!fsm_state_V_load)> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%empty = call { i64, i8, i1 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i1P(i64* %data_in_V_data_V, i8* %data_in_V_keep_V, i1* %data_in_V_last_V)" [ethernet_axi_splitter.cpp:122]   --->   Operation 12 'read' 'empty' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue { i64, i8, i1 } %empty, 0" [ethernet_axi_splitter.cpp:122]   --->   Operation 13 'extractvalue' 'tmp_data_V' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tmp_keep_V = extractvalue { i64, i8, i1 } %empty, 1" [ethernet_axi_splitter.cpp:122]   --->   Operation 14 'extractvalue' 'tmp_keep_V' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue { i64, i8, i1 } %empty, 2" [ethernet_axi_splitter.cpp:122]   --->   Operation 15 'extractvalue' 'tmp_last_V' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%t_V = load i2* @word_count_V, align 1" [ethernet_axi_splitter.cpp:124]   --->   Operation 16 'load' 't_V' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.53ns)   --->   "%cond = icmp eq i2 %t_V, 0" [ethernet_axi_splitter.cpp:124]   --->   Operation 17 'icmp' 'cond' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.53> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "br i1 %cond, label %._crit_edge438, label %2" [ethernet_axi_splitter.cpp:124]   --->   Operation 18 'br' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.53ns)   --->   "%tmp_7 = icmp eq i2 %t_V, 1" [ethernet_axi_splitter.cpp:134]   --->   Operation 19 'icmp' 'tmp_7' <Predicate = (!fsm_state_V_load & tmp & !cond)> <Delay = 0.53> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.83ns)   --->   "br i1 %tmp_7, label %3, label %._crit_edge439" [ethernet_axi_splitter.cpp:134]   --->   Operation 20 'br' <Predicate = (!fsm_state_V_load & tmp & !cond)> <Delay = 0.83>
ST_1 : Operation 21 [1/1] (1.09ns)   --->   "%tmp_3 = icmp eq i16 %mac_type_V_load, 0" [ethernet_axi_splitter.cpp:135]   --->   Operation 21 'icmp' 'tmp_3' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_7)> <Delay = 1.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.83ns)   --->   "br i1 %tmp_3, label %._crit_edge439, label %4" [ethernet_axi_splitter.cpp:135]   --->   Operation 22 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_7)> <Delay = 0.83>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%p_Result_i = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %tmp_data_V, i32 40, i32 47)" [ethernet_axi_splitter.cpp:31->ethernet_axi_splitter.cpp:136]   --->   Operation 23 'partselect' 'p_Result_i' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_7 & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%p_Result_3_i = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %tmp_data_V, i32 32, i32 39)" [ethernet_axi_splitter.cpp:31->ethernet_axi_splitter.cpp:136]   --->   Operation 24 'partselect' 'p_Result_3_i' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_7 & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_i = call i16 @_ssdm_op_BitConcatenate.i16.i8.i8(i8 %p_Result_3_i, i8 %p_Result_i)" [ethernet_axi_splitter.cpp:31->ethernet_axi_splitter.cpp:136]   --->   Operation 25 'bitconcatenate' 'tmp_i' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_7 & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.83ns)   --->   "store i16 %tmp_i, i16* @mac_type_V, align 2" [ethernet_axi_splitter.cpp:136]   --->   Operation 26 'store' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_7 & !tmp_3)> <Delay = 0.83>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%p_Result_2 = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %tmp_data_V, i32 48, i32 55)" [ethernet_axi_splitter.cpp:137]   --->   Operation 27 'partselect' 'p_Result_2' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_7 & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "store i8 %p_Result_2, i8* @ethernet_axi_id_V, align 1" [ethernet_axi_splitter.cpp:137]   --->   Operation 28 'store' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_7 & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.83ns)   --->   "br label %._crit_edge439" [ethernet_axi_splitter.cpp:138]   --->   Operation 29 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_7 & !tmp_3)> <Delay = 0.83>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%word_count_V_flag = phi i1 [ false, %2 ], [ true, %4 ], [ true, %3 ]"   --->   Operation 30 'phi' 'word_count_V_flag' <Predicate = (!fsm_state_V_load & tmp & !cond)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.83ns)   --->   "br label %23" [ethernet_axi_splitter.cpp:185]   --->   Operation 31 'br' <Predicate = (!fsm_state_V_load & tmp & !cond)> <Delay = 0.83>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_24 = trunc i64 %tmp_data_V to i48" [ethernet_axi_splitter.cpp:126]   --->   Operation 32 'trunc' 'tmp_24' <Predicate = (!fsm_state_V_load & tmp & cond)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (1.38ns)   --->   "%tmp_6 = icmp eq i48 %tmp_24, %my_mac_address_V_rea" [ethernet_axi_splitter.cpp:126]   --->   Operation 33 'icmp' 'tmp_6' <Predicate = (!fsm_state_V_load & tmp & cond)> <Delay = 1.38> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (1.38ns)   --->   "%tmp_s = icmp eq i48 %tmp_24, -1" [ethernet_axi_splitter.cpp:126]   --->   Operation 34 'icmp' 'tmp_s' <Predicate = (!fsm_state_V_load & tmp & cond)> <Delay = 1.38> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.33ns)   --->   "%or_cond = or i1 %tmp_6, %tmp_s" [ethernet_axi_splitter.cpp:126]   --->   Operation 35 'or' 'or_cond' <Predicate = (!fsm_state_V_load & tmp & cond)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%storemerge = zext i1 %or_cond to i16" [ethernet_axi_splitter.cpp:126]   --->   Operation 36 'zext' 'storemerge' <Predicate = (!fsm_state_V_load & tmp & cond)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.83ns)   --->   "store i16 %storemerge, i16* @mac_type_V, align 2" [ethernet_axi_splitter.cpp:127]   --->   Operation 37 'store' <Predicate = (!fsm_state_V_load & tmp & cond)> <Delay = 0.83>
ST_1 : Operation 38 [1/1] (0.83ns)   --->   "br label %23" [ethernet_axi_splitter.cpp:131]   --->   Operation 38 'br' <Predicate = (!fsm_state_V_load & tmp & cond)> <Delay = 0.83>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%word_count_V_flag_1 = phi i1 [ true, %._crit_edge438 ], [ %word_count_V_flag, %22 ]"   --->   Operation 39 'phi' 'word_count_V_flag_1' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%word_count_V_new_1 = phi i2 [ 1, %._crit_edge438 ], [ -2, %22 ]"   --->   Operation 40 'phi' 'word_count_V_new_1' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.83ns)   --->   "br i1 %tmp_last_V, label %24, label %._crit_edge458" [ethernet_axi_splitter.cpp:190]   --->   Operation 41 'br' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.83>
ST_1 : Operation 42 [1/1] (0.83ns)   --->   "store i1 true, i1* @fsm_state_V, align 1" [ethernet_axi_splitter.cpp:192]   --->   Operation 42 'store' <Predicate = (!fsm_state_V_load & tmp & tmp_last_V)> <Delay = 0.83>
ST_1 : Operation 43 [1/1] (0.83ns)   --->   "br label %._crit_edge458" [ethernet_axi_splitter.cpp:193]   --->   Operation 43 'br' <Predicate = (!fsm_state_V_load & tmp & tmp_last_V)> <Delay = 0.83>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%word_count_V_flag_2 = phi i1 [ true, %24 ], [ %word_count_V_flag_1, %23 ]"   --->   Operation 44 'phi' 'word_count_V_flag_2' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%word_count_V_new_2 = phi i2 [ 0, %24 ], [ %word_count_V_new_1, %23 ]"   --->   Operation 45 'phi' 'word_count_V_new_2' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "br i1 %word_count_V_flag_2, label %mergeST, label %._crit_edge458.new"   --->   Operation 46 'br' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "store i2 %word_count_V_new_2, i2* @word_count_V, align 1" [ethernet_axi_splitter.cpp:130]   --->   Operation 47 'store' <Predicate = (!fsm_state_V_load & tmp & word_count_V_flag_2)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.83ns)   --->   "store i1 false, i1* @fsm_state_V, align 1" [ethernet_axi_splitter.cpp:241]   --->   Operation 48 'store' <Predicate = (fsm_state_V_load)> <Delay = 0.83>

State 2 <SV = 1> <Delay = 1.09>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%mac_type_V_loc_1 = phi i16 [ %mac_type_V_load, %2 ], [ %tmp_i, %4 ], [ %mac_type_V_load, %3 ]" [ethernet_axi_splitter.cpp:135]   --->   Operation 49 'phi' 'mac_type_V_loc_1' <Predicate = (!fsm_state_V_load & tmp & !cond)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%ethernet_axi_id_V_lo_1 = phi i8 [ %ethernet_axi_id_V_lo, %2 ], [ %p_Result_2, %4 ], [ %ethernet_axi_id_V_lo, %3 ]" [ethernet_axi_splitter.cpp:142]   --->   Operation 50 'phi' 'ethernet_axi_id_V_lo_1' <Predicate = (!fsm_state_V_load & tmp & !cond)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (1.09ns)   --->   "%tmp_10 = icmp eq i16 %mac_type_V_loc_1, 31232" [ethernet_axi_splitter.cpp:142]   --->   Operation 51 'icmp' 'tmp_10' <Predicate = (!fsm_state_V_load & tmp & !cond)> <Delay = 1.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "br i1 %tmp_10, label %5, label %._crit_edge456" [ethernet_axi_splitter.cpp:142]   --->   Operation 52 'br' <Predicate = (!fsm_state_V_load & tmp & !cond)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.78ns)   --->   "%tmp_12 = icmp eq i8 %ethernet_axi_id_V_lo_1, 0" [ethernet_axi_splitter.cpp:142]   --->   Operation 53 'icmp' 'tmp_12' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "br i1 %tmp_12, label %6, label %._crit_edge441" [ethernet_axi_splitter.cpp:142]   --->   Operation 54 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.78ns)   --->   "%tmp_14 = icmp eq i8 %ethernet_axi_id_V_lo_1, 1" [ethernet_axi_splitter.cpp:146]   --->   Operation 55 'icmp' 'tmp_14' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "br i1 %tmp_14, label %7, label %._crit_edge444" [ethernet_axi_splitter.cpp:146]   --->   Operation 56 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.78ns)   --->   "%tmp_16 = icmp eq i8 %ethernet_axi_id_V_lo_1, 2" [ethernet_axi_splitter.cpp:151]   --->   Operation 57 'icmp' 'tmp_16' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "br i1 %tmp_16, label %8, label %._crit_edge445" [ethernet_axi_splitter.cpp:151]   --->   Operation 58 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.78ns)   --->   "%tmp_18 = icmp eq i8 %ethernet_axi_id_V_lo_1, 3" [ethernet_axi_splitter.cpp:156]   --->   Operation 59 'icmp' 'tmp_18' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "br i1 %tmp_18, label %9, label %._crit_edge448" [ethernet_axi_splitter.cpp:156]   --->   Operation 60 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.78ns)   --->   "%tmp_19 = icmp eq i8 %ethernet_axi_id_V_lo_1, 4" [ethernet_axi_splitter.cpp:161]   --->   Operation 61 'icmp' 'tmp_19' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "br i1 %tmp_19, label %10, label %._crit_edge449" [ethernet_axi_splitter.cpp:161]   --->   Operation 62 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.78ns)   --->   "%tmp_20 = icmp eq i8 %ethernet_axi_id_V_lo_1, 5" [ethernet_axi_splitter.cpp:166]   --->   Operation 63 'icmp' 'tmp_20' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "br i1 %tmp_20, label %11, label %._crit_edge452" [ethernet_axi_splitter.cpp:166]   --->   Operation 64 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.78ns)   --->   "%tmp_21 = icmp eq i8 %ethernet_axi_id_V_lo_1, 6" [ethernet_axi_splitter.cpp:171]   --->   Operation 65 'icmp' 'tmp_21' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %tmp_21, label %12, label %._crit_edge453" [ethernet_axi_splitter.cpp:171]   --->   Operation 66 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.78ns)   --->   "%tmp_22 = icmp eq i8 %ethernet_axi_id_V_lo_1, 7" [ethernet_axi_splitter.cpp:176]   --->   Operation 67 'icmp' 'tmp_22' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & !tmp_21)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "br i1 %tmp_22, label %13, label %._crit_edge456" [ethernet_axi_splitter.cpp:176]   --->   Operation 68 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & !tmp_21)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (1.09ns)   --->   "%tmp_23 = icmp eq i16 %mac_type_V_loc_1, 0" [ethernet_axi_splitter.cpp:181]   --->   Operation 69 'icmp' 'tmp_23' <Predicate = (!fsm_state_V_load & tmp & !cond & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & !tmp_21 & !tmp_22) | (!fsm_state_V_load & tmp & !cond & !tmp_10)> <Delay = 1.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "br i1 %tmp_23, label %._crit_edge457, label %14" [ethernet_axi_splitter.cpp:181]   --->   Operation 70 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & !tmp_21 & !tmp_22) | (!fsm_state_V_load & tmp & !cond & !tmp_10)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (1.09ns)   --->   "%tmp_2 = icmp eq i16 %mac_type_V_load, 31232" [ethernet_axi_splitter.cpp:198]   --->   Operation 71 'icmp' 'tmp_2' <Predicate = (fsm_state_V_load)> <Delay = 1.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "br i1 %tmp_2, label %26, label %._crit_edge474" [ethernet_axi_splitter.cpp:198]   --->   Operation 72 'br' <Predicate = (fsm_state_V_load)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.78ns)   --->   "%tmp_4 = icmp eq i8 %ethernet_axi_id_V_lo, 0" [ethernet_axi_splitter.cpp:198]   --->   Operation 73 'icmp' 'tmp_4' <Predicate = (fsm_state_V_load & tmp_2)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "br i1 %tmp_4, label %27, label %._crit_edge459" [ethernet_axi_splitter.cpp:198]   --->   Operation 74 'br' <Predicate = (fsm_state_V_load & tmp_2)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.78ns)   --->   "%tmp_9 = icmp eq i8 %ethernet_axi_id_V_lo, 1" [ethernet_axi_splitter.cpp:202]   --->   Operation 75 'icmp' 'tmp_9' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "br i1 %tmp_9, label %28, label %._crit_edge462" [ethernet_axi_splitter.cpp:202]   --->   Operation 76 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.78ns)   --->   "%tmp_8 = icmp eq i8 %ethernet_axi_id_V_lo, 2" [ethernet_axi_splitter.cpp:207]   --->   Operation 77 'icmp' 'tmp_8' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "br i1 %tmp_8, label %29, label %._crit_edge463" [ethernet_axi_splitter.cpp:207]   --->   Operation 78 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.78ns)   --->   "%tmp_1 = icmp eq i8 %ethernet_axi_id_V_lo, 3" [ethernet_axi_splitter.cpp:212]   --->   Operation 79 'icmp' 'tmp_1' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %30, label %._crit_edge466" [ethernet_axi_splitter.cpp:212]   --->   Operation 80 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.78ns)   --->   "%tmp_5 = icmp eq i8 %ethernet_axi_id_V_lo, 4" [ethernet_axi_splitter.cpp:217]   --->   Operation 81 'icmp' 'tmp_5' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "br i1 %tmp_5, label %31, label %._crit_edge467" [ethernet_axi_splitter.cpp:217]   --->   Operation 82 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.78ns)   --->   "%tmp_11 = icmp eq i8 %ethernet_axi_id_V_lo, 5" [ethernet_axi_splitter.cpp:222]   --->   Operation 83 'icmp' 'tmp_11' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "br i1 %tmp_11, label %32, label %._crit_edge470" [ethernet_axi_splitter.cpp:222]   --->   Operation 84 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.78ns)   --->   "%tmp_13 = icmp eq i8 %ethernet_axi_id_V_lo, 6" [ethernet_axi_splitter.cpp:227]   --->   Operation 85 'icmp' 'tmp_13' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "br i1 %tmp_13, label %33, label %._crit_edge471" [ethernet_axi_splitter.cpp:227]   --->   Operation 86 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11)> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.78ns)   --->   "%tmp_15 = icmp eq i8 %ethernet_axi_id_V_lo, 7" [ethernet_axi_splitter.cpp:232]   --->   Operation 87 'icmp' 'tmp_15' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & !tmp_13)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "br i1 %tmp_15, label %34, label %._crit_edge474" [ethernet_axi_splitter.cpp:232]   --->   Operation 88 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & !tmp_13)> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (1.09ns)   --->   "%tmp_17 = icmp eq i16 %mac_type_V_load, 0" [ethernet_axi_splitter.cpp:237]   --->   Operation 89 'icmp' 'tmp_17' <Predicate = (fsm_state_V_load & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & !tmp_13 & !tmp_15) | (fsm_state_V_load & !tmp_2)> <Delay = 1.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "br i1 %tmp_17, label %._crit_edge475, label %35" [ethernet_axi_splitter.cpp:237]   --->   Operation 90 'br' <Predicate = (fsm_state_V_load & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & !tmp_13 & !tmp_15) | (fsm_state_V_load & !tmp_2)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_data_V_1 = load i64* @prev_word_data_V, align 8" [ethernet_axi_splitter.cpp:143]   --->   Operation 91 'load' 'tmp_data_V_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_keep_V_1 = load i8* @prev_word_keep_V, align 1" [ethernet_axi_splitter.cpp:143]   --->   Operation 92 'load' 'tmp_keep_V_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_last_V_1 = load i1* @prev_word_last_V, align 1" [ethernet_axi_splitter.cpp:143]   --->   Operation 93 'load' 'tmp_last_V_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 94 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %data_out_V_data_V, i8* %data_out_V_keep_V, i1* %data_out_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:182]   --->   Operation 94 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & !tmp_21 & !tmp_22 & !tmp_23) | (!fsm_state_V_load & tmp & !cond & !tmp_10 & !tmp_23)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 95 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_7_V_data_V, i8* %ethernet_axi_7_V_keep_V, i1* %ethernet_axi_7_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:177]   --->   Operation 95 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & !tmp_21 & tmp_22)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 96 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_6_V_data_V, i8* %ethernet_axi_6_V_keep_V, i1* %ethernet_axi_6_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:172]   --->   Operation 96 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & tmp_21)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 97 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_5_V_data_V, i8* %ethernet_axi_5_V_keep_V, i1* %ethernet_axi_5_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:167]   --->   Operation 97 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & tmp_20)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 98 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_4_V_data_V, i8* %ethernet_axi_4_V_keep_V, i1* %ethernet_axi_4_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:162]   --->   Operation 98 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & tmp_19)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 99 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_3_V_data_V, i8* %ethernet_axi_3_V_keep_V, i1* %ethernet_axi_3_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:157]   --->   Operation 99 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & tmp_18)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 100 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_2_V_data_V, i8* %ethernet_axi_2_V_keep_V, i1* %ethernet_axi_2_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:152]   --->   Operation 100 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & tmp_16)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 101 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_1_V_data_V, i8* %ethernet_axi_1_V_keep_V, i1* %ethernet_axi_1_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:147]   --->   Operation 101 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & tmp_14)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 102 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_0_V_data_V, i8* %ethernet_axi_0_V_keep_V, i1* %ethernet_axi_0_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:143]   --->   Operation 102 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & tmp_12)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "store i64 %tmp_data_V, i64* @prev_word_data_V, align 8" [ethernet_axi_splitter.cpp:23->ethernet_axi_splitter.cpp:188]   --->   Operation 103 'store' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "store i8 %tmp_keep_V, i8* @prev_word_keep_V, align 8" [ethernet_axi_splitter.cpp:23->ethernet_axi_splitter.cpp:188]   --->   Operation 104 'store' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "store i1 %tmp_last_V, i1* @prev_word_last_V, align 1" [ethernet_axi_splitter.cpp:23->ethernet_axi_splitter.cpp:188]   --->   Operation 105 'store' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_3 : Operation 106 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %data_out_V_data_V, i8* %data_out_V_keep_V, i1* %data_out_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:238]   --->   Operation 106 'write' <Predicate = (fsm_state_V_load & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & !tmp_13 & !tmp_15 & !tmp_17) | (fsm_state_V_load & !tmp_2 & !tmp_17)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 107 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_7_V_data_V, i8* %ethernet_axi_7_V_keep_V, i1* %ethernet_axi_7_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:233]   --->   Operation 107 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & !tmp_13 & tmp_15)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 108 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_6_V_data_V, i8* %ethernet_axi_6_V_keep_V, i1* %ethernet_axi_6_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:228]   --->   Operation 108 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & tmp_13)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 109 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_5_V_data_V, i8* %ethernet_axi_5_V_keep_V, i1* %ethernet_axi_5_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:223]   --->   Operation 109 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & tmp_11)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 110 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_4_V_data_V, i8* %ethernet_axi_4_V_keep_V, i1* %ethernet_axi_4_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:218]   --->   Operation 110 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & tmp_5)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 111 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_3_V_data_V, i8* %ethernet_axi_3_V_keep_V, i1* %ethernet_axi_3_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:213]   --->   Operation 111 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & tmp_1)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 112 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_2_V_data_V, i8* %ethernet_axi_2_V_keep_V, i1* %ethernet_axi_2_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:208]   --->   Operation 112 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & tmp_8)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 113 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_1_V_data_V, i8* %ethernet_axi_1_V_keep_V, i1* %ethernet_axi_1_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:203]   --->   Operation 113 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & tmp_9)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 114 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_0_V_data_V, i8* %ethernet_axi_0_V_keep_V, i1* %ethernet_axi_0_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:199]   --->   Operation 114 'write' <Predicate = (fsm_state_V_load & tmp_2 & tmp_4)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %data_in_V_data_V), !map !105"   --->   Operation 115 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %data_in_V_keep_V), !map !109"   --->   Operation 116 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 117 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %data_in_V_last_V), !map !113"   --->   Operation 117 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 118 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %ethernet_axi_0_V_data_V), !map !117"   --->   Operation 118 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 119 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %ethernet_axi_0_V_keep_V), !map !121"   --->   Operation 119 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %ethernet_axi_0_V_last_V), !map !125"   --->   Operation 120 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 121 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %ethernet_axi_1_V_data_V), !map !129"   --->   Operation 121 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 122 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %ethernet_axi_1_V_keep_V), !map !133"   --->   Operation 122 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %ethernet_axi_1_V_last_V), !map !137"   --->   Operation 123 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 124 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %ethernet_axi_2_V_data_V), !map !141"   --->   Operation 124 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 125 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %ethernet_axi_2_V_keep_V), !map !145"   --->   Operation 125 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 126 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %ethernet_axi_2_V_last_V), !map !149"   --->   Operation 126 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 127 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %ethernet_axi_3_V_data_V), !map !153"   --->   Operation 127 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 128 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %ethernet_axi_3_V_keep_V), !map !157"   --->   Operation 128 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 129 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %ethernet_axi_3_V_last_V), !map !161"   --->   Operation 129 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 130 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %ethernet_axi_4_V_data_V), !map !165"   --->   Operation 130 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 131 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %ethernet_axi_4_V_keep_V), !map !169"   --->   Operation 131 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 132 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %ethernet_axi_4_V_last_V), !map !173"   --->   Operation 132 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 133 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %ethernet_axi_5_V_data_V), !map !177"   --->   Operation 133 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 134 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %ethernet_axi_5_V_keep_V), !map !181"   --->   Operation 134 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 135 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %ethernet_axi_5_V_last_V), !map !185"   --->   Operation 135 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 136 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %ethernet_axi_6_V_data_V), !map !189"   --->   Operation 136 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 137 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %ethernet_axi_6_V_keep_V), !map !193"   --->   Operation 137 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 138 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %ethernet_axi_6_V_last_V), !map !197"   --->   Operation 138 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 139 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %ethernet_axi_7_V_data_V), !map !201"   --->   Operation 139 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 140 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %ethernet_axi_7_V_keep_V), !map !205"   --->   Operation 140 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 141 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %ethernet_axi_7_V_last_V), !map !209"   --->   Operation 141 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 142 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %data_out_V_data_V), !map !213"   --->   Operation 142 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 143 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %data_out_V_keep_V), !map !217"   --->   Operation 143 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 144 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %data_out_V_last_V), !map !221"   --->   Operation 144 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 145 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i48 %my_mac_address_V), !map !225"   --->   Operation 145 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 146 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([22 x i8]* @ethernet_axi_splitte) nounwind"   --->   Operation 146 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 147 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 2, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [ethernet_axi_splitter.cpp:73]   --->   Operation 147 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 148 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [ethernet_axi_splitter.cpp:74]   --->   Operation 148 'specinterface' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 149 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %data_in_V_data_V, i8* %data_in_V_keep_V, i1* %data_in_V_last_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [ethernet_axi_splitter.cpp:75]   --->   Operation 149 'specinterface' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 150 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %ethernet_axi_0_V_data_V, i8* %ethernet_axi_0_V_keep_V, i1* %ethernet_axi_0_V_last_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [ethernet_axi_splitter.cpp:76]   --->   Operation 150 'specinterface' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 151 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %ethernet_axi_1_V_data_V, i8* %ethernet_axi_1_V_keep_V, i1* %ethernet_axi_1_V_last_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [ethernet_axi_splitter.cpp:79]   --->   Operation 151 'specinterface' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 152 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %ethernet_axi_2_V_data_V, i8* %ethernet_axi_2_V_keep_V, i1* %ethernet_axi_2_V_last_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [ethernet_axi_splitter.cpp:83]   --->   Operation 152 'specinterface' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 153 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %ethernet_axi_3_V_data_V, i8* %ethernet_axi_3_V_keep_V, i1* %ethernet_axi_3_V_last_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [ethernet_axi_splitter.cpp:87]   --->   Operation 153 'specinterface' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 154 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %ethernet_axi_4_V_data_V, i8* %ethernet_axi_4_V_keep_V, i1* %ethernet_axi_4_V_last_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [ethernet_axi_splitter.cpp:91]   --->   Operation 154 'specinterface' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 155 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %ethernet_axi_5_V_data_V, i8* %ethernet_axi_5_V_keep_V, i1* %ethernet_axi_5_V_last_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [ethernet_axi_splitter.cpp:95]   --->   Operation 155 'specinterface' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 156 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %ethernet_axi_6_V_data_V, i8* %ethernet_axi_6_V_keep_V, i1* %ethernet_axi_6_V_last_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [ethernet_axi_splitter.cpp:99]   --->   Operation 156 'specinterface' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 157 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %ethernet_axi_7_V_data_V, i8* %ethernet_axi_7_V_keep_V, i1* %ethernet_axi_7_V_last_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [ethernet_axi_splitter.cpp:103]   --->   Operation 157 'specinterface' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 158 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %data_out_V_data_V, i8* %data_out_V_keep_V, i1* %data_out_V_last_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [ethernet_axi_splitter.cpp:107]   --->   Operation 158 'specinterface' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 159 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i48 %my_mac_address_V, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [ethernet_axi_splitter.cpp:110]   --->   Operation 159 'specinterface' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 160 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %data_out_V_data_V, i8* %data_out_V_keep_V, i1* %data_out_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:182]   --->   Operation 160 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & !tmp_21 & !tmp_22 & !tmp_23) | (!fsm_state_V_load & tmp & !cond & !tmp_10 & !tmp_23)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 161 [1/1] (0.00ns)   --->   "br label %._crit_edge457" [ethernet_axi_splitter.cpp:182]   --->   Operation 161 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & !tmp_21 & !tmp_22 & !tmp_23) | (!fsm_state_V_load & tmp & !cond & !tmp_10 & !tmp_23)> <Delay = 0.00>
ST_4 : Operation 162 [1/1] (0.00ns)   --->   "br label %15"   --->   Operation 162 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & !tmp_21 & !tmp_22) | (!fsm_state_V_load & tmp & !cond & !tmp_10)> <Delay = 0.00>
ST_4 : Operation 163 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_7_V_data_V, i8* %ethernet_axi_7_V_keep_V, i1* %ethernet_axi_7_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:177]   --->   Operation 163 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & !tmp_21 & tmp_22)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 164 [1/1] (0.00ns)   --->   "br label %15" [ethernet_axi_splitter.cpp:177]   --->   Operation 164 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & !tmp_21 & tmp_22)> <Delay = 0.00>
ST_4 : Operation 165 [1/1] (0.00ns)   --->   "br label %16"   --->   Operation 165 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & !tmp_21) | (!fsm_state_V_load & tmp & !cond & !tmp_10)> <Delay = 0.00>
ST_4 : Operation 166 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_6_V_data_V, i8* %ethernet_axi_6_V_keep_V, i1* %ethernet_axi_6_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:172]   --->   Operation 166 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & tmp_21)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 167 [1/1] (0.00ns)   --->   "br label %16" [ethernet_axi_splitter.cpp:172]   --->   Operation 167 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20 & tmp_21)> <Delay = 0.00>
ST_4 : Operation 168 [1/1] (0.00ns)   --->   "br label %17"   --->   Operation 168 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & !tmp_20) | (!fsm_state_V_load & tmp & !cond & !tmp_10)> <Delay = 0.00>
ST_4 : Operation 169 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_5_V_data_V, i8* %ethernet_axi_5_V_keep_V, i1* %ethernet_axi_5_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:167]   --->   Operation 169 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & tmp_20)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 170 [1/1] (0.00ns)   --->   "br label %17" [ethernet_axi_splitter.cpp:167]   --->   Operation 170 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19 & tmp_20)> <Delay = 0.00>
ST_4 : Operation 171 [1/1] (0.00ns)   --->   "br label %18"   --->   Operation 171 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & !tmp_19) | (!fsm_state_V_load & tmp & !cond & !tmp_10)> <Delay = 0.00>
ST_4 : Operation 172 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_4_V_data_V, i8* %ethernet_axi_4_V_keep_V, i1* %ethernet_axi_4_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:162]   --->   Operation 172 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & tmp_19)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 173 [1/1] (0.00ns)   --->   "br label %18" [ethernet_axi_splitter.cpp:162]   --->   Operation 173 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18 & tmp_19)> <Delay = 0.00>
ST_4 : Operation 174 [1/1] (0.00ns)   --->   "br label %19"   --->   Operation 174 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & !tmp_12 & !tmp_14 & !tmp_16 & !tmp_18) | (!fsm_state_V_load & tmp & !cond & !tmp_10)> <Delay = 0.00>
ST_4 : Operation 175 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_3_V_data_V, i8* %ethernet_axi_3_V_keep_V, i1* %ethernet_axi_3_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:157]   --->   Operation 175 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & tmp_18)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 176 [1/1] (0.00ns)   --->   "br label %19" [ethernet_axi_splitter.cpp:157]   --->   Operation 176 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & !tmp_16 & tmp_18)> <Delay = 0.00>
ST_4 : Operation 177 [1/1] (0.00ns)   --->   "br label %20"   --->   Operation 177 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & !tmp_12 & !tmp_14 & !tmp_16) | (!fsm_state_V_load & tmp & !cond & !tmp_10)> <Delay = 0.00>
ST_4 : Operation 178 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_2_V_data_V, i8* %ethernet_axi_2_V_keep_V, i1* %ethernet_axi_2_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:152]   --->   Operation 178 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & tmp_16)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 179 [1/1] (0.00ns)   --->   "br label %20" [ethernet_axi_splitter.cpp:152]   --->   Operation 179 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & !tmp_14 & tmp_16)> <Delay = 0.00>
ST_4 : Operation 180 [1/1] (0.00ns)   --->   "br label %21"   --->   Operation 180 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & !tmp_12 & !tmp_14) | (!fsm_state_V_load & tmp & !cond & !tmp_10)> <Delay = 0.00>
ST_4 : Operation 181 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_1_V_data_V, i8* %ethernet_axi_1_V_keep_V, i1* %ethernet_axi_1_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:147]   --->   Operation 181 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & tmp_14)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 182 [1/1] (0.00ns)   --->   "br label %21" [ethernet_axi_splitter.cpp:147]   --->   Operation 182 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & !tmp_12 & tmp_14)> <Delay = 0.00>
ST_4 : Operation 183 [1/1] (0.00ns)   --->   "br label %22"   --->   Operation 183 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & !tmp_12) | (!fsm_state_V_load & tmp & !cond & !tmp_10)> <Delay = 0.00>
ST_4 : Operation 184 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_0_V_data_V, i8* %ethernet_axi_0_V_keep_V, i1* %ethernet_axi_0_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:143]   --->   Operation 184 'write' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & tmp_12)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 185 [1/1] (0.00ns)   --->   "br label %22" [ethernet_axi_splitter.cpp:143]   --->   Operation 185 'br' <Predicate = (!fsm_state_V_load & tmp & !cond & tmp_10 & tmp_12)> <Delay = 0.00>
ST_4 : Operation 186 [1/1] (0.00ns)   --->   "br label %._crit_edge458.new"   --->   Operation 186 'br' <Predicate = (!fsm_state_V_load & tmp & word_count_V_flag_2)> <Delay = 0.00>
ST_4 : Operation 187 [1/1] (0.00ns)   --->   "br label %._crit_edge435" [ethernet_axi_splitter.cpp:194]   --->   Operation 187 'br' <Predicate = (!fsm_state_V_load & tmp)> <Delay = 0.00>
ST_4 : Operation 188 [1/1] (0.00ns)   --->   "br label %._crit_edge434" [ethernet_axi_splitter.cpp:195]   --->   Operation 188 'br' <Predicate = (!fsm_state_V_load)> <Delay = 0.00>
ST_4 : Operation 189 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %data_out_V_data_V, i8* %data_out_V_keep_V, i1* %data_out_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:238]   --->   Operation 189 'write' <Predicate = (fsm_state_V_load & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & !tmp_13 & !tmp_15 & !tmp_17) | (fsm_state_V_load & !tmp_2 & !tmp_17)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 190 [1/1] (0.00ns)   --->   "br label %._crit_edge475" [ethernet_axi_splitter.cpp:238]   --->   Operation 190 'br' <Predicate = (fsm_state_V_load & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & !tmp_13 & !tmp_15 & !tmp_17) | (fsm_state_V_load & !tmp_2 & !tmp_17)> <Delay = 0.00>
ST_4 : Operation 191 [1/1] (0.00ns)   --->   "br label %36"   --->   Operation 191 'br' <Predicate = (fsm_state_V_load & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & !tmp_13 & !tmp_15) | (fsm_state_V_load & !tmp_2)> <Delay = 0.00>
ST_4 : Operation 192 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_7_V_data_V, i8* %ethernet_axi_7_V_keep_V, i1* %ethernet_axi_7_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:233]   --->   Operation 192 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & !tmp_13 & tmp_15)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 193 [1/1] (0.00ns)   --->   "br label %36" [ethernet_axi_splitter.cpp:233]   --->   Operation 193 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & !tmp_13 & tmp_15)> <Delay = 0.00>
ST_4 : Operation 194 [1/1] (0.00ns)   --->   "br label %37"   --->   Operation 194 'br' <Predicate = (fsm_state_V_load & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & !tmp_13) | (fsm_state_V_load & !tmp_2)> <Delay = 0.00>
ST_4 : Operation 195 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_6_V_data_V, i8* %ethernet_axi_6_V_keep_V, i1* %ethernet_axi_6_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:228]   --->   Operation 195 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & tmp_13)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 196 [1/1] (0.00ns)   --->   "br label %37" [ethernet_axi_splitter.cpp:228]   --->   Operation 196 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11 & tmp_13)> <Delay = 0.00>
ST_4 : Operation 197 [1/1] (0.00ns)   --->   "br label %38"   --->   Operation 197 'br' <Predicate = (fsm_state_V_load & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & !tmp_11) | (fsm_state_V_load & !tmp_2)> <Delay = 0.00>
ST_4 : Operation 198 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_5_V_data_V, i8* %ethernet_axi_5_V_keep_V, i1* %ethernet_axi_5_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:223]   --->   Operation 198 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & tmp_11)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 199 [1/1] (0.00ns)   --->   "br label %38" [ethernet_axi_splitter.cpp:223]   --->   Operation 199 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5 & tmp_11)> <Delay = 0.00>
ST_4 : Operation 200 [1/1] (0.00ns)   --->   "br label %39"   --->   Operation 200 'br' <Predicate = (fsm_state_V_load & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & !tmp_5) | (fsm_state_V_load & !tmp_2)> <Delay = 0.00>
ST_4 : Operation 201 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_4_V_data_V, i8* %ethernet_axi_4_V_keep_V, i1* %ethernet_axi_4_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:218]   --->   Operation 201 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & tmp_5)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 202 [1/1] (0.00ns)   --->   "br label %39" [ethernet_axi_splitter.cpp:218]   --->   Operation 202 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1 & tmp_5)> <Delay = 0.00>
ST_4 : Operation 203 [1/1] (0.00ns)   --->   "br label %40"   --->   Operation 203 'br' <Predicate = (fsm_state_V_load & !tmp_4 & !tmp_9 & !tmp_8 & !tmp_1) | (fsm_state_V_load & !tmp_2)> <Delay = 0.00>
ST_4 : Operation 204 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_3_V_data_V, i8* %ethernet_axi_3_V_keep_V, i1* %ethernet_axi_3_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:213]   --->   Operation 204 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & tmp_1)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 205 [1/1] (0.00ns)   --->   "br label %40" [ethernet_axi_splitter.cpp:213]   --->   Operation 205 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & !tmp_8 & tmp_1)> <Delay = 0.00>
ST_4 : Operation 206 [1/1] (0.00ns)   --->   "br label %41"   --->   Operation 206 'br' <Predicate = (fsm_state_V_load & !tmp_4 & !tmp_9 & !tmp_8) | (fsm_state_V_load & !tmp_2)> <Delay = 0.00>
ST_4 : Operation 207 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_2_V_data_V, i8* %ethernet_axi_2_V_keep_V, i1* %ethernet_axi_2_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:208]   --->   Operation 207 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & tmp_8)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 208 [1/1] (0.00ns)   --->   "br label %41" [ethernet_axi_splitter.cpp:208]   --->   Operation 208 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & !tmp_9 & tmp_8)> <Delay = 0.00>
ST_4 : Operation 209 [1/1] (0.00ns)   --->   "br label %42"   --->   Operation 209 'br' <Predicate = (fsm_state_V_load & !tmp_4 & !tmp_9) | (fsm_state_V_load & !tmp_2)> <Delay = 0.00>
ST_4 : Operation 210 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_1_V_data_V, i8* %ethernet_axi_1_V_keep_V, i1* %ethernet_axi_1_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:203]   --->   Operation 210 'write' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & tmp_9)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 211 [1/1] (0.00ns)   --->   "br label %42" [ethernet_axi_splitter.cpp:203]   --->   Operation 211 'br' <Predicate = (fsm_state_V_load & tmp_2 & !tmp_4 & tmp_9)> <Delay = 0.00>
ST_4 : Operation 212 [1/1] (0.00ns)   --->   "br label %43"   --->   Operation 212 'br' <Predicate = (fsm_state_V_load & !tmp_4) | (fsm_state_V_load & !tmp_2)> <Delay = 0.00>
ST_4 : Operation 213 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i1P(i64* %ethernet_axi_0_V_data_V, i8* %ethernet_axi_0_V_keep_V, i1* %ethernet_axi_0_V_last_V, i64 %tmp_data_V_1, i8 %tmp_keep_V_1, i1 %tmp_last_V_1)" [ethernet_axi_splitter.cpp:199]   --->   Operation 213 'write' <Predicate = (fsm_state_V_load & tmp_2 & tmp_4)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 214 [1/1] (0.00ns)   --->   "br label %43" [ethernet_axi_splitter.cpp:199]   --->   Operation 214 'br' <Predicate = (fsm_state_V_load & tmp_2 & tmp_4)> <Delay = 0.00>
ST_4 : Operation 215 [1/1] (0.00ns)   --->   "br label %._crit_edge434" [ethernet_axi_splitter.cpp:242]   --->   Operation 215 'br' <Predicate = (fsm_state_V_load)> <Delay = 0.00>
ST_4 : Operation 216 [1/1] (0.00ns)   --->   "ret void" [ethernet_axi_splitter.cpp:245]   --->   Operation 216 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.3ns, clock uncertainty: 0.3ns.

 <State 1>: 3.6ns
The critical path consists of the following:
	'load' operation ('mac_type_V_load', ethernet_axi_splitter.cpp:135) on static variable 'mac_type_V' [86]  (0 ns)
	'icmp' operation ('tmp_3', ethernet_axi_splitter.cpp:135) [107]  (1.1 ns)
	multiplexor before 'phi' operation ('word_count_V_flag') [118]  (0.835 ns)
	'phi' operation ('word_count_V_flag') [118]  (0 ns)
	multiplexor before 'phi' operation ('word_count_V_flag_1') [204]  (0.835 ns)
	'phi' operation ('word_count_V_flag_1') [204]  (0 ns)
	multiplexor before 'phi' operation ('word_count_V_flag_2') [214]  (0.835 ns)
	'phi' operation ('word_count_V_flag_2') [214]  (0 ns)

 <State 2>: 1.1ns
The critical path consists of the following:
	'phi' operation ('mac_type_V_loc_1', ethernet_axi_splitter.cpp:135) with incoming values : ('mac_type_V_load', ethernet_axi_splitter.cpp:135) ('tmp_i', ethernet_axi_splitter.cpp:31->ethernet_axi_splitter.cpp:136) [119]  (0 ns)
	'icmp' operation ('tmp_23', ethernet_axi_splitter.cpp:181) [148]  (1.1 ns)

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
