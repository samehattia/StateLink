// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="axis_timestamper,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku040-ffva1156-2-e,HLS_INPUT_CLOCK=3.300000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.030000,HLS_SYN_LAT=0,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=66,HLS_SYN_LUT=212,HLS_VERSION=2018_3}" *)

module axis_timestamper (
        ap_clk,
        ap_rst_n,
        data_in_TDATA,
        data_in_TVALID,
        data_in_TREADY,
        data_in_TKEEP,
        data_in_TLAST,
        data_out_TDATA,
        data_out_TVALID,
        data_out_TREADY,
        data_out_TKEEP,
        data_out_TLAST,
        start_V
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [63:0] data_in_TDATA;
input   data_in_TVALID;
output   data_in_TREADY;
input  [7:0] data_in_TKEEP;
input  [0:0] data_in_TLAST;
output  [63:0] data_out_TDATA;
output   data_out_TVALID;
input   data_out_TREADY;
output  [7:0] data_out_TKEEP;
output  [0:0] data_out_TLAST;
input  [0:0] start_V;

reg data_in_TREADY;
reg[63:0] data_out_TDATA;
reg data_out_TVALID;
reg[7:0] data_out_TKEEP;
reg[0:0] data_out_TLAST;

 reg    ap_rst_n_inv;
reg   [63:0] timestamp_V;
reg   [0:0] timestamp_flag_V;
reg    data_in_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] tmp_1_nbreadreq_fu_70_p5;
wire   [0:0] tmp_2_nbwritereq_fu_82_p5;
reg    data_out_TDATA_blk_n;
wire   [63:0] out_word_data_V_fu_129_p3;
reg    ap_predicate_op26_read_state1;
reg    ap_block_state1;
reg    ap_predicate_op30_write_state1;
reg    ap_predicate_op35_write_state1;
reg    ap_block_state1_io;
wire   [0:0] tmp_last_V_fu_158_p1;
wire   [63:0] tmp_fu_123_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_condition_87;
reg    ap_condition_125;

// power-on initialization
initial begin
#0 timestamp_V = 64'd0;
#0 timestamp_flag_V = 1'd1;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_125)) begin
        if ((timestamp_flag_V == 1'd1)) begin
            timestamp_flag_V <= 1'd0;
        end else if (((timestamp_flag_V == 1'd0) & (tmp_last_V_fu_158_p1 == 1'd1))) begin
            timestamp_flag_V <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_io) | ((data_in_TVALID == 1'b0) & (ap_predicate_op26_read_state1 == 1'b1))) & (1'b1 == ap_CS_fsm_state1))) begin
        timestamp_V <= out_word_data_V_fu_129_p3;
    end
end

always @ (*) begin
    if (((timestamp_flag_V == 1'd0) & (tmp_2_nbwritereq_fu_82_p5 == 1'd1) & (tmp_1_nbreadreq_fu_70_p5 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_in_TDATA_blk_n = data_in_TVALID;
    end else begin
        data_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_io) | ((data_in_TVALID == 1'b0) & (ap_predicate_op26_read_state1 == 1'b1))) & (ap_predicate_op26_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_in_TREADY = 1'b1;
    end else begin
        data_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_87)) begin
        if ((ap_predicate_op35_write_state1 == 1'b1)) begin
            data_out_TDATA = out_word_data_V_fu_129_p3;
        end else if ((ap_predicate_op30_write_state1 == 1'b1)) begin
            data_out_TDATA = data_in_TDATA;
        end else begin
            data_out_TDATA = 'bx;
        end
    end else begin
        data_out_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((timestamp_flag_V == 1'd1) & (tmp_2_nbwritereq_fu_82_p5 == 1'd1) & (tmp_1_nbreadreq_fu_70_p5 == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((timestamp_flag_V == 1'd0) & (tmp_2_nbwritereq_fu_82_p5 == 1'd1) & (tmp_1_nbreadreq_fu_70_p5 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        data_out_TDATA_blk_n = data_out_TREADY;
    end else begin
        data_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_87)) begin
        if ((ap_predicate_op35_write_state1 == 1'b1)) begin
            data_out_TKEEP = 8'd255;
        end else if ((ap_predicate_op30_write_state1 == 1'b1)) begin
            data_out_TKEEP = data_in_TKEEP;
        end else begin
            data_out_TKEEP = 'bx;
        end
    end else begin
        data_out_TKEEP = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_87)) begin
        if ((ap_predicate_op35_write_state1 == 1'b1)) begin
            data_out_TLAST = 1'd0;
        end else if ((ap_predicate_op30_write_state1 == 1'b1)) begin
            data_out_TLAST = data_in_TLAST;
        end else begin
            data_out_TLAST = 'bx;
        end
    end else begin
        data_out_TLAST = 'bx;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state1_io) | ((data_in_TVALID == 1'b0) & (ap_predicate_op26_read_state1 == 1'b1))) & (ap_predicate_op35_write_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | (~((1'b1 == ap_block_state1_io) | ((data_in_TVALID == 1'b0) & (ap_predicate_op26_read_state1 == 1'b1))) & (ap_predicate_op30_write_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        data_out_TVALID = 1'b1;
    end else begin
        data_out_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((data_in_TVALID == 1'b0) & (ap_predicate_op26_read_state1 == 1'b1));
end

always @ (*) begin
    ap_block_state1_io = (((data_out_TREADY == 1'b0) & (ap_predicate_op35_write_state1 == 1'b1)) | ((data_out_TREADY == 1'b0) & (ap_predicate_op30_write_state1 == 1'b1)));
end

always @ (*) begin
    ap_condition_125 = (~((1'b1 == ap_block_state1_io) | ((data_in_TVALID == 1'b0) & (ap_predicate_op26_read_state1 == 1'b1))) & (tmp_2_nbwritereq_fu_82_p5 == 1'd1) & (tmp_1_nbreadreq_fu_70_p5 == 1'd1) & (1'b1 == ap_CS_fsm_state1));
end

always @ (*) begin
    ap_condition_87 = (~((data_in_TVALID == 1'b0) & (ap_predicate_op26_read_state1 == 1'b1)) & (1'b1 == ap_CS_fsm_state1));
end

always @ (*) begin
    ap_predicate_op26_read_state1 = ((timestamp_flag_V == 1'd0) & (tmp_2_nbwritereq_fu_82_p5 == 1'd1) & (tmp_1_nbreadreq_fu_70_p5 == 1'd1));
end

always @ (*) begin
    ap_predicate_op30_write_state1 = ((timestamp_flag_V == 1'd0) & (tmp_2_nbwritereq_fu_82_p5 == 1'd1) & (tmp_1_nbreadreq_fu_70_p5 == 1'd1));
end

always @ (*) begin
    ap_predicate_op35_write_state1 = ((timestamp_flag_V == 1'd1) & (tmp_2_nbwritereq_fu_82_p5 == 1'd1) & (tmp_1_nbreadreq_fu_70_p5 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign out_word_data_V_fu_129_p3 = ((start_V[0:0] === 1'b1) ? tmp_fu_123_p2 : 64'd0);

assign tmp_1_nbreadreq_fu_70_p5 = data_in_TVALID;

assign tmp_2_nbwritereq_fu_82_p5 = data_out_TREADY;

assign tmp_fu_123_p2 = (timestamp_V + 64'd1);

assign tmp_last_V_fu_158_p1 = data_in_TLAST;

endmodule //axis_timestamper
