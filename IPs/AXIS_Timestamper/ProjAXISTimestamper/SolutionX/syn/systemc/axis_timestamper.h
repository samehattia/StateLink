// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _axis_timestamper_HH_
#define _axis_timestamper_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct axis_timestamper : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<64> > data_in_TDATA;
    sc_in< sc_logic > data_in_TVALID;
    sc_out< sc_logic > data_in_TREADY;
    sc_in< sc_lv<8> > data_in_TKEEP;
    sc_in< sc_lv<1> > data_in_TLAST;
    sc_out< sc_lv<64> > data_out_TDATA;
    sc_out< sc_logic > data_out_TVALID;
    sc_in< sc_logic > data_out_TREADY;
    sc_out< sc_lv<8> > data_out_TKEEP;
    sc_out< sc_lv<1> > data_out_TLAST;
    sc_in< sc_lv<1> > start_V;


    // Module declarations
    axis_timestamper(sc_module_name name);
    SC_HAS_PROCESS(axis_timestamper);

    ~axis_timestamper();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<64> > timestamp_V;
    sc_signal< sc_lv<1> > timestamp_flag_V;
    sc_signal< sc_logic > data_in_TDATA_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_1_nbreadreq_fu_70_p5;
    sc_signal< sc_lv<1> > tmp_2_nbwritereq_fu_82_p5;
    sc_signal< sc_logic > data_out_TDATA_blk_n;
    sc_signal< sc_lv<64> > out_word_data_V_fu_129_p3;
    sc_signal< bool > ap_predicate_op26_read_state1;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_predicate_op30_write_state1;
    sc_signal< bool > ap_predicate_op35_write_state1;
    sc_signal< bool > ap_block_state1_io;
    sc_signal< sc_lv<1> > tmp_last_V_fu_158_p1;
    sc_signal< sc_lv<64> > tmp_fu_123_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< bool > ap_condition_87;
    sc_signal< bool > ap_condition_125;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<64> ap_const_lv64_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_block_state1_io();
    void thread_ap_condition_125();
    void thread_ap_condition_87();
    void thread_ap_predicate_op26_read_state1();
    void thread_ap_predicate_op30_write_state1();
    void thread_ap_predicate_op35_write_state1();
    void thread_ap_rst_n_inv();
    void thread_data_in_TDATA_blk_n();
    void thread_data_in_TREADY();
    void thread_data_out_TDATA();
    void thread_data_out_TDATA_blk_n();
    void thread_data_out_TKEEP();
    void thread_data_out_TLAST();
    void thread_data_out_TVALID();
    void thread_out_word_data_V_fu_129_p3();
    void thread_tmp_1_nbreadreq_fu_70_p5();
    void thread_tmp_2_nbwritereq_fu_82_p5();
    void thread_tmp_fu_123_p2();
    void thread_tmp_last_V_fu_158_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
